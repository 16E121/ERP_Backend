{"version":3,"file":"static/js/2519.cf35a5e5.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/List.js","../node_modules/@mui/icons-material/esm/SettingsOutlined.js","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx","../node_modules/@mui/icons-material/esm/ArrowBackIosNewOutlined.js","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FileDownload.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/export-to-csv/output/index.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton, Button, Popover, MenuList, MenuItem, ListItemIcon, ListItemText, Tooltip } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {'top'|'middle'|'bottom'} verticalAlign\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} name\r\n * @property {Element} icon\r\n * @property {Function} onclick\r\n * @property {boolean} disabled\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {''} [props.title]\r\n * @param {boolean} [props.PDFPrintOption]\r\n * @param {boolean} [props.ExcelPrintOption]\r\n * @param {boolean} [props.maxHeightOption]\r\n * @param {React.ReactElement} [props.ButtonArea]\r\n * @param {Array<Menu>} props.MenuButtons\r\n */\r\n\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'middle') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst createPopUpMenu = (name, icon, onclick, disabled = false) => (\r\n    <MenuItem\r\n        onClick={onclick}\r\n        disabled={disabled}\r\n    >\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText>{name}</ListItemText>\r\n    </MenuItem>\r\n)\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = []\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            ) + (\r\n                                                    column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                                )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    ) + (\r\n                                            column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                        )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const TableActions = () => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Tooltip title='Export options and more...'>\r\n                    <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Popover\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        {maxHeightOption && (\r\n                            <MenuItem\r\n                                onClick={() => setShowFullHeight(pre => !pre)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    {showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />\r\n                                    }\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    color={showFullHeight ? 'success' : ''}\r\n                                >Max Height</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {PDFPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => generatePDF(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download PDF</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {ExcelPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => exportToExcel(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download Excel</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {MenuButtons.map(btn => createPopUpMenu(btn.name, btn.icon, btn.onclick, btn.disabled))}\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='rounded-3 bg-white overflow-hidden'>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {/* {maxHeightOption && (\r\n                    <div>\r\n                        <label className=\"form-check-label p-1\" htmlFor=\"fullHeight\">Max Height</label>\r\n                        <input\r\n                            className=\"form-check-input shadow-none\"\r\n                            style={{ padding: '0.7em' }}\r\n                            type=\"checkbox\"\r\n                            id=\"fullHeight\"\r\n                            checked={showFullHeight}\r\n                            onChange={e => setShowFullHeight(e.target.checked)}\r\n                        />\r\n                    </div>\r\n                )} */}\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && <TableActions />}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: []\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    // createPopUpMenu,\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3zm0 4h2v-2H3zm0-8h2V7H3zm4 4h14v-2H7zm0 4h14v-2H7zM7 7v2h14V7z\"\n}), 'List');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}), 'SettingsOutlined');","import React from 'react';\r\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\nimport { fetchLink } from './fetchComponent';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [];\r\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\r\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\r\n            //     : null\r\n            // )\r\n            return {\r\n                filterVariant: 'text',\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DynamicMuiTable = ({ reportId, company, queryFilters, buttons, groupingState }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(dataArray);\r\n    const filterCount = Object.keys(filters).length;\r\n    const showData = (filterCount > 0) ? filteredData : dataArray;\r\n    const [aggregationValues, setAggregationValues] = useState({});\r\n    const [dialogs, setDialogs] = useState({\r\n        filters: false,\r\n        aggregations: false\r\n    });\r\n    console.log(groupingState)\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template?ReportId=${reportId}`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                if (data.data[0]) {\r\n\r\n                    const o = data.data[0];\r\n                    const strucre = {\r\n                        Report_Type_Id: o?.Report_Type_Id,\r\n                        reportName: o?.Report_Name,\r\n                        tables: o?.tablesList?.map(table => ({\r\n                            Table_Id: table?.Table_Id,\r\n                            Table_Name: table?.Table_Name,\r\n                            AliasName: table?.AliasName,\r\n                            Table_Accronym: table?.Table_Accronym,\r\n                            isChecked: true,\r\n                            columns: table?.columnsList?.map(column => ({\r\n                                Column_Data_Type: column?.Column_Data_Type,\r\n                                Column_Name: column?.Column_Name,\r\n                                IS_Default: column?.IS_Default,\r\n                                IS_Join_Key: column?.IS_Join_Key,\r\n                                Order_By: column?.Order_By,\r\n                                Table_Id: column?.Table_Id,\r\n                                isVisible: true,\r\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\r\n                            }))\r\n                        }))\r\n                    }\r\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\r\n                        return colArr.concat(table.columns);\r\n                    }, []);\r\n                    setColumns(allColumns);\r\n                }\r\n            }\r\n        }).catch(e => console.log(e))\r\n\r\n    }, [reportId])\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            fetchLink({\r\n                address: `reports/template/executeQuery`,\r\n                method: 'POST',\r\n                headers: {\r\n                    'Db': company,\r\n                },\r\n                bodyData: {\r\n                    filterReq: queryFilters,\r\n                    ReportID: reportId\r\n                }\r\n            }).then(data => {\r\n                if (data?.success) {\r\n                    setDataArray(data?.data);\r\n                }\r\n            }).catch(e => console.log(e))\r\n        }\r\n    }, [company, reportId])\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\r\n\r\n        const muiColumns = displayColumns.filter(column =>\r\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\r\n        ).map(column => ({\r\n            header: column?.Column_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.accessColumnName,\r\n            sortable: true,\r\n            size: 150,\r\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\r\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\r\n            AggregatedCell: ({ cell }) => (\r\n                <div className='blue-text text-center float-end w-100'>\r\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\r\n                </div>\r\n            ),\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100`}>\r\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Column_Data_Type),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns, aggregationValues])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleExportRows = (rows) => {\r\n        const rowData = rows.map((row) => row.original);\r\n        const csv = generateCsv(csvConfig)(rowData);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const handleExportData = () => {\r\n        const csv = generateCsv(csvConfig)(dataArray);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: showData || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            // grouping: groupingState?.filter(o => typeof o === 'string')\r\n            // .filter(o => {\r\n            //     const ind = dispColmn.findIndex(indVal => indVal?.accessorKey === o);\r\n            //     return ind !== -1; \r\n            // })\r\n            // ,\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\r\n        muiTableProps: {\r\n            sx: {\r\n                caption: {\r\n                    captionSide: 'top',\r\n                },\r\n            },\r\n        },\r\n        muiTableHeadCellProps: {\r\n            sx: {\r\n                fontWeight: 'normal',\r\n            },\r\n            className: ' border text-center'\r\n        },\r\n        muiTableBodyCellProps: {\r\n            className: ' border-end text-center'\r\n        },\r\n        renderTopToolbarCustomActions: ({ table }) => (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    gap: '16px',\r\n                    padding: '8px',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={handleExportData}\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    All Data\r\n                </Button>\r\n                <Button\r\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                    onClick={() =>\r\n                        handleExportRows(table.getPrePaginationRowModel().rows)\r\n                    }\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    Filtered Rows\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\r\n                    startIcon={<SettingsOutlined />}\r\n                >\r\n                    Aggregation\r\n                </Button>\r\n                {/*  */}\r\n                {/* {buttons({grouping: table.getState().grouping})} */}\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\r\n                    className=\"d-md-none d-inline\"\r\n                    startIcon={<FilterAlt />}\r\n                >\r\n                    Filters\r\n                </Button>\r\n            </Box>\r\n        ),\r\n    })\r\n\r\n    const memoizedTableConfig = useMemo(() => table, [table, aggregationValues, showData, groupingState]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dataArray];\r\n        for (const column of columns) {\r\n            if (filters[column.accessColumnName]) {\r\n                if (filters[column.accessColumnName].type === 'range') {\r\n                    const { min, max } = filters[column.accessColumnName];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.accessColumnName];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.accessColumnName].type === 'date') {\r\n                    const { start, end } = filters[column.accessColumnName].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.accessColumnName]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.accessColumnName])) {\r\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${accessColumnName}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[accessColumnName] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Column_Name?.replace(/_/g, ' ')}\r\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row \">\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <div className=\"p-2\">\r\n                        <MaterialReactTable table={memoizedTableConfig} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialogs.filters}\r\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogs.aggregations}\r\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Aggregations</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\r\n                        {[...columns].filter(column => (\r\n                            isEqualNumber(column?.IS_Default, 0)\r\n                            && isEqualNumber(column?.IS_Join_Key, 0)\r\n                            && (column.Column_Data_Type === 'number'\r\n                                || column.Column_Data_Type === 'string')\r\n                        )).map((o, i) => (\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                <select\r\n                                    className='cus-inpt'\r\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\r\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\r\n                                >\r\n                                    {\r\n                                        [\r\n                                            { label: 'Select Aggregation', value: '' },\r\n                                            { label: 'count', value: 'count' },\r\n                                            { label: 'extent', value: 'extent' },\r\n                                            { label: 'max', value: 'max' },\r\n                                            { label: 'min', value: 'min' },\r\n                                            { label: 'mean', value: 'mean' },\r\n                                            { label: 'median', value: 'median' },\r\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\r\n                                            { label: 'sum', value: 'sum' },\r\n                                            { label: 'unique', value: 'unique' },\r\n                                        ].map((o, i) => (\r\n                                            <option value={o.value} key={i}>{o.label}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\r\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, \r\n} from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, Edit, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\r\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from '../../Components/filterableTable2'\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReportTemplates = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [templates, setTemplates] = useState([]);\r\n    const variableState = {\r\n        search: '',\r\n        openFilterDialog: false,\r\n        filterTablesAndColumns: {},\r\n        deleteConfirmationDialog: false,\r\n        preFilterDialog: false,\r\n    }\r\n    const [localVariable, setLocalVariable] = useState(variableState);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filters, setFilters] = useState({})\r\n    const nav = useNavigate();\r\n    const [reload, setReload] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template`,\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setTemplates(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [reload])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt me-1\"\r\n                        value={filters[Column_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt ms-1\"\r\n                        value={filters[Column_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between flex-wrap'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            return (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search...'\r\n                    className='cus-inpt'\r\n                    value={filters[Column_Name]?.value ?? ''}\r\n                    onChange={e => handleFilterChange(Column_Name, {\r\n                        type: 'textCompare',\r\n                        value: String(e.target.value).toLowerCase() || ''\r\n                    })}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    const Actions = ({ o }) => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const dataToForward = {\r\n            Report_Type_Id: o?.Report_Type_Id,\r\n            reportName: o?.Report_Name,\r\n            ReportState: o?.ReportState,\r\n            tables: o?.tablesList?.map(table => ({\r\n                Table_Id: table?.Table_Id,\r\n                Table_Name: table?.Table_Name,\r\n                AliasName: table?.AliasName,\r\n                Table_Accronym: table?.Table_Accronym,\r\n                isChecked: true,\r\n                columns: table?.columnsList?.map(column => ({\r\n                    Column_Data_Type: column?.Column_Data_Type,\r\n                    Column_Name: column?.Column_Name,\r\n                    IS_Default: column?.IS_Default,\r\n                    IS_Join_Key: column?.IS_Join_Key,\r\n                    Order_By: column?.Order_By,\r\n                    Table_Id: column?.Table_Id,\r\n                    isVisible: true\r\n                }))\r\n            }))\r\n        }\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n        const id = popOverOpen ? o?.Report_Name : undefined;\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <IconButton aria-describedby={id} onClick={handleClick}>\r\n                    <List />\r\n                </IconButton>\r\n\r\n                <Popover\r\n                    id={id}\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    setLocalVariable(pre => ({\r\n                                        ...pre,\r\n                                        filterTablesAndColumns: dataToForward,\r\n                                        openFilterDialog: true,\r\n                                    }));\r\n                                    setSelectedTab(0);\r\n                                    setFilters({})\r\n                                }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>OPEN</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                !storage?.Company_id\r\n                                    ? () => toast.warn('Select Company!')\r\n                                    : () => {\r\n                                        setLocalVariable(pre => ({\r\n                                            ...pre,\r\n                                            filterTablesAndColumns: dataToForward,\r\n                                            preFilterDialog: true,\r\n                                        }));\r\n                                        setFilters({});\r\n                                        setSelectedTab(0);\r\n                                    }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>FILTERS</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\r\n                        >\r\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>EDIT</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\r\n                        >\r\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\r\n                            <ListItemText>DELETE</ListItemText>\r\n                        </MenuItem>\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RowComp = ({ o }) => {\r\n        return (\r\n            <>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {o?.tablesList?.map((table, tableInd) => (\r\n                                <React.Fragment key={tableInd}>\r\n                                    {table?.columnsList?.map((column, columnInd) => (\r\n                                        <tr key={columnInd}>\r\n                                            {columnInd === 0 && (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\r\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\r\n                                                        {table?.AliasName}\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n                                            <td\r\n                                                className={`\r\n                                                                border fa-13 vctr\r\n                                                                ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\r\n                                                                ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\r\n                                                                `}\r\n                                            >\r\n                                                {column?.Column_Name}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeFilterDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\r\n        setFilters({})\r\n    }\r\n\r\n    const deleteTemplate = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: 'DELETE',\r\n            bodyData: {\r\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\r\n            }\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                toast.success(data.message)\r\n                setReload(pre => !pre)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\r\n    }\r\n\r\n    const saveReportGroupingState = (reportid, grouping) => {\r\n        fetchLink({\r\n            address: `reports/template/templateState`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                Report_Type_Id: reportid,\r\n                ReportState: grouping\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end p-3\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className='cus-inpt w-auto'\r\n                        placeholder='Search Report Name'\r\n                        value={localVariable?.search ?? ''}\r\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\r\n                    />\r\n                </div>\r\n\r\n                <CardContent className='p-0'>\r\n                    <FilterableTable\r\n                        dataArray={\r\n                            !localVariable?.search ? templates : (\r\n                                [...templates].filter(fil =>\r\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\r\n                                )\r\n                            )\r\n                        }\r\n                        columns={[\r\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\r\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\r\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\r\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => <RowComp o={row} />}\r\n                        tableMaxHeight={650}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={localVariable?.openFilterDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\r\n                    <span>\r\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\r\n                        <DynamicMuiTable\r\n                            reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id}\r\n                            company={storage?.Company_id}\r\n                            queryFilters={filters}\r\n                            // buttons={({ grouping }) => (\r\n                            //     <Button\r\n                            //         onClick={() => saveReportGroupingState(localVariable?.filterTablesAndColumns?.Report_Type_Id, grouping)}\r\n                            //         disabled={grouping.length === 0}\r\n                            //         startIcon={<Save />}\r\n                            //     >\r\n                            //         Save State\r\n                            //     </Button>\r\n                            // )}\r\n                            // groupingState={\r\n                            //     localVariable?.filterTablesAndColumns?.ReportState \r\n                            //         ? JSON.parse(localVariable?.filterTablesAndColumns?.ReportState)\r\n                            //         : []\r\n                            // }\r\n                        />\r\n                    )}\r\n                    {/* {console.log(localVariable)} */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDialog}\r\n                        startIcon={<ArrowBackIosNewOutlined />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.deleteConfirmationDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDeleteConfirmationDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteTemplate}\r\n                        startIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='error'\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.preFilterDialog}\r\n                onClose={closeFilterDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\r\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                            <Tab label={table?.AliasName} key={i} />\r\n                        ))}\r\n                    </Tabs>\r\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                        <TabPanel value={selectedTab} index={i} key={i}>\r\n                            <div className=\"row\">\r\n                                {table?.columns?.map((column, ii) => (\r\n                                    !Boolean(Number(column?.IS_Default)) &&\r\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\r\n                                    (\r\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\r\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\r\n                                            {renderFilter(column)}\r\n                                        </div>\r\n                                    )\r\n                                ))}\r\n                            </div>\r\n                        </TabPanel>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeFilterDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\r\n                        startIcon={<Launch />}\r\n                        variant='contained'\r\n                    >\r\n                        Open report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTemplates","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNewOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","var y={fieldSeparator:\",\",decimalSeparator:\".\",quoteStrings:!0,quoteCharacter:'\"',showTitle:!1,title:\"My Generated Report\",filename:\"generated\",showColumnHeaders:!0,useTextFile:!1,useBom:!0,columnHeaders:[],useKeysAsHeaders:!1,boolDisplay:{true:\"TRUE\",false:\"FALSE\"},replaceUndefinedWith:\"\"},L=\"\\r\\n\",F=\"\\uFEFF\",q=($)=>Object.assign({},y,$);class Q extends Error{constructor($){super($);this.name=\"CsvGenerationError\"}}class T extends Error{constructor($){super($);this.name=\"EmptyHeadersError\"}}class U extends Error{constructor($){super($);this.name=\"CsvDownloadEnvironmentError\"}}class V extends Error{constructor($){super($);this.name=\"UnsupportedDataFormatError\"}}var X=($)=>$,z=($)=>$,Z=X,_=X,Y=X,K=X,N=X;var r=function($,x){if(x=='\"'&&$.indexOf('\"')>-1)return $.replace(/\"/g,'\"\"');return $},D=($)=>typeof $===\"object\"?K($.key):K($),h=($)=>typeof $===\"object\"?N($.displayLabel):N($),P=($,...x)=>x.reduce((W,j)=>j(W),$),S=($)=>(x)=>$.useBom?_(z(x)+F):x,R=($)=>(x)=>$.showTitle?B(_(z(x)+$.title))(Y(\"\")):x,B=($)=>(x)=>_(z($)+z(x)+L),E=($)=>(x,W)=>w($)(Y(z(x)+z(W))),w=($)=>(x)=>X(z(x)+$.fieldSeparator),O=($,x)=>(W)=>{if(!$.showColumnHeaders)return W;if(x.length<1)throw new T(\"Option to show headers but none supplied. Make sure there are keys in your collection or that you've supplied headers through the config options.\");let j=Y(\"\");for(let A=0;A<x.length;A++){const J=h(x[A]);j=E($)(j,b($,z(J)))}return j=Y(z(j).slice(0,-1)),B(W)(j)},C=($,x,W)=>(j)=>{let A=j;for(var J=0;J<W.length;J++){let I=Y(\"\");for(let M=0;M<x.length;M++){const H=D(x[M]),v=W[J][z(H)];I=E($)(I,b($,v))}I=Y(z(I).slice(0,-1)),A=B(A)(I)}return A},l=z,k=($)=>+$===$&&(!isFinite($)||Boolean($%1)),m=($,x)=>{if(k(x)){if($.decimalSeparator===\"locale\")return Z(x.toLocaleString());if($.decimalSeparator)return Z(x.toString().replace(\".\",$.decimalSeparator))}return Z(x.toString())},G=($,x)=>{let W=x;if($.quoteStrings||$.fieldSeparator&&x.indexOf($.fieldSeparator)>-1||$.quoteCharacter&&x.indexOf($.quoteCharacter)>-1||x.indexOf(\"\\n\")>-1||x.indexOf(\"\\r\")>-1)W=$.quoteCharacter+r(x,$.quoteCharacter)+$.quoteCharacter;return Z(W)},p=($,x)=>{const W=x?\"true\":\"false\";return Z($.boolDisplay[W])},g=($,x)=>{if(typeof x===\"undefined\"&&$.replaceUndefinedWith!==void 0)return G($,$.replaceUndefinedWith+\"\");if(x===null)return G($,\"null\");return G($,\"\")},b=($,x)=>{if(typeof x===\"number\")return m($,x);if(typeof x===\"string\")return G($,x);if(typeof x===\"boolean\"&&$.boolDisplay)return p($,x);if(x===null||typeof x===\"undefined\")return g($,x);throw new V(`\n    typeof ${typeof x} isn't supported. Only number, string, boolean, null and undefined are supported.\n    Please convert the data in your object to one of those before generating the CSV.\n    `)};var Q$=($)=>(x)=>{const W=q($),j=W.useKeysAsHeaders?Object.keys(x[0]):W.columnHeaders;let A=P(_(\"\"),S(W),R(W),O(W,j),C(W,j,x));if(z(A).length<1)throw new Q(\"Output is empty. Is your data formatted correctly?\");return A},s=($)=>(x)=>{const W=q($),j=z(x),A=W.useTextFile?\"plain\":\"csv\";return new Blob([j],{type:`text/${A};charset=utf8;`})},T$=($)=>(x)=>{if(!window)throw new U(\"Downloading only supported in a browser environment.\");const W=s($)(x),j=q($),A=j.useTextFile?\"txt\":\"csv\",J=`${j.filename}.${A}`,I=document.createElement(\"a\");I.download=J,I.href=URL.createObjectURL(W),I.setAttribute(\"visibility\",\"hidden\"),document.body.appendChild(I),I.click(),document.body.removeChild(I)};export{q as mkConfig,Q$ as generateCsv,T$ as download,l as asString,s as asBlob};\n"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","FilterableTable","_ref","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","columnInd","_columnAlign$find2","_columnVerticalAlign$2","isEqualNumber","Boolean","find","Object","entries","_ref3","_columnAlign$find","_columnVerticalAlign$","value","console","log","colSpan","Number","TableActions","anchorEl","setAnchorEl","popOverOpen","_Fragment","Tooltip","event","currentTarget","MoreVert","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","disabled","ListItemIcon","ToggleOn","color","ToggleOff","ListItemText","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","Download","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","btn","name","icon","onclick","createPopUpMenu","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","createSvgIcon","d","getFun","filterVariant","filterFn","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","CheckBoxOutlineBlank","checkedIcon","CheckBox","reportId","company","queryFilters","buttons","groupingState","dispColmn","setDispColmn","setDataArray","setColumns","filters","setFilters","filteredData","setFilteredData","showData","keys","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","useEffect","fetchLink","address","then","success","_o$tablesList","_strucre$tables","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","accessColumnName","allColumns","reduce","colArr","catch","method","bodyData","filterReq","ReportID","muiColumns","_column$Column_Name","accessorKey","sortable","aggregationFn","AggregatedCell","cell","getValue","applyFilters","handleExportData","csv","generateCsv","download","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","muiTableContainerProps","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","_ref4","Box","display","gap","padding","flexWrap","Button","startIcon","FileDownload","getPrePaginationRowModel","rowData","original","handleExportRows","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","prevFilters","filtered","min","max","item","start","end","dateValue","Date","isArray","_filters$column$acces","includes","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","_ref5","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","MaterialReactTable","FilterAltOff","overflow","_column$Column_Name2","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","_o$Column_Name","_aggregationValues$o$","TabPanel","other","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","Actions","dataToForward","ReportState","List","Visibility","Company_id","toast","warn","state","Edit","Delete","_o$tablesList2","tableInd","_table$columnsList2","React","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Card","Add_Rights","variant","CardContent","fil","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","_ref7","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","styles","root","paddingBottom","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","raised","elevation","_typeof","Symbol","iterator","constructor","prototype","y","quoteStrings","quoteCharacter","showTitle","filename","showColumnHeaders","useTextFile","useBom","columnHeaders","boolDisplay","true","false","replaceUndefinedWith","q","$","assign","Q","Error","super","this","T","U","V","X","Z","_","Y","K","N","D","h","displayLabel","B","x","E","W","w","m","isFinite","k","toLocaleString","toString","G","indexOf","r","g","Q$","j","A","_len","_key","P","S","R","O","J","C","I","M","H","v","T$","window","Blob","s","document","createElement","href","URL","createObjectURL","setAttribute","appendChild","click","removeChild"],"sourceRoot":""}