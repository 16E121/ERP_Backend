{"version":3,"file":"static/js/2140.e8b11d61.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/DataEntry/purchaseOrderEntry.jsx"],"sourcesContent":["\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","import { useEffect, useState } from \"react\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { checkIsNumber, getPreviousDate, isEqualNumber, ISOString } from \"../../Components/functions\";\r\nimport { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FilterAlt } from '@mui/icons-material';\r\nimport { purchaseOrderDataSet, displayColumns } from \"./purchaseOrderDataArray\";\r\nimport { toast } from 'react-toastify';\r\nimport PurchaseOrderPreviewTemplate from \"./purchaseOrderPreviewTemplate\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\n\r\nconst PurchaseOrderDataEntry = ({ loadingOn, loadingOff }) => {\r\n\r\n    const [purchaseOrderData, setPurchaseOrderData] = useState([]);\r\n    const [orderPreview, setOrderPreview] = useState({\r\n        OrderDetails: {},\r\n        OrderItemsArray: [],\r\n        DeliveryArray: [],\r\n        TranspoterArray: [],\r\n        display: false,\r\n    });\r\n    const [vendorList, setVendorList] = useState([]);\r\n\r\n    const nav = useNavigate();\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(10),\r\n        Todate: ISOString(),\r\n        FilterDialog: false,\r\n        OrderStatus: 'ITEMS',\r\n        vendorId: '',\r\n        vendor: '',\r\n        deleteOrderDialog: false,\r\n        deleteOrderId: '',\r\n        refresh: false,\r\n        view: 'PURCHASE ORDERS'\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVendorList(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/purchaseOrderEntry?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPurchaseOrderData(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [filters.Fromdate, filters.Todate, filters.refresh]);\r\n\r\n    const deleteOrder = (OrderId) => {\r\n        if (!checkIsNumber(OrderId)) return;\r\n\r\n        fetchLink({\r\n            address: 'dataEntry/purchaseOrderEntry',\r\n            method: 'DELETE',\r\n            bodyData: { OrderId }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilters(pre => ({ ...pre, deleteOrderDialog: false, deleteOrderId: '', refresh: !pre.refresh }));\r\n                toast.success(data.message);\r\n            } else {\r\n                setFilters(pre => ({ ...pre, deleteOrderDialog: false, deleteOrderId: '' }));\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const onCloseDialog = () => {\r\n        setOrderPreview({\r\n            OrderDetails: {},\r\n            OrderItemsArray: [],\r\n            DeliveryArray: [],\r\n            TranspoterArray: [],\r\n            display: false,\r\n        })\r\n    }\r\n\r\n    const navigateToPageWithState = ({ page = '', stateToTransfer = {} }) => {\r\n        nav(page, { state: stateToTransfer });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Card>\r\n                <div className=\"p-2 d-flex flex-wrap align-items-center\">\r\n                    <h5 className=\"m-0 flex-grow-1\">Purchase Order</h5>\r\n                    \r\n                </div>\r\n\r\n                <CardContent>\r\n\r\n\r\n                </CardContent>\r\n            </Card> */}\r\n\r\n            <FilterableTable\r\n                dataArray={purchaseOrderDataSet({\r\n                    data:\r\n                        checkIsNumber(filters.vendorId) ? (\r\n                            purchaseOrderData.filter(obj => isEqualNumber(obj.PartyId, filters.vendorId))\r\n                        ) : purchaseOrderData,\r\n                    status: filters.OrderStatus\r\n                })}\r\n                columns={displayColumns({\r\n                    OrderStatus: filters.OrderStatus,\r\n                    dialogs: setFilters,\r\n                    setOrderPreview,\r\n                    navigation: navigateToPageWithState\r\n                })}\r\n                tableMaxHeight={650}\r\n                EnableSerialNumber\r\n                title={'Purchase Order - ' + filters.OrderStatus}\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            onClick={() => nav('create')}\r\n                        >Add</Button>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            className=\"me-2\"\r\n                            onClick={() => setFilters(pre => ({ ...pre, FilterDialog: true }))}\r\n                        ><FilterAlt /></IconButton>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            {orderPreview.display && (\r\n                <PurchaseOrderPreviewTemplate\r\n                    OrderDetails={orderPreview.OrderDetails}\r\n                    OrderItemsArray={orderPreview.OrderItemsArray}\r\n                    DeliveryArray={orderPreview.DeliveryArray}\r\n                    TranspoterArray={orderPreview.TranspoterArray}\r\n                    display={orderPreview.display}\r\n                    onCloseDialog={() => onCloseDialog()}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={filters.FilterDialog}\r\n                onClose={() => setFilters(pre => ({ ...pre, FilterDialog: false }))}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table m-0 border-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Vendor</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <Select\r\n                                        value={{ value: filters.vendorId, label: filters.vendor }}\r\n                                        onChange={e => setFilters(pre => ({\r\n                                            ...pre,\r\n                                            vendorId: e.value,\r\n                                            vendor: e.label\r\n                                        }))}\r\n                                        options={[\r\n                                            { value: '', label: 'Search', isDisabled: true },\r\n                                            ...vendorList.map(obj => ({\r\n                                                value: obj?.Retailer_Id,\r\n                                                label: obj?.Retailer_Name\r\n                                            }))\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Vendor\"}\r\n                                        maxMenuHeight={300}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Fromdate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => setFilters(pre => ({ ...pre, Fromdate: e.target.value }))}\r\n                                        value={filters.Fromdate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Todate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => setFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                                        value={filters.Todate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Order Status</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <select\r\n                                        className=\"cus-inpt p-2\"\r\n                                        value={filters.OrderStatus}\r\n                                        onChange={e => setFilters(pre => ({ ...pre, OrderStatus: e.target.value }))}\r\n                                    >\r\n                                        <optgroup label=\"ITEM BASED\">\r\n                                            <option value={'ITEMS'}>ITEMS</option>\r\n                                            <option value={'ITEMS PENDING'}>ITEMS - PENDING</option>\r\n                                            <option value={'ITEMS ARRIVED'}>ITEMS - ARRIVED</option>\r\n                                        </optgroup>\r\n                                        <optgroup label=\"ORDER BASED\">\r\n                                            <option value={'ORDERS'}>ORDERS</option>\r\n                                            <option value={'COMPLETED ORDERS'}>COMPLETED ORDERS</option>\r\n                                            <option value={'IN-COMPLETED ORDERS'}>IN-COMPLETED ORDERS</option>\r\n                                            {/* <option value={'ORDERS PENDING'}>ORDERS - PENDING</option>\r\n                                            <option value={'ORDERS ARRIVED'}>ORDERS - ARRIVED</option> */}\r\n\r\n                                        </optgroup>\r\n                                        {/* <optgroup label=\"REPORTS\">\r\n                                            <option value=\"REPORT 1\">REPORT 1</option>\r\n                                            <option value=\"REPORT 2\">REPORT 2</option>\r\n                                            <option value=\"REPORT 2A\">REPORT 2A</option>\r\n                                            <option value=\"REPORT 3\">REPORT 3</option>\r\n                                            <option value=\"REPORT 4\">REPORT 4</option>\r\n                                        </optgroup> */}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(pre => ({ ...pre, FilterDialog: false }))}\r\n                        variant=\"outlined\"\r\n                    >Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.deleteOrderDialog}\r\n                onClose={() => setFilters(pre => ({ ...pre, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <h6>Do you want to delete the order permanently?</h6>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(pre => ({ ...pre, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                    >Cancel</Button>\r\n                    <Button color='error' variant='outlined' onClick={() => deleteOrder(filters.deleteOrderId)}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrderDataEntry;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","_ref","loadingOn","loadingOff","purchaseOrderData","setPurchaseOrderData","useState","orderPreview","setOrderPreview","OrderDetails","OrderItemsArray","DeliveryArray","TranspoterArray","display","vendorList","setVendorList","nav","useNavigate","filters","setFilters","Fromdate","getPreviousDate","Todate","ISOString","FilterDialog","OrderStatus","vendorId","vendor","deleteOrderDialog","deleteOrderId","refresh","view","useEffect","fetchLink","then","data","success","catch","e","console","error","concat","_jsxs","_Fragment","children","_jsx","FilterableTable","dataArray","purchaseOrderDataSet","checkIsNumber","filter","obj","isEqualNumber","PartyId","status","columns","displayColumns","dialogs","navigation","_ref2","page","stateToTransfer","tableMaxHeight","EnableSerialNumber","title","maxHeightOption","ButtonArea","Button","onClick","IconButton","size","className","pre","FilterAlt","PurchaseOrderPreviewTemplate","onCloseDialog","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Select","value","label","onChange","options","isDisabled","map","Retailer_Id","Retailer_Name","styles","isSearchable","placeholder","maxMenuHeight","type","target","DialogActions","deleteOrder","OrderId","method","bodyData","toast","message"],"sourceRoot":""}