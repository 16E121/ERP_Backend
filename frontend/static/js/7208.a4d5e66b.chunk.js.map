{"version":3,"file":"static/js/7208.a4d5e66b.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Components/ProjectList/addEditProject.jsx","Components/employeeManagement/employeeManagement.jsx","Components/taskAssign/addEditTaskAssign.jsx","Components/taskDetails/listingTask.jsx","Pages/Masters/ProjectList.jsx","Pages/Tasks/Components/addEditTask.jsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/LibraryAdd.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/People.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/utils/createChainedFunction.js","../node_modules/@mui/material/utils/deprecatedPropType.js","../node_modules/@mui/utils/deprecatedPropType/deprecatedPropType.js","../node_modules/@mui/material/utils/requirePropFactory.js","../node_modules/@mui/utils/requirePropFactory/requirePropFactory.js","../node_modules/@mui/material/utils/setRef.js","../node_modules/@mui/material/utils/unsupportedProp.js","../node_modules/@mui/utils/unsupportedProp/unsupportedProp.js","../node_modules/@mui/material/utils/index.js","../node_modules/@mui/system/esm/createBox.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport { fetchLink } from \"../fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport RequiredStar from '../requiredStar';\r\nimport { ISOString } from '../functions';\r\n\r\nconst ProjectForm = ({ open, onClose, inputValue, isEdit, setReload }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n\r\n    const [projectHead, setProjectHead] = useState([]);\r\n    const [proStatus, setProStatus] = useState([]);\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        Project_Id: '',\r\n        Project_Name: '',\r\n        Project_Desc: '',\r\n        Project_Head: '',\r\n        Est_Start_Dt: ISOString(),\r\n        Est_End_Dt: ISOString(),\r\n        Project_Status: '',\r\n        Entry_By: parseData?.UserId,\r\n        Company_id: parseData?.Company_id\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            setProjectHead(data.success ? data.data : []);\r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    }, [parseData?.Company_id]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `taskManagement/statusList`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProStatus(data.data);\r\n            }\r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (open) {\r\n            if (isEdit && inputValue) {\r\n                setFormData({\r\n                    ...inputValue,\r\n                    Est_Start_Dt: inputValue.Est_Start_Dt ? ISOString(inputValue.Est_Start_Dt) : '',\r\n                    Est_End_Dt: inputValue.Est_End_Dt ? ISOString(inputValue.Est_End_Dt) : '',\r\n                });\r\n            } else if (!isEdit) {\r\n\r\n                setFormData({\r\n                    Project_Id: '',\r\n                    Project_Name: '',\r\n                    Project_Desc: '',\r\n                    Project_Head: '',\r\n                    Est_Start_Dt: ISOString(),\r\n                    Est_End_Dt: ISOString(),\r\n                    Project_Status: '',\r\n                    Entry_By: parseData?.UserId,\r\n                    Company_id: parseData?.Company_id\r\n                });\r\n            }\r\n        }\r\n    }, [inputValue, open, isEdit]);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const validateFields = () => {\r\n        const requiredFields = [\r\n            'Project_Name',\r\n            'Project_Head',\r\n            'Est_Start_Dt',\r\n            'Est_End_Dt',\r\n            'Project_Status',\r\n            'Project_Desc',\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!formData[field]) {\r\n                toast.error(`${field.replace(/_/g, ' ')} is required`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const createFun = () => {\r\n        if (!validateFields()) return;\r\n\r\n        const payload = {\r\n            ...formData,\r\n            Company_id: parseData.Company_id\r\n        };\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project`,\r\n            method: 'POST',\r\n            bodyData: payload,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                onClose();\r\n                setReload(prev => !prev);\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => {\r\n            console.error('Fetch Error:', e);\r\n            toast.error(\"An error occurred while creating the project.\");\r\n        });\r\n    };\r\n\r\n    const editFun = () => {\r\n        if (!validateFields()) return;\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project`,\r\n            method: 'PUT',\r\n            bodyData: formData,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                onClose();\r\n                setReload(prev => !prev);\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        isEdit ? editFun() : createFun();\r\n    };\r\n\r\n    const inputFields = [\r\n        {\r\n            label: 'Project Name',\r\n            elem: 'input',\r\n            type: 'text',\r\n            required: true,\r\n            name: 'Project_Name',\r\n            value: formData.Project_Name || '',\r\n        },\r\n        {\r\n            label: \"Project Head\",\r\n            elem: \"select\",\r\n            options: projectHead.map(obj => ({ value: obj?.UserId, label: obj?.Name })),\r\n            required: true,\r\n            name: 'Project_Head',\r\n            value: formData.Project_Head || '',\r\n        },\r\n        {\r\n            label: 'Estimated Start Date',\r\n            elem: 'input',\r\n            type: 'date',\r\n            required: true,\r\n            name: 'Est_Start_Dt',\r\n            value: formData.Est_Start_Dt || '',\r\n        },\r\n        {\r\n            label: 'Estimated End Date',\r\n            elem: 'input',\r\n            type: 'date',\r\n            required: true,\r\n            name: 'Est_End_Dt',\r\n            value: formData.Est_End_Dt || '',\r\n        },\r\n        {\r\n            label: 'Project Status',\r\n            elem: 'select',\r\n            options: proStatus.map(obj => ({ value: obj.Status_Id, label: obj.Status })),\r\n            required: true,\r\n            name: 'Project_Status',\r\n            value: formData.Project_Status || '',\r\n        },\r\n        {\r\n            label: 'Description',\r\n            elem: 'textarea',\r\n            name: 'Project_Desc',\r\n            value: formData.Project_Desc || '',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={onClose}>\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                    {isEdit ? \"Edit Project\" : 'Create Project'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                            {inputFields.map((field, index) => (\r\n                                <div key={index} className=\"col-lg-4 mb-3\">\r\n                                    <label>{field.label} {field.required && <RequiredStar />}</label>\r\n                                    {field.elem === 'textarea' ? (\r\n                                        <textarea\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    ) : field.elem === 'select' ? (\r\n                                        <select\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <option value=''>Select</option>\r\n                                            {field.options && field.options.map((option, idx) => (\r\n                                                <option key={idx} value={option.value}>{option.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    ) : (\r\n                                        <input\r\n                                            type={field.type}\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <DialogActions>\r\n                            <button\r\n                                className=\"btn btn-light rounded-5 px-3\"\r\n                                type=\"button\"\r\n                                onClick={onClose}>\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary rounded-5 px-3\"\r\n                                type='submit'>\r\n                                {isEdit ? \"Update\" : \"Submit\"}\r\n                            </button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Autocomplete,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { toast } from 'react-toastify';\r\nimport { Box } from '@mui/material';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport Popper from '@mui/material/Popper';\r\n\r\nconst EmployeeManagementDialog = ({ open, onClose, projectId, onReload }) => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [addEmployeeDialogOpen, setAddEmployeeDialogOpen] = useState(false);\r\n    const [dropdownEmployees, setDropdownEmployees] = useState([]);\r\n    const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    useEffect(() => {\r\n        if (open && projectId) {\r\n            fetchEmployeeDetails();\r\n            fetchDropdownEmployees();\r\n            fetchAssignedEmployees();\r\n        }\r\n    }, [open, projectId]);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} placement=\"top\" />;\r\n    };\r\n\r\n    const fetchEmployeeDetails = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails?Project_Id=${projectId}`,\r\n            });\r\n            if (data.success) {\r\n                setEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch employee details\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDropdownEmployees = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails/dropDown?Company_id=${parseData.Company_id}`,\r\n            });\r\n            if (data.success) {\r\n                setDropdownEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch employees for dropdown\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchAssignedEmployees = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails?Project_Id=${projectId}`,\r\n            });\r\n            if (data.success) {\r\n                setSelectedEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch assigned employees\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddEmployeeOpen = () => {\r\n        setAddEmployeeDialogOpen(true);\r\n    };\r\n\r\n    const handleAddEmployeeClose = () => {\r\n        setAddEmployeeDialogOpen(false);\r\n    };\r\n\r\n    const handleAddEmployees = async () => {\r\n        if (Number(contextObj?.Add_Rights) === 1) {\r\n            try {\r\n                const response = await fetchLink({\r\n                    address: 'masters/Employeedetails/employeeAdd',\r\n                    method: 'POST',\r\n                    bodyData: {\r\n                        Project_Id: projectId,\r\n                        UserIds: selectedEmployees.map(emp => emp.UserId),\r\n                    },\r\n                });\r\n\r\n                if (response.success) {\r\n                    toast.success(\"Employees added successfully\");\r\n                    setAddEmployeeDialogOpen(false);\r\n                    await fetchEmployeeDetails();\r\n                    await fetchAssignedEmployees();\r\n                    onReload();\r\n                } else {\r\n                    toast.error(\"Failed to add employees\");\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                toast.error(\"Error adding employees\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" marginTop={2} marginInlineStart={2}>\r\n                    <span>Employee Details</span>\r\n                    <button\r\n                        className='btn btn-light'\r\n                        style={{ marginRight: '18px ' }}\r\n                        onClick={onClose}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </Box>\r\n                <DialogContent>\r\n                    {loading ? (\r\n                        <p>Loading...</p>\r\n                    ) : (\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Employee Name</TableCell>\r\n                                        <TableCell>Position</TableCell>\r\n                                        <TableCell>Department</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {employees.map(user => (\r\n                                        <TableRow key={user.EmployeeId || user.UserId}>\r\n                                            <TableCell>{user.Name || 'N/A'}</TableCell>\r\n                                            <TableCell>{user.Designation_Name || '-'}</TableCell>\r\n                                            <TableCell>{user.BranchName || '-'}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className='btn btn-primary'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddEmployeeOpen}\r\n                        sx={{ mr: 1 }}\r\n                    >\r\n                        Modify\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={addEmployeeDialogOpen}\r\n                onClose={handleAddEmployeeClose}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        multiple\r\n                        options={dropdownEmployees}\r\n                        getOptionLabel={(option) => option.Name}\r\n                        isOptionEqualToValue={(option, value) => option.UserId === value.UserId}\r\n                        onChange={(event, value) => {\r\n                            const uniqueValues = value.filter((val, index, self) =>\r\n                                index === self.findIndex((t) => (\r\n                                    t.UserId === val.UserId\r\n                                ))\r\n                            );\r\n                            setSelectedEmployees(uniqueValues);\r\n                        }}\r\n                        PopperComponent={CustomPopper}\r\n                        value={selectedEmployees}\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} placeholder=\"Employees\" />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddEmployeeClose}>Cancel</Button>\r\n                    <Button onClick={handleAddEmployees} color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeManagementDialog;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { MyContext } from '../context/contextProvider';\r\nimport { fetchLink } from '../fetchComponent';\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TaskAssign = ({ open, onClose, projectId, taskId, reload }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    const [usersDropdown, setUsersDropdown] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const assignEmpInitialValue = {\r\n        AN_No: '',\r\n        Project_Id: projectId,\r\n        Sch_Id: taskId,\r\n        Assigned_Emp_Id: parseData?.UserId,\r\n        Emp_Id: '',\r\n        Task_Assign_dt: new Date().toISOString().split('T')[0],\r\n        Sch_Period: '',\r\n        Sch_Time: '',\r\n        EN_Time: '',\r\n        Est_Start_Dt: '',\r\n        Est_End_Dt: '',\r\n        Ord_By: 1,\r\n        Timer_Based: true,\r\n        Invovled_Stat: true,\r\n        EmpGet: '- Select Employee -'\r\n    };\r\n\r\n    const [assignEmpInpt, setAssignEmpInpt] = useState(assignEmpInitialValue);\r\n\r\n    useEffect(() => {\r\n        const fetchUsersDropdown = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const data = await fetchLink({\r\n                    address: `masters/Employeedetails/getusersproject?Project_Id=${projectId}`\r\n                });\r\n                if (data.success) {\r\n                    setUsersDropdown(data.data || []);\r\n                } else {\r\n                    toast.error(\"Failed to fetch employee dropdown.\");\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                toast.error(\"Error fetching employee dropdown.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUsersDropdown();\r\n    }, [projectId,reload]);\r\n\r\n    const calculateSchPeriod = () => {\r\n        const [hours1, minutes1] = assignEmpInpt.Sch_Time.split(':').map(Number);\r\n        const [hours2, minutes2] = assignEmpInpt.EN_Time.split(':').map(Number);\r\n\r\n        const date1 = new Date(0, 0, 0, hours1, minutes1);\r\n        const date2 = new Date(0, 0, 0, hours2, minutes2);\r\n\r\n        if (date2 > date1) {\r\n            let difference = Math.abs(date2 - date1);\r\n            const hours = Math.floor(difference / (1000 * 60 * 60));\r\n            difference %= (1000 * 60 * 60);\r\n            const minutes = Math.floor(difference / (1000 * 60));\r\n            return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const schPeriod = calculateSchPeriod();\r\n\r\n        if (assignEmpInpt.Est_End_Dt < assignEmpInpt.Est_Start_Dt) {\r\n            toast.error(\"End date must be greater than start date.\");\r\n            return;\r\n        }\r\n\r\n        setAssignEmpInpt(prev => ({ ...prev, Sch_Period: schPeriod }));\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: 'masters/employeedetails/assignTask',\r\n                method: 'POST',\r\n                bodyData: {\r\n                    Project_Id: projectId,\r\n                    Sch_Id: taskId.Sch_Id,\r\n                    Task_Levl_Id: 1,\r\n                    Task_Id: Number(taskId.Task_Id),\r\n                    Assigned_Emp_Id: assignEmpInpt.Assigned_Emp_Id,\r\n                    Emp_Id: assignEmpInpt.Emp_Id,\r\n                    Sch_Period: schPeriod,\r\n                    Sch_Time: assignEmpInpt.Sch_Time,\r\n                    EN_Time: assignEmpInpt.EN_Time,\r\n                    Est_Start_Dt: assignEmpInpt.Est_Start_Dt,\r\n                    Est_End_Dt: assignEmpInpt.Est_End_Dt,\r\n                    Ord_By: assignEmpInpt.Ord_By,\r\n                    Timer_Based: assignEmpInpt.Timer_Based ? 1 : 0,\r\n                },\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(\"Task assigned successfully!\");\r\n                setAssignEmpInpt(assignEmpInitialValue);\r\n                reload();\r\n                onClose();\r\n            } else {\r\n                toast.error(\"Failed to assign task: \" + response.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Error during task assignment: \" + error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"sm\">\r\n            <DialogTitle>Assign Task</DialogTitle>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogContent className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Employee</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <Select\r\n                                        value={{ value: assignEmpInpt.Emp_Id, label: assignEmpInpt.EmpGet }}\r\n                                        onChange={(e) => setAssignEmpInpt({ ...assignEmpInpt, Emp_Id: e.value, EmpGet: e.label })}\r\n                                        options={[{ value: '', label: '- Select Employee -' }, ...usersDropdown.map(obj => ({ value: obj.UserId, label: obj.Name }))]}\r\n                                        styles={customSelectStyles}\r\n                                        required\r\n                                        isSearchable={true}\r\n                                        placeholder=\"Select User\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='time'\r\n                                        className=\"cus-inpt\"\r\n                                        value={assignEmpInpt.Sch_Time}\r\n                                        required\r\n                                        onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Sch_Time: e.target.value })}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='time'\r\n                                        className=\"cus-inpt\"\r\n                                        value={assignEmpInpt.EN_Time}\r\n                                        required\r\n                                        min={assignEmpInpt.Sch_Time}\r\n                                        onChange={e => setAssignEmpInpt({ ...assignEmpInpt, EN_Time: e.target.value })}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        required\r\n                                        value={assignEmpInpt.Est_Start_Dt}\r\n                                        onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_Start_Dt: e.target.value })}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        required\r\n                                        min={assignEmpInpt.Est_Start_Dt}\r\n                                        value={assignEmpInpt.Est_End_Dt}\r\n                                        onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_End_Dt: e.target.value })}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Order By</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='number'\r\n                                        required\r\n                                        placeholder=\"1, 2, 3...\"\r\n                                        className=\"cus-inpt\"\r\n                                        value={assignEmpInpt.Ord_By}\r\n                                        onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Ord_By: e.target.value })}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>\r\n                                    <div>\r\n                                        <input\r\n                                            className=\"form-check-input shadow-none\"\r\n                                            style={{ padding: '0.7em' }}\r\n                                            type=\"checkbox\"\r\n                                            id=\"timerbased\"\r\n                                            checked={Boolean(assignEmpInpt.Timer_Based)}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Timer_Based: e.target.checked })}\r\n                                        />\r\n                                        <label className=\"form-check-label p-1 ps-2\" htmlFor=\"timerbased\">Timer Based Task?</label>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className='btn btn-light' type=\"button\" onClick={onClose}>Close</button>\r\n                    <button className='btn btn-primary' type=\"submit\">Submit</button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TaskAssign;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    IconButton,\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport TaskMasterMgt from '../../Pages/Tasks/Components/addEditTask';\r\nimport TaskAssign from '../taskAssign/addEditTaskAssign';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ListingTask({ dialogOpen, setDialogOpen, projectid, reload,onReload }) {\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [assignDialogOpen, setAssignDialogOpen] = useState(false);\r\n    const [taskAssignOpen, setTaskAssignOpen] = useState(false); \r\n    const [selectedTask, setSelectedTask] = useState(null); \r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskScheduleInput, setTaskScheduleInput] = useState({\r\n        Task_Id: '',\r\n        Task_Levl_Id: 1,\r\n        Type_Task_Id: '',\r\n        Task_Sch_Duaration: '',\r\n        Task_Group_Id: '',\r\n        Task_Start_Time: new Date().toISOString(),\r\n        Task_End_Time: new Date().toISOString(),\r\n        Task_Est_Start_Date: new Date().toISOString(),\r\n        Task_Est_End_Date: new Date().toISOString(),\r\n    });\r\n    const [taskData, setTaskData] = useState([]);\r\n  \r\n    const userData = JSON.parse(localStorage.getItem('user'));\r\n    const entryBy = userData?.UserId;\r\n    const companyId = userData?.Company_id;\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const data = await fetchLink({ address: `taskManagement/tasks/dropdown?Company_id=${companyId}` });\r\n            if (data.success) {\r\n                setTasks(data.data);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [reload,onReload]);\r\n\r\n    const taskOptions = tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }));\r\n\r\n    const handleTaskChange = async (selectedOption) => {\r\n        setTaskScheduleInput(prev => ({\r\n            ...prev,\r\n            Task_Id: selectedOption.value,\r\n            TasksGet: selectedOption.label\r\n        }));\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: `taskManagement/tasks/tasklistsid?Task_Id=${selectedOption.value}`\r\n            });\r\n            if (response.success) {\r\n                const taskDetails = response.data;\r\n                setTaskScheduleInput(prev => ({\r\n                    ...prev,\r\n                    Task_Levl_Id: taskDetails.Task_Levl_Id,\r\n                    Task_Name: taskDetails.Task_Name,\r\n                    Task_Desc: taskDetails.Task_Desc,\r\n                    Task_Group_Id: taskDetails.Task_Group_Id,\r\n                    Task_Sch_Duaration: taskDetails.Task_Sch_Duaration || '',\r\n                    Task_Start_Time: taskDetails.Task_Start_Time || new Date().toISOString(),\r\n                    Task_End_Time: taskDetails.Task_End_Time || new Date().toISOString(),\r\n                    Task_Est_Start_Date: taskDetails.Task_Est_Start_Date || new Date().toISOString(),\r\n                    Task_Est_End_Date: taskDetails.Task_Est_End_Date || new Date().toISOString(),\r\n                }));\r\n            } else {\r\n                toast.error(\"Failed to fetch task details\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(error);\r\n        }\r\n    };\r\n\r\n    const handleAssignTask = async () => {\r\n        if (!taskScheduleInput.Task_Id) {\r\n            toast.error(\"Please select a task before saving.\"); \r\n            return;\r\n        }\r\n\r\n        const requestData = {\r\n            entryBy: entryBy,\r\n            Project_Id: projectid,\r\n            Sch_Type_Id: 1,\r\n            Sch_Est_Start_Date: taskScheduleInput.Task_Est_Start_Date,\r\n            Sch_Est_End_Date: taskScheduleInput.Task_Est_End_Date,\r\n            tasks: [taskScheduleInput]\r\n        };\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: 'taskManagement/project/schedule/createNewTaskWithSchedule',\r\n                method: 'POST',\r\n                bodyData: requestData,\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(\"Schedule Created Successfully\");\r\n                setAssignDialogOpen(false);\r\n                fetchData();\r\n                onReload();\r\n            } else {\r\n                toast.error(\"Failed to Create Schedule\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(error);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `taskManagement/project/schedule/ListingDetails?Project_Id=${projectid}`\r\n            });\r\n            if (data.success) {\r\n                setTaskData(data.data);\r\n            } else {\r\n                console.error('Failed to fetch task details:', data.message);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error fetching task details:', e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n       \r\n    }, [reload, projectid]);\r\n\r\n    const handleSelectedTask=async(task)=>{\r\n        setSelectedTask(task);\r\n        setTaskAssignOpen(true); \r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Dialog\r\n                open={dialogOpen}\r\n                onClose={() => setDialogOpen(false)}\r\n                fullWidth\r\n                maxWidth=\"lg\"\r\n                PaperProps={{ style: { height: '75vh' } }}\r\n            >\r\n                <DialogTitle>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <span>Task List</span>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setAssignDialogOpen(true)}>Assign Task</Button>\r\n                    </div>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <TableContainer style={{ maxHeight: '80vh' }}>\r\n                        <Table stickyHeader>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Task Name</TableCell>\r\n                                    <TableCell>Task Type</TableCell>\r\n                                    <TableCell>Status</TableCell>\r\n                                    <TableCell>Estimated Start Date</TableCell>\r\n                                    <TableCell>Estimated End Date</TableCell>\r\n                                    <TableCell>Assign</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {taskData.length > 0 ? (\r\n                                    taskData.map(task => (\r\n                                        <TableRow key={task.Task_Id}>\r\n                                            <TableCell>{task.Task_Name || 'N/A'}</TableCell>\r\n                                            <TableCell>{task.Task_Type || '-'}</TableCell>\r\n                                            <TableCell>{task.Status}</TableCell>\r\n                                            <TableCell>{new Date(task.Task_Est_Start_Date).toLocaleDateString() || 'N/A'}</TableCell>\r\n                                            <TableCell>{new Date(task.Task_Est_End_Date).toLocaleDateString() || 'N/A'}</TableCell>\r\n                                            <TableCell>\r\n                                                <IconButton onClick={() => handleSelectedTask(task)}>\r\n                                                    <LibraryAddIcon />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                ) : (\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={6} className=\"text-center\">No tasks found</TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setDialogOpen(false)}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={assignDialogOpen}\r\n                onClose={() => setAssignDialogOpen(false)}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n                PaperProps={{ style: { borderRadius: '8px' } }}\r\n            >\r\n                <DialogTitle>Assign Task</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ padding: '1px', display: 'flex' }}>\r\n                        <div style={{ flex: 1, display: 'flex', alignItems: 'center' }}>\r\n                            <label htmlFor=\"task-select\" style={{ marginRight: '8px' }}>Select Task</label>\r\n                            <select\r\n                                id=\"task-select\"\r\n                                value={taskScheduleInput.Task_Id || ''}\r\n                                className=\"cus-inpt\"\r\n                                required\r\n                                onChange={e => handleTaskChange({ value: e.target.value })}\r\n                                style={{ flex: 1, marginRight: '8px' }} \r\n                            >\r\n                                <option value=\"\" disabled>- select -</option>\r\n                                {taskOptions.map((option, index) => (   \r\n                                    <option key={index} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <IconButton onClick={() => setIsDialogOpen(true)}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <button className='btn btn-light' variant=\"outlined\"  onClick={() => setAssignDialogOpen(false)}>Cancel</button>\r\n                    <button  className='btn btn-primary' variant=\"contained\" color=\"primary\" onClick={handleAssignTask}>Save</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n     \r\n            <TaskAssign\r\n                open={taskAssignOpen}\r\n                onClose={() => setTaskAssignOpen(false)}\r\n                task={selectedTask}\r\n                projectId={projectid}\r\n                entryBy={entryBy}\r\n                taskId={selectedTask}\r\n                reload={onReload}\r\n            />\r\n\r\n   \r\n            <TaskMasterMgt\r\n                openAction={isDialogOpen}\r\n                onCloseFun={() => setIsDialogOpen(false)}\r\n                onTaskAdded={fetchTasks}\r\n                Reload={reload}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListingTask;\r\n","\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport { Edit, Delete, Launch, People } from '@mui/icons-material';\r\nimport { toast } from 'react-toastify';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport ProjectForm from \"../../Components/ProjectList/addEditProject\";\r\nimport EmployeeManagementDialog from \"../../Components/employeeManagement/employeeManagement\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport ListingTask from \"../../Components/taskDetails/listingTask\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst ActiveProjects = () => {\r\n    const [reload, setReload] = useState(false);\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const [projects, setProjects] = useState([]);\r\n    const [projectAlldata, setProjectAlldata] = useState([]);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [projectId, setProjectId] = useState(0);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [projectToDelete, setProjectToDelete] = useState(null);\r\n    const [employeeDialogOpen, setEmployeeDialogOpen] = useState(false);\r\n    const [listingTaskDialogOpen, setListingTaskDialogOpen] = useState(false); \r\n    const [filterInput, setFilterInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        fetchProjectData();\r\n    }, [parseData?.Company_id, reload]);\r\n\r\n    const handleReloadProjects = () => {\r\n        setReload(prev => !prev);\r\n    };\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `taskManagement/project/newProjectAbstract?Company_id=${parseData?.Company_id}`\r\n            });\r\n            if (data.success && Array.isArray(data.data)) {\r\n                setProjects(data.data);\r\n            } else {\r\n                console.error(\"Unexpected data format:\", data);\r\n                setProjects([]);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            setProjects([]);\r\n        }\r\n    };\r\n\r\n    const fetchProjectData = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `taskManagement/project?Company_id=${parseData?.Company_id}`\r\n            });\r\n            if (data.success && Array.isArray(data.data)) {\r\n                setProjectAlldata(data.data);\r\n            } else {\r\n                console.error(\"Unexpected data format:\", data);\r\n                setProjectAlldata([]);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            setProjectAlldata([]);\r\n        }\r\n    };\r\n\r\n    const deleteFun = () => {\r\n        if (projectToDelete) {\r\n            fetchLink({\r\n                address: `taskManagement/project`,\r\n                method: 'DELETE',\r\n                bodyData: { Project_Id: projectToDelete?.Project_Id },\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setReload(!reload);\r\n                    toast.success(data.message);\r\n                 \r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }).catch(e => console.error('Fetch Error:', e));\r\n        }\r\n        setDeleteDialog(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Project Name',\r\n            selector: row => row.Project_Name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Head',\r\n            selector: row => projectAlldata.find(p => p.Project_Id === row.Project_Id)?.Project_Head_Name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: row => projectAlldata.find(p => p.Project_Id === row.Project_Id)?.Status,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Start Date',\r\n            selector: row => row.Est_Start_Dt ? new Date(row.Est_Start_Dt).toLocaleDateString('en-IN') : \"N/A\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'End Date',\r\n            selector: row => row.Est_End_Dt ? new Date(row.Est_End_Dt).toLocaleDateString('en-IN') : \"N/A\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Progress',\r\n            selector: row => `${calcPercentage(row.TasksScheduled, row.CompletedTasks)}%`,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Tasks / Completed',\r\n            cell: row => (\r\n                <>\r\n                    {row.CompletedTasks} / {row.TasksScheduled}\r\n                    <IconButton onClick={() => handleOpenListingTaskDialog(row)} style={{ marginLeft: '8px' }}>\r\n                        <Launch />\r\n                    </IconButton>\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            name: 'Tasks Assigned',\r\n            selector: row => row.TasksAssignedToEmployee,\r\n        },\r\n        {\r\n            name: 'Employees Involved',\r\n            cell: row => (\r\n                <>\r\n                    {row.EmployeesInvolved}\r\n                    {Number(contextObj?.Add_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleOpenEmployeeDialog(row.Project_Id)}>\r\n                            <People />\r\n                        </IconButton>\r\n                    )}\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            cell: row => (\r\n                <>\r\n                    {Number(contextObj?.Edit_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleOpenEditDialog(row)}><Edit /></IconButton>\r\n                    )}\r\n                    {Number(contextObj?.Delete_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleOpenDeleteDialog(row)}><Delete /></IconButton>\r\n                    )}\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const filteredProjects = projects.filter(project => {\r\n        const projectHead = projectAlldata.find(p => p.Project_Id === project.Project_Id)?.Project_Head_Name || \"\";\r\n        const status = projectAlldata.find(p => p.Project_Id === project.Project_Id)?.Status || \"\";\r\n        return (\r\n            project.Project_Name.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            projectHead.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            status.toLowerCase().includes(filterInput.toLowerCase())\r\n        );\r\n    });\r\n\r\n    const handleOpenCreateDialog = () => {\r\n        console.log(\"Opening Create Dialog\");\r\n        setSelectedProject(null); \r\n        setIsEdit(false); \r\n        setDialogOpen(true); \r\n        console.log(\"Dialog Open State:\", dialogOpen);\r\n    };\r\n    \r\n    const handleOpenEditDialog = (project) => {\r\n        console.log(\"Opening Edit Dialog for project:\", project);\r\n        setSelectedProject(project); \r\n        setIsEdit(true); \r\n        setDialogOpen(true); \r\n        console.log(\"Dialog Open State:\", dialogOpen);\r\n    };\r\n    \r\n    const handleOpenDeleteDialog = (project) => {\r\n        setProjectToDelete(project);\r\n        setDeleteDialog(true);\r\n        \r\n    };\r\n\r\n    const handleOpenListingTaskDialog = (project) => {\r\n        setSelectedProject(project);\r\n        setProjectId(project.Project_Id);\r\n        setListingTaskDialogOpen(true); \r\n    };\r\n\r\n    const handleCloseDialogs = () => {\r\n        setDialogOpen(false);\r\n        setListingTaskDialogOpen(false); \r\n        setSelectedProject(null);\r\n        setProjectToDelete(null);\r\n        setDeleteDialog(false)\r\n    };\r\n\r\n    const handleProjectCreated = () => {\r\n        setReload(prev => !prev);\r\n        handleCloseDialogs();\r\n    };\r\n\r\n    const handleOpenEmployeeDialog = (projectId) => {\r\n        setProjectId(projectId);\r\n        setEmployeeDialogOpen(true);\r\n    };\r\n\r\n    const calcPercentage = (task, completed) => {\r\n        return Number(task) === 0 ? 0 : ((Number(completed) / Number(task)) * 100).toFixed(0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"fw-bold d-flex align-items-center justify-content-between mt-0\">\r\n                <span>Projects</span>\r\n                <div className=\"mb-1\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <div style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n                        <SearchIcon style={{ position: 'absolute', left: 15, color: '#aaa' }} />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            onChange={e => setFilterInput(e.target.value)}\r\n                            style={{\r\n                                paddingLeft: 35,\r\n                                marginRight: 10,\r\n                                margin: 10,\r\n                                borderRadius: 4,\r\n                                border: '1px solid black'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {Number(contextObj?.Add_Rights) === 1 && (\r\n                        <button onClick={() => handleOpenCreateDialog(null)} className=\"btn btn-primary fa-13 shadow\">\r\n                            Create Project\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <div className=\"card-body2 p-0\" style={{ marginTop: '0px', overflow: 'hidden' }}>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={filteredProjects}\r\n                        pagination\r\n                        highlightOnHover\r\n                        fixedHeader\r\n                        fixedHeaderScrollHeight=\"58vh\"\r\n                        persistTableHead\r\n                        noHeader={false}\r\n                        customStyles={{\r\n                            headCells: {\r\n                                style: {\r\n                                    fontSize: '16px',\r\n                                    fontWeight: 'bold',\r\n                                    padding: '10px',\r\n                                    backgroundColor: '#f7f7f7',\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <ListingTask\r\n                // completedTasks={0}\r\n                onClose={handleCloseDialogs}\r\n                dialogOpen={listingTaskDialogOpen}\r\n                setDialogOpen={setListingTaskDialogOpen}\r\n                isEdit={false}\r\n                parseData={parseData}\r\n                projectid={projectId}\r\n                onReload={handleReloadProjects}\r\n            />\r\n\r\n        \r\n            <ProjectForm\r\n                open={dialogOpen}\r\n                onClose={handleCloseDialogs}\r\n                inputValue={selectedProject}\r\n                isEdit={isEdit}\r\n                setReload={handleReloadProjects}\r\n                projectData={projectId}\r\n            />\r\n\r\n            <EmployeeManagementDialog\r\n                open={employeeDialogOpen}\r\n                onClose={() => setEmployeeDialogOpen(false)}\r\n                projectId={projectId}\r\n                onReload={handleReloadProjects}\r\n            />\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={handleCloseDialogs}\r\n                aria-labelledby=\"delete-dialog-title\"\r\n                aria-describedby=\"delete-dialog-description\">\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">Confirmation</DialogTitle>\r\n                <DialogContent className=\"p-4\">\r\n                    Do you want to delete the project\r\n                    <span className=\"text-primary\">{\" \" + projectToDelete?.Project_Name + \" \"}</span>?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className=\"btn btn-light rounded-5 px-3 me-1\" onClick={handleCloseDialogs}>Cancel</button>\r\n                    <button className=\"btn btn-primary rounded-5 px-3\" onClick={deleteFun}>Delete</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActiveProjects;\r\n","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../../common.css'\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Checkbox, TextField, Autocomplete } from '@mui/material';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport { isValidObject } from '../../../Components/functions';\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst TaskMasterMgt = ({ row, children, openAction, reload, onCloseFun, loadingOn, loadingOff, onTaskAdded, onToast }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValue = {\r\n        Task_Id: \"\",\r\n        Task_Name: \"\",\r\n        Task_Desc: \"\",\r\n        Task_Group_Id: 0,\r\n        Entry_By: parseData?.UserId,\r\n        Company_id: parseData?.Company_id,\r\n        Entry_Date: \"\",\r\n        Update_By: '',\r\n        Update_Date: \"\",\r\n        Task_Parameters: [],\r\n\r\n    }\r\n    const [dialog, setDialog] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [taskGroup, setTaskGroup] = useState([]);\r\n    const [taskParameters, setTaskParameters] = useState([]);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `taskManagement/tasks/dropdown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/taskType/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskGroup(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskParameters(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setDialog(openAction ? true : false)\r\n    }, [openAction])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(row)) {\r\n            setInputValue(pre => {\r\n                let inputVAL = { ...pre }\r\n                Object.entries(row).forEach(([key, value]) => {\r\n                    inputVAL[key] = value\r\n                })\r\n                return inputVAL\r\n            });\r\n            setIsEdit(true);\r\n        } else {\r\n            setInputValue(initialValue);\r\n            setIsEdit(false);\r\n        }\r\n    }, [row]);\r\n\r\n    const closeDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDialog(false);\r\n        if (onCloseFun) {\r\n            onCloseFun();\r\n        }\r\n    }\r\n\r\n    const postAndPutTask = async () => {\r\n        const paramArr = inputValue?.Task_Parameters?.map(param => ({\r\n            ...param,\r\n            Param_Id: param?.Paramet_Id\r\n        })) || [];\r\n\r\n        const PostObj = {\r\n            ...inputValue,\r\n            Task_Parameters: paramArr,\r\n        };\r\n\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: `taskManagement/tasks`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: PostObj\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(response.message);\r\n                closeDialog();\r\n                if (reload) {\r\n                    reload();\r\n                }\r\n                onTaskAdded();\r\n            } else {\r\n                toast.error(response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"An error occurred while processing your request.\");\r\n        } finally {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <span onClick={() => setDialog(true)} style={{ cursor: 'pointer' }}>{children}</span>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}>\r\n\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                    {isEdit ? 'Edit Task' : 'Add Task'}\r\n                </DialogTitle>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutTask();\r\n                }}>\r\n\r\n                    <DialogContent>\r\n                        <div className=\"row \">\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Name <RequiredStar /></label>\r\n                                <input\r\n                                    maxLength={150}\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Name: e.target.value })}\r\n                                    required\r\n                                    value={inputValue?.Task_Name}\r\n                                    placeholder=\"ex: File Checking\"\r\n                                    className=\"cus-inpt\" />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Group <RequiredStar /></label>\r\n                                <select\r\n                                    value={inputValue.Task_Group_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    required\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Group_Id: e.target.value })}>\r\n                                    <option value={0} disabled>- select -</option>\r\n                                    {taskGroup?.map((o, i) => (\r\n                                        Number(o?.Task_Type_Id) !== 0 &&\r\n                                        <option key={i} value={o?.Task_Type_Id}>\r\n                                            {o?.Task_Type}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Base Task</label>\r\n                                <select\r\n                                    value={inputValue.Under_Task_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Under_Task_Id: e.target.value })}>\r\n                                    <option value={0}>Primary</option>\r\n                                    {taskData?.map((o, i) => (\r\n                                        <option key={i} value={o?.Task_Id}>\r\n                                            {o?.Task_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <label>Task Describtion <RequiredStar /></label>\r\n                                <textarea\r\n                                    className=\"cus-inpt\"\r\n                                    value={inputValue.Task_Desc}\r\n                                    rows=\"3\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Desc: e.target.value })} />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12 p-2\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"checkboxes-tags-demo\"\r\n                                    options={[...taskParameters?.map(o => ({ ...o, Default_Value: '' }))]}\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={(option) => option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                    value={inputValue?.Task_Parameters || []}\r\n                                    onChange={(f, e) => setInputValue({ ...inputValue, Task_Parameters: e })}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox\r\n                                                icon={icon}\r\n                                                checkedIcon={checkedIcon}\r\n                                                style={{ marginRight: 8 }}\r\n                                                checked={selected}\r\n                                            />\r\n                                            {option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                        </li>\r\n                                    )}\r\n                                    className=\"pt-2\"\r\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Paramet_Id) === Number(val?.Paramet_Id)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} label=\"Task Prarameters\" placeholder=\"Choose Task Parameters\" />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n\r\n                            {inputValue?.Task_Parameters?.map((param, index) => (\r\n                                <div key={index} className=\"col-md-4 p-2\">\r\n                                    <label className=\"mb-2\">{param?.Paramet_Name}</label>\r\n                                    <input\r\n                                        type={param?.Paramet_Data_Type || 'text'}\r\n                                        className=\"cus-inpt\"\r\n                                        onChange={(e) => {\r\n                                            const updatedDetString = [...inputValue.Task_Parameters];\r\n                                            updatedDetString[index] = {\r\n                                                ...updatedDetString[index],\r\n                                                Default_Value: e.target.value,\r\n                                            };\r\n                                            setInputValue({ ...inputValue, Task_Parameters: updatedDetString });\r\n                                        }}\r\n                                        value={param?.Default_Value}\r\n                                        placeholder=\"Default Value\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <button\r\n                            className=\"btn btn-light rounded-5 px-3\"\r\n                            type=\"button\"\r\n                            onClick={closeDialog}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary rounded-5 px-3\"\r\n                            type='submit'>\r\n                            Submit\r\n                        </button>\r\n                    </DialogActions>\r\n\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskMasterMgt;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-1 9h-4v4h-2v-4H9V9h4V5h2v4h4z\"\n}), 'LibraryAdd');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import createChainedFunction from '@mui/utils/createChainedFunction';\nexport default createChainedFunction;","import deprecatedPropType from '@mui/utils/deprecatedPropType';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n    return null;\n  };\n}","import requirePropFactory from '@mui/utils/requirePropFactory';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}","import setRef from '@mui/utils/setRef';\nexport default setRef;","import unsupportedProp from '@mui/utils/unsupportedProp';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n  const propFullNameSafe = propFullName || propName;\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n  return null;\n}","'use client';\n\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/ClassNameGenerator';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';\n// TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    }\n    ClassNameGenerator.configure(generator);\n  }\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","_ref","open","onClose","inputValue","isEdit","setReload","localData","localStorage","getItem","parseData","JSON","parse","projectHead","setProjectHead","useState","proStatus","setProStatus","formData","setFormData","Project_Id","Project_Name","Project_Desc","Project_Head","Est_Start_Dt","ISOString","Est_End_Dt","Project_Status","Entry_By","UserId","Company_id","useEffect","fetchLink","concat","then","data","success","catch","e","console","error","handleChange","target","value","validateFields","requiredFields","field","toast","replace","inputFields","label","elem","type","required","options","map","obj","Name","Status_Id","Status","_Fragment","_jsxs","Dialog","DialogTitle","className","DialogContent","onSubmit","preventDefault","method","bodyData","prev","message","createFun","payload","index","onChange","option","idx","DialogActions","onClick","projectId","onReload","employees","setEmployees","loading","setLoading","addEmployeeDialogOpen","setAddEmployeeDialogOpen","dropdownEmployees","setDropdownEmployees","selectedEmployees","setSelectedEmployees","contextObj","useContext","MyContext","fetchEmployeeDetails","fetchDropdownEmployees","fetchAssignedEmployees","async","handleAddEmployeeClose","maxWidth","fullWidth","Box","display","justifyContent","alignItems","marginTop","marginInlineStart","marginRight","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","user","Designation_Name","BranchName","EmployeeId","handleAddEmployeeOpen","sx","mr","Autocomplete","multiple","getOptionLabel","isOptionEqualToValue","event","uniqueValues","filter","val","self","findIndex","t","PopperComponent","props","Popper","placement","renderInput","params","TextField","placeholder","Button","Number","Add_Rights","UserIds","emp","taskId","reload","usersDropdown","setUsersDropdown","assignEmpInitialValue","AN_No","Sch_Id","Assigned_Emp_Id","Emp_Id","Task_Assign_dt","Date","toISOString","split","Sch_Period","Sch_Time","EN_Time","Ord_By","Timer_Based","Invovled_Stat","EmpGet","assignEmpInpt","setAssignEmpInpt","fetchUsersDropdown","schPeriod","calculateSchPeriod","hours1","minutes1","hours2","minutes2","date1","date2","difference","Math","abs","hours","floor","minutes","String","padStart","response","Task_Levl_Id","Task_Id","verticalAlign","Select","styles","isSearchable","min","padding","checked","Boolean","htmlFor","dialogOpen","setDialogOpen","projectid","isDialogOpen","setIsDialogOpen","assignDialogOpen","setAssignDialogOpen","taskAssignOpen","setTaskAssignOpen","selectedTask","setSelectedTask","tasks","setTasks","taskScheduleInput","setTaskScheduleInput","Type_Task_Id","Task_Sch_Duaration","Task_Group_Id","Task_Start_Time","Task_End_Time","Task_Est_Start_Date","Task_Est_End_Date","taskData","setTaskData","userData","entryBy","companyId","fetchTasks","taskOptions","Task_Name","fetchData","PaperProps","maxHeight","stickyHeader","length","task","Task_Type","toLocaleDateString","IconButton","handleSelectedTask","LibraryAddIcon","colSpan","borderRadius","flex","selectedOption","TasksGet","taskDetails","Task_Desc","handleTaskChange","disabled","AddIcon","requestData","Sch_Type_Id","Sch_Est_Start_Date","Sch_Est_End_Date","TaskAssign","TaskMasterMgt","openAction","onCloseFun","onTaskAdded","Reload","ActiveProjects","projects","setProjects","projectAlldata","setProjectAlldata","selectedProject","setSelectedProject","setIsEdit","setProjectId","deleteDialog","setDeleteDialog","projectToDelete","setProjectToDelete","employeeDialogOpen","setEmployeeDialogOpen","listingTaskDialogOpen","setListingTaskDialogOpen","filterInput","setFilterInput","fetchProjects","fetchProjectData","handleReloadProjects","Array","isArray","columns","selector","row","sortable","_projectAlldata$find","find","p","Project_Head_Name","_projectAlldata$find2","calcPercentage","TasksScheduled","CompletedTasks","cell","handleOpenListingTaskDialog","marginLeft","Launch","TasksAssignedToEmployee","EmployeesInvolved","handleOpenEmployeeDialog","People","Edit_Rights","handleOpenEditDialog","Edit","Delete_Rights","handleOpenDeleteDialog","Delete","filteredProjects","project","_projectAlldata$find3","_projectAlldata$find4","status","toLowerCase","includes","log","handleCloseDialogs","completed","toFixed","position","SearchIcon","left","paddingLeft","margin","border","overflow","DataTable","pagination","highlightOnHover","fixedHeader","fixedHeaderScrollHeight","persistTableHead","noHeader","customStyles","ListingTask","ProjectForm","projectData","EmployeeManagementDialog","deleteFun","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","_inputValue$Task_Para2","loadingOn","loadingOff","onToast","initialValue","Entry_Date","Update_By","Update_Date","Task_Parameters","dialog","setDialog","taskGroup","setTaskGroup","taskParameters","setTaskParameters","setInputValue","isValidObject","pre","inputVAL","Object","entries","forEach","_ref2","key","closeDialog","cursor","_inputValue$Task_Para","paramArr","param","Param_Id","Paramet_Id","PostObj","postAndPutTask","maxLength","o","i","Task_Type_Id","Under_Task_Id","Default_Value","disableCloseOnSelect","Paramet_Name","Paramet_Data_Type","f","renderOption","_ref3","selected","Checkbox","opt","updatedDetString","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","defineProperty","enumerable","get","_utils","generateUtilityClasses","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate","validator","reason","componentNameInError","Component","propName","componentName","location","propFullName","unstable_ClassNameGenerator","configure","generator","_excluded","arguments","undefined","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx"],"sourceRoot":""}