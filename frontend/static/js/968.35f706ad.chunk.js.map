{"version":3,"file":"static/js/968.35f706ad.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Pages/Inventry/liveStockReport.jsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton, Button, Popover, MenuList, MenuItem, ListItemIcon, ListItemText, Tooltip } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {'top'|'middle'|'bottom'} verticalAlign\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} name\r\n * @property {Element} icon\r\n * @property {Function} onclick\r\n * @property {boolean} disabled\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {''} [props.title]\r\n * @param {boolean} [props.PDFPrintOption]\r\n * @param {boolean} [props.ExcelPrintOption]\r\n * @param {boolean} [props.maxHeightOption]\r\n * @param {React.ReactElement} [props.ButtonArea]\r\n * @param {Array<Menu>} props.MenuButtons\r\n */\r\n\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'center') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst createPopUpMenu = (name, icon, onclick, disabled = false) => (\r\n    <MenuItem\r\n        onClick={onclick}\r\n        disabled={disabled}\r\n    >\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText>{name}</ListItemText>\r\n    </MenuItem>\r\n)\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = []\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            ) + (\r\n                                                    column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                                )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    ) + (\r\n                                            column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                        )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const TableActions = () => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Tooltip title='Export options and more...'>\r\n                    <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Popover\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        {maxHeightOption && (\r\n                            <MenuItem\r\n                                onClick={() => setShowFullHeight(pre => !pre)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    {showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />\r\n                                    }\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    color={showFullHeight ? 'success' : ''}\r\n                                >Max Height</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {PDFPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => generatePDF(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download PDF</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {ExcelPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => exportToExcel(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download Excel</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {MenuButtons.map(btn => createPopUpMenu(btn.name, btn.icon, btn.onclick, btn.disabled))}\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='rounded-3 bg-white overflow-hidden'>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {/* {maxHeightOption && (\r\n                    <div>\r\n                        <label className=\"form-check-label p-1\" htmlFor=\"fullHeight\">Max Height</label>\r\n                        <input\r\n                            className=\"form-check-input shadow-none\"\r\n                            style={{ padding: '0.7em' }}\r\n                            type=\"checkbox\"\r\n                            id=\"fullHeight\"\r\n                            checked={showFullHeight}\r\n                            onChange={e => setShowFullHeight(e.target.checked)}\r\n                        />\r\n                    </div>\r\n                )} */}\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && <TableActions />}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: []\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    // createPopUpMenu,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { getPreviousDate, groupData, calcTotal, ISOString } from \"../../Components/functions\";\r\nimport FilterableTable from '../../Components/filterableTable2'\r\nimport { Card, CardContent, Autocomplete, TextField, Checkbox, Tooltip, IconButton, Button, Dialog, DialogContent, DialogActions, Tab, Box } from \"@mui/material\";\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff } from \"@mui/icons-material\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\n\r\nconst LiveStockReport = ({ loadingOn, loadingOff }) => {\r\n    const [reportData, setReportData] = useState([]);\r\n    const [groupedData, setGroupedData] = useState([]);\r\n    const [apiFilters, setAPIFilters] = useState({\r\n        Fromdata: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        view: 'Grouped'\r\n    });\r\n    const [filters, setFilters] = useState({});\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filteredData, setFilteredData] = useState(reportData);\r\n\r\n    const columns = [\r\n        { Field_Name: \"Stock_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Grade_Item_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Group_Name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"stock_item_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"godown_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        ...(apiFilters.view === 'List' ? [\r\n            { Field_Name: \"Act_Bags\", Fied_Data: \"number\", ColumnHeader: 'Bags', isVisible: 1 },\r\n            { Field_Name: \"Bal_Act_Qty\", Fied_Data: \"number\", ColumnHeader: 'Balance Quantity', isVisible: 1 }\r\n        ] : [])\r\n    ];\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    useEffect(() => setFilters({}), [apiFilters.view])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...reportData];\r\n        for (const column of columns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name]?.toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(reportData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n        fetchLink({\r\n            address: `reports/liveStockReport?Fromdata=${apiFilters.Fromdata}&Todate=${apiFilters.Todate}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReportData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        })\r\n    }, [apiFilters.Fromdata, apiFilters.Todate])\r\n\r\n    useEffect(() => {\r\n        const runLoading = async () => {\r\n            try {\r\n                const dataToUse = (Object.keys(filters).length > 0) ? filteredData : reportData;\r\n\r\n                if (loadingOn) {\r\n                    await loadingOn();\r\n                }\r\n\r\n                const grouped_Stock_Group = groupData(dataToUse, 'Stock_Group');\r\n                const aggregatedStockGroup = grouped_Stock_Group?.sort((a, b) => String(a.Stock_Group).localeCompare(b.Stock_Group ?? '')).map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    BagsTotal: calcTotal(stockGroup.groupedData, 'Act_Bags'),\r\n                    BalQtyTotal: calcTotal(stockGroup.groupedData, 'Bal_Act_Qty'),\r\n                }));\r\n\r\n                const Grade_Item_Group = aggregatedStockGroup?.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: groupData(stockGroup?.groupedData, 'Grade_Item_Group')\r\n                }));\r\n                const aggregatedGradeItemGroup = Grade_Item_Group.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        BagsTotal: calcTotal(gradeItemGroup.groupedData, 'Act_Bags'),\r\n                        BalQtyTotal: calcTotal(gradeItemGroup.groupedData, 'Bal_Act_Qty'),\r\n                    }))\r\n                }));\r\n\r\n                const GroupName = aggregatedGradeItemGroup.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: groupData(gradeItemGroup?.groupedData, 'Group_Name')\r\n                    }))\r\n                }));\r\n                const aggregatedGroupName = GroupName.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: gradeItemGroup?.groupedData?.map(grouopName => ({\r\n                            ...grouopName,\r\n                            BagsTotal: calcTotal(grouopName.groupedData, 'Act_Bags'),\r\n                            BalQtyTotal: calcTotal(grouopName.groupedData, 'Bal_Act_Qty'),\r\n                        }))\r\n                    }))\r\n                }));\r\n\r\n                // setGroupedData(aggregatedGroupName);\r\n                setTimeout(() => setGroupedData(aggregatedGroupName), 500);\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                if (loadingOff) {\r\n                    setTimeout(() => loadingOff(), 500);\r\n                }\r\n            }\r\n        }\r\n\r\n        runLoading();\r\n    }, [reportData, filters, filteredData])\r\n\r\n    const columnCells = (mainKey) => [\r\n        {\r\n            Field_Name: mainKey,\r\n            isVisible: 1,\r\n            Fied_Data: 'string',\r\n        },\r\n        {\r\n            Field_Name: 'BagsTotal',\r\n            ColumnHeader: 'Bags',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n        {\r\n            Field_Name: 'BalQtyTotal',\r\n            ColumnHeader: 'Balance Quantity',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-1 d-flex justify-content-between align-items-center flex-wrap border-bottom\">\r\n                    <h5 className=\"ps-2 pt-2\">Live Stock Report</h5>\r\n                    <span>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Fromdata}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Fromdata: e.target.value }))}\r\n                        /> - TO -\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Todate}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                        />\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton\r\n                                onClick={() => setDialog(true)}\r\n                                size=\"small\"\r\n                                className=\"d-md-none d-inline\"\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n\r\n                            <TabContext value={apiFilters.view}>\r\n                                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                    <TabList\r\n                                        indicatorColor='transparant'\r\n                                        onChange={(e, n) => setAPIFilters(pre => ({ ...pre, view: n }))}\r\n                                        variant=\"scrollable\"\r\n                                        scrollButtons=\"auto\"\r\n                                        allowScrollButtonsMobile\r\n                                    >\r\n                                        <Tab sx={apiFilters.view === 'Grouped' ? { backgroundColor: '#c6d7eb' } : {}} label=\"Grouped\" value='Grouped' />\r\n                                        <Tab sx={apiFilters.view === 'List' ? { backgroundColor: '#c6d7eb' } : {}} label=\"List\" value='List' />\r\n                                    </TabList>\r\n                                </Box>\r\n\r\n                                <TabPanel value={'Grouped'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={groupedData}\r\n                                        title=\"Stock Group\"\r\n                                        columns={columnCells('Stock_Group')}\r\n                                        isExpendable={true}\r\n                                        EnableSerialNumber\r\n                                        expandableComp={({ row }) => (\r\n                                            <FilterableTable\r\n                                                dataArray={row.groupedData}\r\n                                                title=\"Grade Item Group\"\r\n                                                columns={columnCells('Grade_Item_Group')}\r\n                                                isExpendable={true}\r\n                                                EnableSerialNumber\r\n                                                expandableComp={({ row }) => (\r\n                                                    <FilterableTable\r\n                                                        dataArray={row.groupedData}\r\n                                                        title=\"Group Name\"\r\n                                                        columns={columnCells('Group_Name')}\r\n                                                        isExpendable={true}\r\n                                                        EnableSerialNumber\r\n                                                        expandableComp={({ row }) => (\r\n                                                            <FilterableTable\r\n                                                                dataArray={row.groupedData}\r\n                                                                title=\"Stock Item Name\"\r\n                                                                columns={[\r\n                                                                    {\r\n                                                                        Field_Name: 'stock_item_name',\r\n                                                                        ColumnHeader: 'Stock Item Name',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bags',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bal_Act_Qty',\r\n                                                                        ColumnHeader: 'Balance Quantity',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'godown_name',\r\n                                                                        ColumnHeader: 'Godown',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                ]}\r\n                                                                EnableSerialNumber\r\n                                                                tableMaxHeight={2000}\r\n                                                                disablePagination={true}\r\n                                                            />\r\n                                                        )}\r\n                                                        tableMaxHeight={3000}\r\n                                                        disablePagination={true}\r\n\r\n                                                    />\r\n                                                )}\r\n                                                tableMaxHeight={4000}\r\n                                                disablePagination={true}\r\n                                            />\r\n                                        )}\r\n                                        tableMaxHeight={5000}\r\n                                        disablePagination={true}\r\n                                    />\r\n                                </TabPanel>\r\n\r\n                                <TabPanel value={'List'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={(Object.keys(filters).length > 0) ? filteredData : reportData}\r\n                                        columns={columns}\r\n                                    />\r\n                                </TabPanel>\r\n                            </TabContext>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                            <h5 className=\"d-flex justify-content-between px-2\">\r\n                                <span>Filters</span>\r\n                                <span>\r\n                                    <Tooltip title='Clear Filters'>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setFilters({})}\r\n                                        >\r\n                                            <FilterAltOff />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </h5>\r\n                            <div className=\"border rounded-3 \">\r\n                                {columns.map((column, ke) => (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                ))}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        <span>Filters</span>\r\n                        <span>\r\n                            <Tooltip title='Clear Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setFilters({})}\r\n                                >\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" >\r\n                        {columns.map((column, ke) => (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setDialog(false)} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveStockReport;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","FilterableTable","_ref","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","columnInd","_columnAlign$find2","_columnVerticalAlign$2","isEqualNumber","Boolean","find","Object","entries","_ref3","_columnAlign$find","_columnVerticalAlign$","value","console","log","colSpan","Number","TableActions","anchorEl","setAnchorEl","popOverOpen","_Fragment","Tooltip","event","currentTarget","MoreVert","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","disabled","ListItemIcon","ToggleOn","color","ToggleOff","ListItemText","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","Download","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","btn","name","icon","onclick","createPopUpMenu","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","CheckBoxOutlineBlank","checkedIcon","CheckBox","loadingOn","loadingOff","reportData","setReportData","groupedData","setGroupedData","apiFilters","setAPIFilters","Fromdata","getPreviousDate","Todate","ISOString","view","filters","setFilters","dialog","setDialog","filteredData","setFilteredData","useEffect","applyFilters","handleFilterChange","prevFilters","filtered","min","max","item","start","end","dateValue","Date","isArray","_filters$column$Field","_item$column$Field_Na","includes","trim","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","placeholder","onChange","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","fetchLink","address","then","success","catch","finally","async","dataToUse","keys","grouped_Stock_Group","groupData","aggregatedStockGroup","_b$Stock_Group","Stock_Group","localeCompare","stockGroup","BagsTotal","calcTotal","BalQtyTotal","aggregatedGradeItemGroup","_stockGroup$groupedDa","gradeItemGroup","aggregatedGroupName","_stockGroup$groupedDa2","_stockGroup$groupedDa3","_gradeItemGroup$group","grouopName","setTimeout","runLoading","columnCells","mainKey","Card","FilterAlt","CardContent","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","variant","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","_ref4","_ref5","FilterAltOff","Dialog","maxWidth","fullWidth","DialogContent","DialogActions","Button","createSvgIcon","d","Context","React","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","root","theme","padding","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate","getCardContentUtilityClass","CardContentRoot","paddingBottom","useDefaultProps","as","getCardUtilityClass","CardRoot","overflow","raised","elevation","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}