{"version":3,"file":"static/js/7060.9ade5548.chunk.js","mappings":"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","sources":["Pages/Dashboard/chartComp.jsx","Pages/Dashboard/erp/SOA.jsx","Pages/Attendance/attendanceComp.jsx","Pages/Dashboard/managementDashboard.jsx","Pages/Dashboard/commonDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-plugin-datalabels';\n\n\nconst PieChartComp = ({ TasksArray }) => {\n    const [chartData, setChartData] = useState(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [totalTime, setTotalTime] = useState(null);\n\n    useEffect(() => {\n        if (TasksArray.length > 0) {\n            const totalDuration = TasksArray.reduce((acc, task) => {\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\n                return acc + (end - start);\n            }, 0);\n\n            const firstTaskStart = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[0].Start_Time);\n            const lastTaskEnd = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[TasksArray.length - 1].End_Time);\n            const totalTime = lastTaskEnd - firstTaskStart;\n            const freeTime = totalTime - totalDuration;\n\n            const totalSeconds = Math.floor(totalTime / 1000);\n            const hours = Math.floor(totalSeconds / 3600);\n            const minutes = Math.floor((totalSeconds % 3600) / 60);\n            const seconds = totalSeconds % 60;\n            setTotalTime(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);\n\n            const taskData = TasksArray.map(task => {\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\n                const duration = end - start;\n                return {\n                    label: `${task.Task_Name} (${task.Start_Time} - ${task.End_Time})`,\n                    duration,\n                    backgroundColor: getRandomColor()\n                };\n            });\n\n            const chartData = {\n                labels: taskData.map(task => task.label),\n                datasets: [{\n                    data: taskData.map(task => task.duration),\n                    backgroundColor: taskData.map(task => task.backgroundColor),\n                    borderColor: 'rgba(255, 255, 255, 1)',\n                    borderWidth: 1\n                }]\n            };\n\n            chartData.labels.push('Free Time');\n            chartData.datasets[0].data.push(freeTime);\n            chartData.datasets[0].backgroundColor.push('#ADD8E6');\n\n            setChartData(chartData);\n        }\n    }, [TasksArray]);\n\n    useEffect(() => {\n        if (chartData) {\n            if (chartInstance) {\n                chartInstance.destroy();\n            }\n\n            const ctx = document.getElementById('empWokHours');\n            const newChartInstance = new Chart(ctx, {\n                type: 'pie',\n                data: chartData,\n                options: {\n                    responsive: true,\n                    plugins: {\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    // const label = context.label || '';\n                                    const value = context.parsed || 0;\n                                    const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\n                                    const percentage = Math.round((value / total) * 100);\n                                    const minutes = Math.round(value / (1000 * 60));\n                                    return `${minutes} minutes (${percentage}%)`;\n                                }\n                            }\n                        },\n                        datalabels: {\n                            color: '#fff',\n                            formatter: (value, context) => {\n                                const label = context.chart.data.labels[context.dataIndex];\n                                const value1 = context.parsed || 0;\n                                const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\n                                const percentage = Math.round((value1 / total) * 100);\n                                return `${label}: ${value} (${percentage}%)`;\n                            }\n                        }                        \n                    }\n                }\n            });\n\n            setChartInstance(newChartInstance);\n        }\n    }, [chartData]);\n\n    // for Dynamic background colors\n    const getRandomColor = () => {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    };\n\n    return TasksArray.length > 0 ? (\n        <div className='d-flex flex-column align-items-center my-3' style={{ maxHeight: '500px' }}>\n            {totalTime && <p className='my-2'>Total Time: {totalTime}</p>}\n            <canvas id=\"empWokHours\" width=\"400\" height=\"100\"></canvas>\n        </div>\n    ) : (\n        <h5 className=\"text-center my-5\">No Data For PieChart!</h5>\n    )\n};\n\nexport default PieChartComp;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { LaunchOutlined } from '@mui/icons-material'\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button } from \"@mui/material\";\nimport { useReactToPrint } from 'react-to-print';\nimport { utils as XLSXUtils, writeFile as writeXLSX } from 'xlsx';\nimport logo from '../ic_launcher.png';\nimport { fetchLink } from '../../../Components/fetchComponent'\n\n\nconst SOAComp = () => {\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\n    const [isCustomer, setIsCustomer] = useState(false)\n    const [dataArray, setDataArray] = useState([]);\n    const UserId = parseData?.UserId;\n    // const token = parseData?.Autheticate_Id;\n    const [total, setTotal] = useState(0)\n    const [dialog, setDialog] = useState(false)\n    const [SOA, setSOA] = useState([])\n    const [clickedRow, setClickedRow] = useState({})\n    const today = new Date();\n    const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 2);\n\n    const [selectedRange, setSelectedRange] = useState({\n        from: firstDayOfMonth.toISOString().split('T')[0],\n        to: new Date().toISOString().split('T')[0],\n    });\n\n    const imageSource = logo\n    const [closingBalance, setClosingBalance] = useState({ debit: 0, credit: 0 });\n    const printRef = useRef()\n\n    useEffect(() => {\n        fetchLink({\n            address: `userModule/customer/getBalance?UserId=${UserId}`\n        }).then(data => {\n            if (data.status === 'Success') {\n                setDataArray(data.data)\n                let temp = 0;\n                data.data?.forEach(obj => {\n                    temp += Number(obj.Bal_Amount)\n                })\n                setTotal(temp)\n            }\n            if (data?.isCustomer) {\n                setIsCustomer(true)\n            } else {\n                setIsCustomer(false)\n            }\n        }).catch(e => console.error(e))\n    }, [])\n\n    const getInfo = (prop, mode) => {\n        let rowData;\n        if (mode && mode === 1) {\n            rowData = clickedRow;\n        } else {\n            rowData = prop\n        }\n        setClickedRow(rowData)\n        setDialog(true);\n        fetchLink({\n            address: `userModule/customer/StatementOfAccound?Cust_Id=${rowData?.Cust_Id}&Acc_Id=${rowData?.tally_id}&Company_Id=${rowData?.Company_Id}&Fromdate=${selectedRange?.from}&Todate=${selectedRange?.to}`\n        }).then(data => {\n            setSOA(data.data)\n            let bal = { debit: 0, credit: 0 }\n            data?.data?.forEach(obj => {\n                bal.debit += Number(obj.Debit_Amt)\n                bal.credit += Number(obj.Credit_Amt)\n            })\n            setClosingBalance(bal)\n        }).catch(e => console.error(e))\n    }\n\n    const handleClose = () => {\n        setDialog(false);\n        setSOA([]);\n        setClickedRow({});\n        setSelectedRange({\n            from: firstDayOfMonth.toISOString().split('T')[0],\n            to: new Date().toISOString().split('T')[0],\n        })\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => printRef.current,\n    });\n\n    const generateExcel = (data) => {\n        const worksheet = XLSXUtils.json_to_sheet(data);\n        const workbook = XLSXUtils.book_new();\n        XLSXUtils.book_append_sheet(workbook, worksheet, 'Sheet1');\n        writeXLSX(workbook, `erpsmt_SOA_${new Date().toLocaleDateString('en-IN', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n        })}.xlsx`);\n    }\n\n    return isCustomer ? (\n        <>\n            <div className=\"card\">\n                <div className=\"card-header py-3 bg-white\" >\n                    <p className=\"mb-0 fw-bold\" >\n                        <span>Balance of {parseData?.Name}</span>\n                        <span className={total > 0 ? 'text-primary' : 'text-danger'}> &nbsp;( {total.toLocaleString('en-IN') + (total < 0 ? ' CR' : ' DR')} )</span>\n                    </p>\n                </div>\n                <div className=\"card-body p-0 table-responsive\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th style={{ fontSize: '13px' }}>S.No</th>\n                                <th style={{ fontSize: '13px' }}> - </th>\n                                <th style={{ fontSize: '13px' }}>Company</th>\n                                <th style={{ fontSize: '13px' }}>Ledger</th>\n                                <th style={{ fontSize: '13px' }}>Balance</th>\n                                <th style={{ fontSize: '13px' }}>Dr/Cr</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataArray.map((o, i) => (\n                                <tr key={i}>\n                                    <td style={{ fontSize: '13px' }}>{i + 1}</td>\n                                    <td style={{ fontSize: '13px' }}>\n                                        <button\n                                            className=\"icon-btn\"\n                                            onClick={() => { getInfo(o) }}>\n                                            <LaunchOutlined sx={{ fontSize: 'inherit' }} />\n                                        </button>\n                                    </td>\n                                    <td style={{ fontSize: '13px' }}>{o?.Company_Name}</td>\n                                    <td style={{ fontSize: '13px' }}>{o?.ledger_name}</td>\n                                    <td style={{ fontSize: '13px' }}>{o?.Bal_Amount?.toLocaleString('en-IN')}</td>\n                                    <td style={{ fontSize: '13px' }}>{o?.CR_DR}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <Dialog\n                open={dialog}\n                onClose={handleClose}\n                fullScreen\n                fullWidth>\n                <DialogTitle className=\"border-bottom text-primary d-flex align-items-center fa-18\">\n                    <span className=\"flex-grow-1\">Transaction Report of {clickedRow?.Customer_name}</span>\n                    <Button\n                        className=\"fw-bold\"\n                        onClick={handlePrint} >\n                        PDF\n                    </Button>\n                    <Button\n                        className=\"ms-1 fw-bold\"\n                        onClick={() => {\n                            const transformedData = SOA.map((o, i) => ({\n                                Sno: i + 1,\n                                Date: new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\n                                    day: '2-digit',\n                                    month: '2-digit',\n                                    year: 'numeric',\n                                }),\n                                Purticular: o?.Ledger_Desc,\n                                InvoiceNo: o?.invoice_no,\n                                Debit: Boolean(Number(o.Debit_Amt)) ? o.Debit_Amt.toLocaleString('en-IN') : '',\n                                Credit: Boolean(Number(o.Credit_Amt)) ? o.Credit_Amt.toLocaleString('en-IN') : '',\n                                Company: o?.Company_Name,\n                                Ledger: o?.Ledger_Name,\n                                Mobile_Number: o?.Mobile_no\n                            }));\n                            generateExcel(transformedData);\n                        }}\n                    >\n                        excel\n                    </Button>\n                </DialogTitle>\n                <DialogContent className=\"rounded-2 shadow m-4 mb-2 p-0\" >\n                    <div className=\"row align-content-center\">\n                        <div className=\"col-lg-1\">\n                            <img src={imageSource} alt=\"Company Logo\" className=\"smtlogo\" />\n                        </div>\n                        <div className=\"col-lg-4 p-2 ps-3\">\n                            <table className=\"table border-0\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"border-0\">Company</td>\n                                        <td className=\"border-0\">{clickedRow?.Company_Name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\">Ledger Name</td>\n                                        <td className=\"border-0\">{clickedRow?.ledger_name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\">Contact Person</td>\n                                        <td className=\"border-0\">{SOA[0]?.Contact_Person}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\">Mobile</td>\n                                        <td className=\"border-0\">{SOA[0]?.Mobile_no}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n                        <div className=\"col-lg-4 p-2\">\n                            <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"border-0\">Opening Balnce</td>\n                                        <td className=\"border-0 text-primary\">{\n                                            SOA[0]?.Debit_Amt > 0\n                                                ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\n                                                : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\n                                        }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\">Closing Balance</td>\n                                        <td className=\"border-0 text-primary\">{\n                                            (closingBalance?.debit - closingBalance?.credit) < 0\n                                                ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\n                                                : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\n                                        }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"col-lg-3 p-2\">\n                            <table className=\"table border-0\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"border-0\">From :</td>\n                                        <td className=\"p-0 border-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control w-auto ms-2\"\n                                                onChange={(e) => setSelectedRange({ ...selectedRange, from: e.target.value })}\n                                                value={selectedRange.from} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\">To :</td>\n                                        <td className=\"p-0 border-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control w-auto ms-2\"\n                                                onChange={(e) => {\n                                                    if (selectedRange.from && selectedRange.from <= e.target.value) {\n                                                        setSelectedRange({ ...selectedRange, to: e.target.value });\n                                                    } else {\n                                                        window.alert('Invald Date Range')\n                                                    }\n                                                }}\n                                                value={selectedRange.to}\n                                                disabled={!selectedRange.from} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0\"></td>\n                                        <td className=\"border-0\">\n                                            <button\n                                                className=\"btn text-white\"\n                                                style={{ backgroundColor: 'rgb(66, 34, 225)' }}\n                                                onClick={() => { getInfo('', 1) }}>Search</button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div className=\"p-2 table-responsive\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th className=\"fa-13 tble-hed-stick\">-</th>\n                                    <th className=\"fa-13 tble-hed-stick\">Date</th>\n                                    <th className=\"fa-13 tble-hed-stick\">Particulars</th>\n                                    <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\n                                    <th className=\"fa-13 tble-hed-stick\">Dr</th>\n                                    <th className=\"fa-13 tble-hed-stick\">Cr</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {SOA.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"fa-13 bg-light\">{i + 1}</td>\n                                        <td className=\"fa-13 bg-light\">\n                                            {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\n                                                day: '2-digit',\n                                                month: '2-digit',\n                                                year: 'numeric',\n                                            })}\n                                        </td>\n                                        <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\n                                        <td className=\"fa-13\">{o.invoice_no}</td>\n                                        <td className=\"fa-13\">{o.Debit_Amt.toLocaleString('en-IN')}</td>\n                                        <td className=\"fa-13 bg-light\">{o.Credit_Amt.toLocaleString('en-IN')}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    {/* printable div */}\n                    <div className=\"d-none\">\n                        <div className=\"d-block px-5 py-2\" ref={printRef}>\n                            <img src={imageSource} alt=\"smtlogo\" className=\"smtlogo\" />\n                            <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Company</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.Company_Name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Ledger Name</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.ledger_name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Contact Person</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Contact_Person}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Mobile</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Mobile_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">From</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.from}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">To</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.to}</td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Opening Balance</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">\n                                            {\n                                                SOA[0]?.Debit_Amt > 0\n                                                    ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\n                                                    : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"border-0 fa-14\">Closing Balance</td>\n                                        <td className=\"border-0 fa-14 fw-bold\">\n                                            {\n                                                (closingBalance?.debit - closingBalance?.credit) < 0\n                                                    ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\n                                                    : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\n                                            }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <div className=\"p-2 table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"fa-13 tble-hed-stick\">-</th>\n                                            <th className=\"fa-13 tble-hed-stick\">Date</th>\n                                            <th className=\"fa-13 tble-hed-stick\">Particulars</th>\n                                            <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\n                                            <th className=\"fa-13 tble-hed-stick\">Dr</th>\n                                            <th className=\"fa-13 tble-hed-stick\">Cr</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {SOA.map((o, i) => (\n                                            <tr key={i}>\n                                                <td className=\"fa-13 bg-light\">{i + 1}</td>\n                                                <td className=\"fa-13 bg-light\">\n                                                    {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\n                                                        day: '2-digit',\n                                                        month: '2-digit',\n                                                        year: 'numeric',\n                                                    })}\n                                                </td>\n                                                <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\n                                                <td className=\"fa-13\">{o.invoice_no}</td>\n                                                <td className=\"fa-13\">{Boolean(Number(o.Debit_Amt)) && o.Debit_Amt.toLocaleString('en-IN')}</td>\n                                                <td className=\"fa-13 bg-light\">{Boolean(Number(o.Credit_Amt)) && o.Credit_Amt.toLocaleString('en-IN')}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} variant='contained' color='error'>Close</Button>\n                </DialogActions>\n            </Dialog>\n\n\n        </>\n    ) : <></>\n}\n\nexport default SOAComp;","import { Button, Card, CardContent, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\"\nimport { useEffect, useState } from \"react\";\nimport { LocalDate, LocalTime } from \"../../Components/functions\";\nimport { toast } from \"react-toastify\";\nimport { fetchLink } from '../../Components/fetchComponent'\n\nconst AttendanceComp = () => {\n    const storage = JSON.parse(localStorage.getItem('user'));\n    const initialValue = {\n        Latitude: null,\n        Longitude: null,\n        error: null,\n        UserId: storage.UserId,\n        Description: '',\n        dialog: false\n    }\n    const [lastAttendance, setLastAttendance] = useState({});\n    const [reload, setReload] = useState(false);\n    const [inputValue, setInputValue] = useState(initialValue);\n\n    useEffect(() => {\n        setLastAttendance({})\n        fetchLink({\n            address: `empAttendance/attendance?UserId=${storage?.UserId}`,\n        }).then(data => {\n            if (data?.success && data?.data?.length > 0) {\n                setLastAttendance(data?.data[0])\n            }\n        }).catch(e => console.error(e))            \n    }, [storage?.UserId, reload])\n\n    const getLocation = async () => {\n\n        try {\n\n            const position = await new Promise((resolve, reject) => {\n                navigator.geolocation.getCurrentPosition(resolve, reject);\n            });\n\n            const { latitude, longitude } = position.coords;\n\n            setInputValue(pre => ({\n                ...pre,\n                Latitude: latitude,\n                Longitude: longitude,\n                error: null\n            }));\n\n            return true;\n\n        } catch (error) {\n            if (error.code === error.PERMISSION_DENIED) {\n                setInputValue(pre => ({\n                    ...pre,\n                    Latitude: null,\n                    Longitude: null,\n                    error: 'Location access denied'\n                }));\n\n                toast.warn('Allow Location Access');\n            } else {\n                setInputValue(pre => ({\n                    ...pre,\n                    Latitude: null,\n                    Longitude: null,\n                    error: error.message\n                }));\n            }\n\n            return false;\n        }\n    };\n\n    const StartDay = () => {\n        getLocation().then(hasLocationAccess => {\n            if (hasLocationAccess) {\n                if (inputValue?.Latitude && inputValue?.Longitude) {\n                    fetchLink({\n                        address: `empAttendance/attendance`,\n                        method: 'POST',\n                        bodyData: {\n                            UserId: inputValue?.UserId,\n                            Latitude: inputValue?.Latitude,\n                            Longitude: inputValue?.Longitude\n                        }\n                    }).then(data => {\n                        setReload(!reload)\n                        if (data.success) {\n                            toast.success(data.message)\n                        } else {\n                            toast.error(data.message)\n                        }\n                    })\n                } else {\n                    toast.warn('Please Retry')\n                }\n            } else {\n                toast.error('There is a problem in get location')\n            }\n        });\n    };\n\n    const EndDay = () => {\n        fetchLink({\n            address: `empAttendance/attendance`,\n            method: 'PUT',\n            bodyData: {\n                Id: lastAttendance?.Id,\n                Description: inputValue?.Description\n            }\n        }).then(data => {\n            if (data.success) {\n                setReload(!reload)\n                toast.success(data.message);\n                resetValues()\n            } else {\n                toast.error(data.message)\n            }\n        })\n    }\n\n    const resetValues = () => {\n        setInputValue(initialValue)\n    }\n\n    return (\n        <>\n            <Card className=\"col-xl-4    col-lg-6 col-md-6\">\n                <div className=\"d-flex justify-content-between align-items-center p-3 border-bottom\">\n                    <h5 className=\"mb-0\">Attendance</h5>\n                    <Button\n                        variant='outlined'\n                        onClick={StartDay}\n                        disabled={Boolean(lastAttendance?.Active_Status)}\n                    >\n                        START Day\n                    </Button>\n                </div>\n                {Boolean(lastAttendance?.Active_Status) && (\n                    <>\n                        <CardContent >\n                            <div className=\"fw-bold text-muted\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <span>Start Date</span><br />\n                                    <span>{lastAttendance?.Start_Date ? LocalDate(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n                                    <span>In Time</span>\n                                    <span>{lastAttendance?.Start_Date ? LocalTime(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\n                                </div>\n                            </div>\n                        </CardContent>\n                        <div className=\"border-top p-3 d-flex justify-content-end\">\n                            <Button variant='outlined' onClick={() => setInputValue(pre => ({ ...pre, dialog: true }))}>End Day</Button>\n                        </div>\n                    </>\n                )}\n            </Card>\n\n            <Dialog\n                open={inputValue?.dialog}\n                onClose={resetValues}\n                fullWidth maxWidth='md'\n            >\n                <DialogTitle>Cloase Attendance</DialogTitle>\n                <DialogContent>\n                    <label className=\"mb-3\">Work Summary</label>\n                    <textarea \n                        value={inputValue?.Description}\n                        className=\"cus-inpt\"\n                        rows={5}\n                        onChange={e => setInputValue(pre => ({ ...pre, Description: e.target.value}))}\n                        placeholder=\"Narrate the today's work summary\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={resetValues}>Cancel</Button>\n                    <Button variant='outlined' onClick={EndDay}>Confirm</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\n\nexport default AttendanceComp;","import { useEffect, useState } from \"react\"\nimport { groupData, ISOString, NumberFormat } from \"../../Components/functions\";\nimport { ShoppingCart } from \"@mui/icons-material\";\nimport { LuArrowUpWideNarrow } from \"react-icons/lu\";\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\nimport { IoReceiptOutline } from \"react-icons/io5\";\nimport { BsCartPlus } from \"react-icons/bs\";\nimport { PiHandCoinsFill } from \"react-icons/pi\";\nimport { FaCubesStacked } from \"react-icons/fa6\";\nimport { fetchLink } from \"../../Components/fetchComponent\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\nimport FilterableTable from '../../Components/filterableTable2';\nimport DisplayArrayData from \"../Sales/SalesReportComponent/DataSetDisplay\";\n\n\nconst getIcons = (str) => {\n    const iconArr = [\n        {\n            str: 'SALES',\n            icon: <LuArrowUpWideNarrow style={{ fontSize: '80px' }} />,\n        },\n        {\n            str: 'PURCHASE',\n            icon: <ShoppingCart style={{ fontSize: '80px' }} />,\n        },\n        {\n            str: 'RECEIPT',\n            icon: <IoReceiptOutline style={{ fontSize: '80px' }} />,\n        },\n        {\n            str: 'PAYMENT',\n            icon: <HiOutlineCurrencyRupee style={{ fontSize: '80px' }} />,\n        },\n        {\n            str: 'EXPENCES',\n            icon: <PiHandCoinsFill style={{ fontSize: '80px' }} />\n        },\n        {\n            str: 'PURCHASE ORDER',\n            icon: <BsCartPlus style={{ fontSize: '80px' }} />,\n        },\n        {\n            str: 'STOCK VALUE',\n            icon: <FaCubesStacked style={{ fontSize: '70px' }} />,\n        },\n    ]\n\n    return iconArr.find(o => str === o.str)?.icon || <></>\n}\n\n\nconst CardComp = ({ title, icon, firstVal, secondVal, classCount, onClick }) => {\n    return (\n        <>\n            <div className={`col-xxl-3 col-lg-4 col-md-6 col-sm-12 p-2`}>\n                <div onClick={onClick} className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + classCount}>\n                    <div className=\"flex-grow-1 p-3\">\n                        <h5 >{title}</h5>\n                        <h3 className=\"fa-16 text-end pe-3\">\n                            <span style={{ fontSize: '30px' }}>{firstVal ? firstVal : 0} </span>\n                            {secondVal && '(' + secondVal + ')'}\n                        </h3>\n                    </div>\n                    {icon}\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nconst ManagementDashboard = () => {\n    const storage = JSON.parse(localStorage.getItem('user'));\n    const UserAccess = Number(storage?.UserTypeId) === 2 || Number(storage?.UserTypeId) === 0 || Number(storage?.UserTypeId) === 1;\n\n    const [mangementReport, setMangementReport] = useState([]);\n    const [secRow, setSecRow] = useState([]);\n    const [theredRow, setTheredRow] = useState([]);\n\n    const [popUpDetails, setPopUpDetails] = useState({\n        salesDetails: [],\n    });\n\n    const [popUpDialogs, setPopUpDialogs] = useState({\n        salesDetails: false,\n    })\n\n    const [filter, setFilter] = useState({\n        date: ISOString(),\n    });\n\n    useEffect(() => {\n        if (UserAccess && storage.Company_id) {\n            fetchLink({\n                address: `dashboard/erp/dashboardData?Fromdate=${filter?.date}&Company_Id=${storage.Company_id}`\n            })\n                .then(data => {\n                    if (data.success) {\n                        setMangementReport(data?.data[0])\n                        setSecRow(data?.data[1])\n                        setTheredRow(data?.data[2]);\n                    }\n                })\n                .catch(e => console.error(e))\n        }\n    }, [UserAccess, filter.date]);\n\n    useEffect(() => {\n        if (UserAccess) {\n            fetchLink({\n                address: `dashboard/salesInfo?Fromdate=${filter?.date}&Todate=${filter?.date}`,\n                headers: {\n                    'Db': storage?.Company_id\n                }\n            }).then(data => {\n                if (data.success) {\n                    setPopUpDetails(pre => ({\n                        ...pre,\n                        salesDetails: data.data ?? []\n                    }));\n                } else {\n                    setPopUpDetails(pre => ({ ...pre, salesDetails: []}));\n                }\n            }).catch(e => console.error(e))\n        }\n    }, [filter.date]);\n\n    const salesDetailsGrouped = groupData(popUpDetails?.salesDetails, 'Party_Group');\n    \n    console.log(salesDetailsGrouped)\n\n    return (\n        <>\n            <input\n                type=\"date\"\n                className=\"cus-inpt w-auto m-1\"\n                value={filter.date}\n                onChange={e => setFilter(pre => ({ ...pre, date: e.target.value }))}\n            />\n\n            <div className=\"p-1 row\">\n                {theredRow?.map((o, i) => (\n                    <CardComp\n                        key={i}\n                        icon={getIcons('STOCK VALUE')}\n                        title={'STOCK VALUE'}\n                        classCount={16}\n                        firstVal={o?.Stock_Value ? NumberFormat(parseInt(o?.Stock_Value)) : 0}\n                    />\n                ))}\n                {mangementReport?.map((o, i) => (\n                    <CardComp\n                        key={i}\n                        title={o?.Trans_Type}\n                        onClick={() => {\n                            switch (o?.Trans_Type) {\n                                case 'SALES':\n                                    setPopUpDialogs(pre => ({ ...pre, salesDetails: true }));\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }}\n                        icon={o?.Trans_Type ? getIcons(o?.Trans_Type) : undefined}\n                        classCount={i + 7}\n                        firstVal={o?.Trans_Amount ? NumberFormat(parseInt(o?.Trans_Amount)) : 0}\n                        secondVal={o?.Trans_Count ? NumberFormat(o?.Trans_Count) : 0}\n                    />\n                ))}\n                {secRow?.map((o, i) => (\n                    <CardComp\n                        key={i}\n                        title={'EXPENCES'}\n                        icon={getIcons('EXPENCES')}\n                        classCount={19}\n                        firstVal={o?.Total_Cost_Vlaue ? NumberFormat(o?.Total_Cost_Vlaue) : 0}\n                    />\n                ))}\n            </div>\n\n            <Dialog\n                open={popUpDialogs.salesDetails}\n                onClose={() => setPopUpDialogs(pre => ({ ...pre, salesDetails: false }))}\n                fullWidth maxWidth='sm'\n            >\n                <DialogTitle>Sales Details</DialogTitle>\n                <DialogContent>\n                    {/* <DisplayArrayData \n                        dataArray={popUpDetails.salesDetails} \n                        columns={Object.keys(popUpDetails?.salesDetails[0] ?? {}).map(head => ({\n                            Column_Name: head,\n                            Data_Type: 'string'\n                        }))} \n                    /> */}\n                    <FilterableTable \n                        dataArray={salesDetailsGrouped}\n                        columns={[\n                            {\n                                Field_Name: 'Party_Group',\n                                Fied_Data: 'string',\n                                isVisible: 1,\n                            },\n                            {\n                                isCustomCell: true,\n                                ColumnHeader: 'Payment Mode',\n                                Cell: ({ row }) => row?.groupedData?.length,\n                                isVisible: 1,\n                            },\n                            {\n                                isCustomCell: true,\n                                ColumnHeader: 'Total Amount',\n                                Cell: ({ row }) => NumberFormat(row?.groupedData?.reduce((acc, item) => acc + Number(item?.Amount), 0)),\n                                isVisible: 1,\n                            },\n                        ]}\n                        EnableSerialNumber\n                        isExpendable={true}\n                        expandableComp={({ row }) => (\n                            <FilterableTable \n                                dataArray={row?.groupedData ?? []}\n                                columns={[\n                                    {\n                                        Field_Name: 'Party_Group',\n                                        Fied_Data: 'string',\n                                        isVisible: 1,\n                                    },\n                                    {\n                                        Field_Name: 'Payment_Mode',\n                                        Fied_Data: 'string',\n                                        isVisible: 1,\n                                    },\n                                    {\n                                        Field_Name: 'Amount',\n                                        Fied_Data: 'number',\n                                        isVisible: 1,\n                                    },\n                                ]}\n                            />\n                        )}\n                    />\n                    {/* <div className=\"table-responsive\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    {Object.keys(popUpDetails?.salesDetails[0] ?? {}).map(head => (\n                                        <th className=\"fa-14 border \">{head}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    {Object.keys(popUpDetails.salesDetails).map(head => (\n                                        <th className=\"fa-14 border \">{head}</th>\n                                    ))}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div> */}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setPopUpDialogs(pre => ({ ...pre, salesDetails: false }))}></Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ManagementDashboard;","import { useEffect, useState } from \"react\"\nimport { CiCalendarDate } from \"react-icons/ci\";\nimport { CgSandClock } from \"react-icons/cg\";\nimport { HiUsers } from \"react-icons/hi2\";\nimport { RxLapTimer } from \"react-icons/rx\";\nimport { TbTargetArrow } from \"react-icons/tb\";\nimport { BiTask } from \"react-icons/bi\";\nimport PieChartComp from \"./chartComp\";\nimport { Card, CardHeader, CardContent, Paper, FormControlLabel, Switch } from '@mui/material'\nimport SOAComp from \"./erp/SOA\";\nimport AttendanceComp from \"../Attendance/attendanceComp\";\nimport ManagementDashboard from \"./managementDashboard\";\nimport { fetchLink } from '../../Components/fetchComponent'\nimport { ISOString } from \"../../Components/functions\";\n\n\n\nconst CommonDashboard = () => {\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\n    const [dashboardData, setDashboardData] = useState({});\n    const [workedDetais, setWorkedDetais] = useState([]);\n    const [myTasks, setMyTasks] = useState([]);\n    const [tallyDetails, setTallyDetails] = useState([]);\n    const isAdmin = Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1\n    const isMangement = Number(parseData?.UserTypeId) === 2\n    const isEmp = Number(parseData?.UserTypeId) === 6 || Number(parseData?.UserTypeId) === 3;\n    const isCustomer = Number(parseData?.UserTypeId) === 4 || Number(parseData?.UserTypeId) === 5;\n    const [dispTask, setDispTask] = useState(false)\n\n    useEffect(() => {\n        if (isAdmin || isEmp || isMangement) {\n            fetchLink({\n                address: `dashboard/dashboardData?UserType=${parseData?.UserTypeId}&Emp_Id=${parseData?.UserId}`\n            })\n            .then(data => {\n                if (data.success) {\n                    setDashboardData(data.data[0]);\n                } else {\n                    setDashboardData({});\n                }\n            })\n            .catch(e => {\n                console.error(e);\n            });\n        }\n    }, [parseData?.UserId, parseData?.UserTypeId, isAdmin, isMangement, isEmp]);\n\n    useEffect(() => {\n        if (isEmp) {\n            fetchLink({\n                address:`dashboard/getTallyData?UserId=${parseData?.UserId}`\n            }).then(data => {\n                if (data.success) {\n                    setTallyDetails(data.data);\n                } else {\n                    setTallyDetails([])\n                }\n            }).catch(e => console.error(e))\n        }\n    }, [isEmp])\n\n    useEffect(() => {\n        if (isEmp) {\n            fetchLink({\n                address:`taskManagement/task/work?Emp_Id=${parseData?.UserId}&from=${ISOString()}&to=${ISOString()}`\n            }).then(data => {\n                if (data.success) {\n                    setWorkedDetais(data.data);\n                } else {\n                    setTallyDetails([])\n                }\n            }).catch(e => console.error(e))\n\n            fetchLink({\n                address:`taskManagement/tasks/myTasks?Emp_Id=${parseData?.UserId}&reqDate=${ISOString()}`\n            }).then(data => {\n                if (data.success) {\n                    data.data.sort((a, b) => {\n                        const [aHours, aMinutes] = a?.Sch_Time.split(':').map(Number);\n                        const [bHours, bMinutes] = b?.Sch_Time.split(':').map(Number);\n                        if (aHours !== bHours) {\n                            return aHours - bHours;\n                        }\n                        return aMinutes - bMinutes;\n                    });\n                    setMyTasks(data.data);\n                } else {\n                    setMyTasks([])\n                }\n            }).catch(e => console.error(e))\n        }\n    }, [isEmp, parseData?.UserId])\n\n    const CardComp = ({ title, icon, firstVal, secondVal, classCount }) => {\n        return (\n            <>\n                <div className={`${(isAdmin || isMangement) && 'col-xxl-3'} col-lg-4 col-md-6 col-sm-12 p-2`}>\n                    <div className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + classCount}>\n                        <div className=\"flex-grow-1 p-3\">\n                            <h5 className=\"text-uppercase\">{title}</h5>\n                            <h3 className=\"fa-16 text-end pe-3\">\n                                <span style={{ fontSize: '30px' }}>{firstVal ? firstVal : 0} </span>\n                                {secondVal && '/' + secondVal}\n                            </h3>\n                        </div>\n                        {icon}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const minFormat = (val) => {\n        const hour = Math.floor(Number(val) / 60);\n        const minutes = Number(val) % 60;\n        const formatHour = hour < 10 ? '0' + hour : hour;\n        const formatMinute = minutes < 10 ? '0' + minutes : minutes;\n\n        return (formatHour && formatMinute) ? formatHour + ':' + formatMinute : '00:00';\n    }\n\n    const statusColor = (id) => {\n        const numId = Number(id);\n        const color = ['bg-dark', 'bg-info', 'bg-warning', 'bg-success', 'bg-danger'];\n        return color[numId]\n    }\n\n    return (\n        <>\n            {isCustomer && <SOAComp />}\n\n            {(isMangement || isAdmin) && <ManagementDashboard />}\n\n            {(isAdmin || isMangement) && (\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={dispTask}\n                            onChange={e => setDispTask(e.target.checked)}\n                        />\n                    }\n                    label=\"Show Task Management\"\n                    className=\" fw-bold text-primary\"\n                />\n            )}\n\n            <div className=\"px-1\">\n                {((isAdmin || isMangement) && dispTask) && (\n                    <div className=\"row\">\n                        <CardComp\n                            title={'Projects'}\n                            icon={<TbTargetArrow style={{ fontSize: '80px' }} />}\n                            firstVal={dashboardData?.ActiveProjects}\n                            secondVal={dashboardData?.AllProjects}\n                            classCount={'1'}\n                        />\n                        <CardComp\n                            title={'Schedule'}\n                            icon={<CiCalendarDate style={{ fontSize: '80px' }} />}\n                            firstVal={dashboardData?.ActiveSchedule}\n                            secondVal={dashboardData?.AllSchedule}\n                            classCount={'2'}\n                        />\n                        <CardComp\n                            title={'Completed Tasks'}\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\n                            firstVal={dashboardData?.TaskCompleted}\n                            // secondVal={dashboardData?.TaskAssigned}\n                            classCount={'3'}\n                        />\n                        <CardComp\n                            title={'Employee'}\n                            icon={<HiUsers style={{ fontSize: '80px' }} />}\n                            firstVal={dashboardData?.EmployeeCounts}\n                            secondVal={Number(dashboardData?.EmployeeCounts) + dashboardData?.OtherUsers}\n                            classCount={'4'}\n                        />\n                        <CardComp\n                            title={'Worked Hours'}\n                            icon={<RxLapTimer style={{ fontSize: '80px' }} />}\n                            firstVal={minFormat(dashboardData?.TotalMinutes)}\n                            classCount={'5'}\n                        />\n                        <CardComp\n                            title={'Today Tasks'}\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\n                            firstVal={dashboardData?.TodayTaskCompleted}\n                            secondVal={dashboardData?.TodayTasks}\n                            classCount={'6'}\n                        />\n                    </div>\n                )}\n                {isEmp && (\n                    <div className=\"row\">\n                        <CardComp\n                            title={'Completed Tasks'}\n                            firstVal={dashboardData?.TaskCompleted}\n                            secondVal={dashboardData?.TotalTasks}\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\n                            classCount={'1'} />\n                        <CardComp\n                            title={'Today Tasks'}\n                            firstVal={dashboardData?.TodayTaskCompleted}\n                            secondVal={dashboardData?.TodayTasks}\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\n                            classCount={'2'} />\n                        <CardComp\n                            title={'Total Work Hours'}\n                            firstVal={minFormat(dashboardData?.WorkedMinutes)}\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\n                            classCount={'3'} />\n                    </div>\n                )}\n            </div>\n\n            <br />\n\n            {isEmp && <AttendanceComp />}\n\n            <br />\n\n            {(isEmp && workedDetais.length > 0) && (\n                <>\n                    <Card>\n                        <CardContent sx={{ pb: 2 }}>\n                            <h5>Today Activity</h5>\n                            <PieChartComp TasksArray={workedDetais} />\n                            <br />\n                        </CardContent>\n                    </Card>\n                    <br />\n                </>\n            )}\n\n            {(isEmp && myTasks.length > 0) && (\n                <Card>\n                    <CardHeader title={'Today Tasks:' + myTasks.length} sx={{ pb: 0 }} />\n                    <CardContent>\n\n                        <div className=\"table-responsive\">\n                            <table className=\"table mb-1 \">\n                                <thead>\n                                    <tr>\n                                        <th className=\"fa-13 border\">SNo</th>\n                                        <th className=\"fa-13 border\">Task</th>\n                                        <th className=\"fa-13 border\">Timer Based</th>\n                                        <th className=\"fa-13 border\">Schedule</th>\n                                        <th className=\"fa-13 border\">Duration</th>\n                                        <th className=\"fa-13 border\">Status</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {myTasks.map((o, i) => (\n                                        <tr key={i}>\n                                            <td className=\"fa-13 border\">{i + 1}</td>\n                                            <td className=\"fa-13 border\">{o?.Task_Name}</td>\n                                            <td className=\"fa-13 border text-center\">\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(Number(o?.Timer_Based) === 1 ? 3 : 1)}`}>\n                                                    {Number(o?.Timer_Based) === 1 ? 'Yes' : 'No'}\n                                                </span>\n                                            </td>\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Time} - {o?.EN_Time}</td>\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Period}</td>\n                                            <td className=\"fa-13 border text-center\">\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(o?.Work_Id ? 3 : 1)}`}>\n                                                    {o?.Work_Id ? 'Completed' : 'Pending'}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </CardContent>\n                </Card>\n            )}\n\n            <br />\n\n            {(isEmp && tallyDetails?.length > 0) && (\n                <Card component={Paper}>\n                    <CardHeader title=\"Tally Entries\" sx={{ pb: 0 }} />\n                    <CardContent>\n                        <div className=\"table-responsive\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"fa-13 border\">Sno</th>\n                                        <th className=\"fa-13 border\">Particulars</th>\n                                        <th className=\"fa-13 border\">Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {tallyDetails?.map((o, i) => (\n                                        <tr key={i}>\n                                            <td className=\"fa-13 border\">{i + 1}</td>\n                                            <td className=\"fa-13 border\">{o?.Particulars}</td>\n                                            <td className=\"fa-13 border\">{o?.Tally_Count}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </CardContent>\n                </Card>\n            )}\n\n        </>\n    )\n}\n\n\nexport default CommonDashboard"],"names":["_ref","TasksArray","chartData","setChartData","useState","chartInstance","setChartInstance","totalTime","setTotalTime","useEffect","length","totalDuration","reduce","acc","task","start","Date","toISOString","split","Start_Time","End_Time","firstTaskStart","freeTime","totalSeconds","Math","floor","hours","minutes","seconds","concat","String","padStart","taskData","map","duration","label","Task_Name","backgroundColor","getRandomColor","labels","datasets","data","borderColor","borderWidth","push","destroy","ctx","document","getElementById","newChartInstance","Chart","type","options","responsive","plugins","tooltip","callbacks","context","value","parsed","total","dataset","curr","percentage","round","datalabels","color","formatter","chart","dataIndex","value1","i","random","_jsxs","className","style","maxHeight","children","_jsx","id","width","height","SOAComp","_SOA$","_SOA$2","_SOA$3","_SOA$4","_SOA$5","_SOA$6","_SOA$7","_SOA$8","_SOA$9","_SOA$10","parseData","JSON","parse","localStorage","getItem","isCustomer","setIsCustomer","dataArray","setDataArray","UserId","setTotal","dialog","setDialog","SOA","setSOA","clickedRow","setClickedRow","today","firstDayOfMonth","getFullYear","getMonth","selectedRange","setSelectedRange","from","to","imageSource","logo","closingBalance","setClosingBalance","debit","credit","printRef","useRef","fetchLink","address","then","status","_data$data","temp","forEach","obj","Number","Bal_Amount","catch","e","console","error","getInfo","prop","mode","_rowData","_rowData2","_rowData3","rowData","Cust_Id","tally_id","Company_Id","_data$data2","bal","Debit_Amt","Credit_Amt","handleClose","handlePrint","useReactToPrint","content","current","_Fragment","Name","toLocaleString","fontSize","o","_o$Bal_Amount","onClick","LaunchOutlined","sx","Company_Name","ledger_name","CR_DR","Dialog","open","onClose","fullScreen","fullWidth","DialogTitle","Customer_name","Button","worksheet","XLSXUtils","json_to_sheet","workbook","book_new","book_append_sheet","writeXLSX","toLocaleDateString","day","month","year","hour","minute","second","generateExcel","Sno","Ledger_Date","Purticular","Ledger_Desc","InvoiceNo","invoice_no","Debit","Boolean","Credit","Company","Ledger","Ledger_Name","Mobile_Number","Mobile_no","DialogContent","src","alt","Contact_Person","onChange","target","window","alert","disabled","ref","DialogActions","variant","AttendanceComp","storage","initialValue","Latitude","Longitude","Description","lastAttendance","setLastAttendance","reload","setReload","inputValue","setInputValue","success","resetValues","Card","StartDay","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","pre","code","PERMISSION_DENIED","toast","warn","message","getLocation","hasLocationAccess","method","bodyData","Active_Status","CardContent","Start_Date","LocalDate","LocalTime","maxWidth","rows","placeholder","EndDay","Id","getIcons","str","_iconArr$find","icon","LuArrowUpWideNarrow","ShoppingCart","IoReceiptOutline","HiOutlineCurrencyRupee","PiHandCoinsFill","BsCartPlus","FaCubesStacked","find","CardComp","title","firstVal","secondVal","classCount","ManagementDashboard","UserAccess","UserTypeId","mangementReport","setMangementReport","secRow","setSecRow","theredRow","setTheredRow","popUpDetails","setPopUpDetails","salesDetails","popUpDialogs","setPopUpDialogs","filter","setFilter","date","ISOString","Company_id","headers","salesDetailsGrouped","groupData","log","Stock_Value","NumberFormat","parseInt","Trans_Type","undefined","Trans_Amount","Trans_Count","Total_Cost_Vlaue","FilterableTable","columns","Field_Name","Fied_Data","isVisible","isCustomCell","ColumnHeader","Cell","_ref2","_row$groupedData","row","groupedData","_ref3","_row$groupedData2","item","Amount","EnableSerialNumber","isExpendable","expandableComp","_ref4","_row$groupedData3","CommonDashboard","dashboardData","setDashboardData","workedDetais","setWorkedDetais","myTasks","setMyTasks","tallyDetails","setTallyDetails","isAdmin","isMangement","isEmp","dispTask","setDispTask","sort","a","b","aHours","aMinutes","Sch_Time","bHours","bMinutes","minFormat","val","formatHour","formatMinute","statusColor","FormControlLabel","control","Switch","checked","TbTargetArrow","ActiveProjects","AllProjects","CiCalendarDate","ActiveSchedule","AllSchedule","BiTask","TaskCompleted","HiUsers","EmployeeCounts","OtherUsers","RxLapTimer","TotalMinutes","CgSandClock","TodayTaskCompleted","TodayTasks","TotalTasks","WorkedMinutes","pb","PieChartComp","CardHeader","Timer_Based","EN_Time","Sch_Period","Work_Id","component","Paper","Particulars","Tally_Count"],"sourceRoot":""}