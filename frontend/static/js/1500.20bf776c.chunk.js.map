{"version":3,"file":"static/js/1500.20bf776c.chunk.js","mappings":"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","sources":["Pages/Purchase/PurchaseOrder/purchaseOrderCreation.jsx","Pages/Purchase/PurchaseOrder/purchaseOrderList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst PurchaseOrderCreation = ({ editValues, loadingOn, loadingOff, reload, switchScreen }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    // const [productGroup, setProductGroup] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    // const [salesPerson, setSalePerson] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Po_Date: ISOString(),\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Loadman_Id: storage?.UserId,\r\n        Loadman: storage?.Name,\r\n        Broker_Id: storage?.UserId,\r\n        Broker: storage?.Name,\r\n        Transpoter_Id: storage?.UserId,\r\n        Transpoter: storage?.Name,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_Id: '',\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                Po_Id: Number(editValues?.Po_Id),\r\n                Po_Date: editValues?.Po_Date,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Loadman_Id: editValues?.Loadman_Id,\r\n                Loadman: editValues?.Loadman,\r\n                Broker_Id: editValues?.Broker_Id,\r\n                Broker: editValues?.Broker,\r\n                Transpoter_Id: editValues?.Transpoter_Id,\r\n                Transpoter: editValues?.Transpoter,\r\n                Sales_Person_Id: editValues?.Sales_Person_Id,\r\n                Sales_Person_Name: editValues?.Sales_Person_Name,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                So_Id: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers?isVendor=1&isRetailer=0`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data?.data?.sort((a, b) => String(a?.Retailer_Name).localeCompare(b?.Retailer_Name)));\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?IS_Sold=0`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n                // const uniqueGroup = getUniqueData(data.data, 'Product_Group', ['Pro_Group']);\r\n                // setProductGroup(uniqueGroup);\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n                // const uniqueUOM = getUniqueData(data.data, 'UOM_Id', ['Units']);\r\n                // setProductUOM(uniqueUOM)\r\n            } else {\r\n                setProducts([]);\r\n                // setProductGroup([])\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        // fetchLink({\r\n        //     address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        // }).then(data => {\r\n        //     if (data.success) {\r\n        //         setSalePerson(data.data)\r\n        //     }\r\n        // }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            fetchLink({\r\n                address: `purchase/purchaseOrder`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0))\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                    reload()\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((o, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty);\r\n        const Amount = Multiplication(billQty, itemRate);\r\n\r\n        if (isInclusive || isNotTaxableBill) {\r\n            return o += Number(Amount);\r\n        }\r\n\r\n        if (isExclusiveBill) {\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n            const tax = taxCalc(0, itemRate, gstPercentage)\r\n            return o += (Number(Amount) + (tax * billQty));\r\n        }\r\n    }, 0);\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"p-3 pt-0\">\r\n\r\n                {/* Order Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">Purchase From:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-4\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Vendor Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {retailers?.find(ret => isEqualNumber(ret.Retailer_Id, orderDetails.Retailer_Id))?.Reatailer_Address}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {retailers?.find(ret => isEqualNumber(ret.Retailer_Id, orderDetails.Retailer_Id))?.Mobile_No}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Broker Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Broker_Id, label: orderDetails?.Broker }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Broker_Id: e.value, Broker: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Broker Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Loadman:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Loadman_Id, label: orderDetails?.Loadman }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Loadman_Id: e.value, Loadman: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Loadman Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Transpoter Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Transpoter_Id, label: orderDetails?.Transpoter }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Transpoter_Id: e.value, Transpoter: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Transpoter Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.Po_Date ? ISOString(orderDetails?.Po_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Po_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Other Info  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">Others:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {/* <div className=\"col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Broker Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Broker_Id, label: orderDetails?.Broker }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Broker_Id: e.value, Broker: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Broker Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Loadman:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Loadman_Id, label: orderDetails?.Loadman }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Loadman_Id: e.value, Loadman: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Loadman Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light vctr\">Transpoter Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Transpoter_Id, label: orderDetails?.Transpoter }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Transpoter_Id: e.value, Transpoter: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Transpoter Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(\r\n                                            Total_Invoice_value - (\r\n                                                totalValueBeforeTax.TotalValue + totalValueBeforeTax.TotalTax\r\n                                            )\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PurchaseOrderCreation;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport '../../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\nimport InvoiceBillTemplate from \"../../Sales/SalesReportComponent/newInvoiceTemplate\";\r\nimport { Add, Edit, FilterAlt, Visibility } from \"@mui/icons-material\";\r\nimport { convertedStatus } from \"../../Sales/convertedStatus\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport PurchaseOrderCreation from \"./purchaseOrderCreation\";\r\n\r\n\r\nconst PurchaseOrderList = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [purchaseOrder, setPurchaseOrder] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Sales_Person_Id: '',\r\n        SalsePersonGet: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `purchase/purchaseOrder?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPurchaseOrder(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Sales_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    const purchaseOrderColumn = [\r\n        {\r\n            Field_Name: 'Po_Id',\r\n            ColumnHeader: 'Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Po_Date',\r\n            ColumnHeader: 'Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            ColumnHeader: 'Status',\r\n            isVisible: 1,\r\n            align: 'center',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const convert = convertedStatus.find(status => status.id === Number(row?.isConverted));\r\n                return (\r\n                    <span className={'py-0 fw-bold px-2 rounded-4 fa-12 ' + convert?.color ?? 'bg-secondary text-white'}>\r\n                        {convert?.label ?? 'Undefined'}\r\n                    </span>\r\n                )\r\n            },\r\n        },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Purchase Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Pruchase Order'\r\n                                : 'Pruchase Order Creation'}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        {screen && (\r\n                            <Button\r\n                                variant='outlined'\r\n                                startIcon={<Add />}\r\n                                onClick={switchScreen}\r\n                            >\r\n                                {'New'}\r\n                            </Button>\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={purchaseOrder}\r\n                            columns={purchaseOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <PurchaseOrderCreation\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setReload(pre => !pre);\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Purchase Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Salse Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Sales_Person_Id, label: filters?.SalsePersonGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Sales_Person_Id: e.value, SalsePersonGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrderList;"],"names":["taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","_retailers$find","_retailers$find2","editValues","loadingOn","loadingOff","reload","switchScreen","storage","JSON","parse","localStorage","getItem","retailers","setRetailers","useState","products","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","initialValue","Company_Id","Company_id","Po_Date","ISOString","Retailer_Id","Retailer_Name","Loadman_Id","UserId","Loadman","Name","Broker_Id","Broker","Transpoter_Id","Transpoter","Branch_Id","BranchId","Narration","Created_by","Product_Array","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isExclusiveBill","isInclusive","isNotTaxableBill","useEffect","_editValues$Products_","isValidObject","pre","Po_Id","Number","Sales_Person_Id","Sales_Person_Name","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Sgst_P","Igst_P","Gst_P","Addition","fetchLink","address","then","data","_data$data","success","sort","a","b","String","localeCompare","catch","e","console","error","uniqueBrand","getUniqueData","concat","closeAddProduct","Total_Invoice_value","reduce","o","item","itemRate","billQty","parseInt","Multiplication","product","gstPercentage","tax","totalValueBeforeTax","acc","TotalValue","itemTax","basePrice","Subraction","TotalTax","_jsxs","_Fragment","children","className","_jsx","Select","value","label","onChange","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","ret","Reatailer_Address","Mobile_No","type","target","colSpan","Company_Name","Company_Address","Telephone_Number","Button","onClick","sx","ml","variant","startIcon","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref2","_row$Product","row","ColumnHeader","isVisible","_ref3","_row$Product2","HSN_Code","_ref4","_row$Units","align","Field_Name","Fied_Data","_ref5","_ref6","_row$Product3","_row$Product4","_row$Product5","_row$Amount","NumberFormat","_ref7","_ref8","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref9","_ref10","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref11","IconButton","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","size","Edit","filter","color","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","method","bodyData","isGraterNumber","toast","message","finally","Save","disabled","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","warn","DialogContent","some","grp","push","RequiredStar","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","ind","required","Division","min","selectedIndex","text","i","DialogActions","ClearAll","purchaseOrder","setPurchaseOrder","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","setReload","filters","setFilters","Fromdate","Todate","RetailerGet","CreatedByGet","SalsePersonGet","Cancel_status","dialog","setDialog","purchaseOrderColumn","_convert$label","convert","convertedStatus","status","id","isConverted","Tooltip","title","Visibility","closeDialog","Card","FilterAlt","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","Round_off","PurchaseOrderCreation","Object","keys","InvoiceBillTemplate","download","actionOpen","clearDetails","TitleText","style","verticalAlign"],"sourceRoot":""}