{"version":3,"file":"static/js/4064.f2512145.chunk.js","mappings":"ibAmDA,MAAMA,EAA0BA,CAACC,EAAMC,IAC5BD,EAAKE,KAAKC,IACb,MAAMC,EAAe,CAAC,EA2BtB,OAzBAH,EAAQI,SAAQ,CAACC,EAAQC,KACrB,GAAID,EAAOE,WAAaF,EAAOG,eAC3B,GAAIH,EAAOI,cAAgBJ,EAAOK,KAAM,CACpC,MAAMC,EAAcN,EAAOK,KAAK,CAAER,QAE5BU,EAAmBP,EAAOQ,aAC1BC,OAAOT,EAAOQ,cAAcE,QAAQ,OAAQ,KAAKC,cAAa,SAAAC,OACrDX,EAAQ,GAEI,kBAAhBK,GAAmD,kBAAhBA,GAAmD,kBAAhBA,IAC7ER,EAAaS,GAAoBD,EAOzC,KAAO,CAEH,IAAIO,EAAMb,EAAOc,WACjBhB,EAAae,GAAOhB,EAAIgB,IAAQ,EACpC,CACJ,IAGGf,CAAY,IA0CrBiB,EAAY,WAA+F,IAAjEP,EAAYQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC3D,MAAO,CACHd,UAAW,EACXY,WAHgBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAInBG,UAJ2BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAK9BI,MALgEJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAMnEK,cANwFL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,YAOvFR,GAAgB,CAAEA,gBAE9B,EAYMc,EAAkBC,IAiBjB,IAjBkB,UACrBC,EAAY,GAAE,QACd7B,EAAU,GAAE,WACZ8B,EAAa,KAAI,aACjBC,GAAe,EAAK,eACpBC,EAAiB,KAAI,eACrBC,EAAiB,IAAG,iBACpBC,EAAmB,GAAE,mBACrBC,GAAqB,EAAK,SAC1BC,EAAW,QAAmB,kBAC9BC,GAAoB,EAAK,MACzBC,EAAQ,GAAE,eACVC,GAAiB,EAAK,iBACtBC,GAAmB,EAAK,gBACxBC,GAAkB,EAAK,WACvBC,EAAa,KAAI,YACjBC,EAAc,IACjBf,EAEG,MAAOgB,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC1BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAASZ,IACxCe,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAgBC,IAAqBN,EAAAA,EAAAA,WAAS,GAC/CO,GAAeF,GAAkBV,EAAmB,gBAAkBR,EAEtEqB,GAAc,CAChB,CACIC,KAAM,OACNC,MAAO,cACR,CACCD,KAAM,QACNC,MAAO,YACR,CACCD,KAAM,SACNC,MAAO,gBAITC,GAAsB,CACxB,CACIF,KAAM,MACNC,MAAO,UACR,CACCD,KAAM,SACNC,MAAO,aACR,CACCD,KAAM,SACNC,MAAO,WAkDTE,GAvBY3D,KACd,IAAKkD,EAAa3B,OAAQ,OAAOvB,EAmBjC,MAjBmB,IAAIA,GAAM4D,MAAK,CAACC,EAAGC,KAClC,IAAK,MAAMC,KAAYb,EAAc,CACjC,MAAM,SAAEc,EAAQ,UAAEC,GAAcF,EAC1BG,EAASL,EAAEG,GACXG,EAASL,EAAEE,GAEjB,GAAIE,IAAWC,EACX,MAAkB,QAAdF,EACOC,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,CAG1C,CACA,OAAO,CAAC,GAGK,EAGFC,CAAStC,GACtBuC,GAAaxB,EAAOG,EACpBsB,GAAWD,GAAarB,EACxBuB,GAAgBZ,GAAWa,MAAMH,GAAYC,IAE7CG,GAAeA,CAACC,EAAKC,KACvB,OAAQA,GACJ,IAAK,SACD,OAAOC,EAAAA,EAAAA,IAAaF,GACxB,IAAK,OACD,OAAOG,EAAAA,EAAAA,IAAUH,GACrB,IAAK,OACD,OAAOI,EAAAA,EAAAA,IAAUJ,GACrB,IAAK,SACD,OAAOA,EACX,QACI,MAAO,GACf,EAGEK,GAAUC,IAAqB,IAApB,IAAE7E,EAAG,MAAEI,GAAOyE,EAC3B,MAAOC,EAAMC,IAAWnC,EAAAA,EAAAA,WAAS,GAC3BoC,EAAW,OAEjB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACLF,EAAAA,EAAAA,MAACG,EAAAA,EAAQ,CAAAD,SAAA,EAEc,IAAjBtD,GAAyBC,IACvBuD,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,oCAAmCJ,UACpDE,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,KAAK,QAAQC,QAASA,IAAMX,GAAQY,IAAQA,IAAKR,SAAEL,GAAOO,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CAACC,GAAI,CAAEb,eAAiBK,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAACD,GAAI,CAAEb,mBAIvH,IAAvB/C,IACGoD,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,oCAAmCJ,SAAGtC,EAAcH,EAAQtC,EAAQ,IAGrF,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAI,CAACI,EAAQ4F,KAAS,IAAAC,EAAAC,EAAA,QAC5BC,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAgB,KAAM4F,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAW,OAEtC,IAAlC8F,QAAc,OAANhG,QAAM,IAANA,OAAM,EAANA,EAAQI,eAA4BJ,EAAOK,MAqBhD6E,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAENC,UAAW,qBACPpF,EAAOoB,MAAoF,QAA/EyE,EAAG5C,GAAYgD,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOoB,OAAOT,uBAAc,IAAAkF,OAAA,EAA5EA,EAA8E1C,MAAQ,KAEjGnD,EAAOqB,cAA4G,QAA/FyE,EAAG1C,GAAoB6C,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOqB,eAAeV,uBAAc,IAAAmF,OAAA,EAA5FA,EAA8F3C,MAAQ,UAC/H6B,SAELhF,EAAOK,KAAK,CAAER,MAAKiB,WAAYd,EAAOc,cAPlC8E,GArBTM,OAAOC,QAAQtG,GAAKD,KAAIwG,IAAA,IAAAC,EAAAC,EAAA,IAAEzF,EAAK0F,GAAMH,EAAA,OAE5BpG,EAAOc,aAAeD,KAEtBkF,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAgB,KAAM4F,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAW,MAE9EgF,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAENC,UAAW,qBACPpF,EAAOoB,MAAoF,QAA/EiF,EAAGpD,GAAYgD,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOoB,OAAOT,uBAAc,IAAA0F,OAAA,EAA5EA,EAA8ElD,MAAQ,KAEjGnD,EAAOqB,cAA4G,QAA/FiF,EAAGlD,GAAoB6C,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOqB,eAAeV,uBAAc,IAAA2F,OAAA,EAA5FA,EAA8FnD,MAAQ,UAErIoC,QAASA,IAAM9D,EAAaA,EAAW5B,GAAO2G,QAAQC,IAAI,yBAAyBzB,SAElFb,GAAaoC,EAAa,OAANvG,QAAM,IAANA,OAAM,EAANA,EAAQmB,YARxByE,EAUZ,IAcZ,QAKU,IAAjBlE,GAAyBC,GAAkBgD,IACzCO,EAAAA,EAAAA,KAACD,EAAAA,EAAQ,CAAAD,UACLE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACuB,QAASC,OAAc,OAAPhH,QAAO,IAAPA,OAAO,EAAPA,EAASsB,UAAkC,IAAvBa,EAA8B,EAAI,GAAGkD,SAAErD,EAAe,CAAE9B,MAAKI,gBAG7G,EAIb2G,GAAeA,KACjB,MAAOC,EAAUC,IAAerE,EAAAA,EAAAA,UAAS,MAEnCsE,EAAcf,QAAQa,GAU5B,OACI/B,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAAhC,SAAA,EACIE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAAChF,MAAM,6BAA4B+C,UACvCE,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAAC,mBAAkB0B,EAAaxB,QAXlC2B,IACjBJ,EAAYI,EAAMC,cAAc,EAUyC/B,UAAU,OAAOE,KAAK,QAAON,UAC1FE,EAAAA,EAAAA,KAACkC,EAAAA,EAAQ,SAIjBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAO,CACJ1C,KAAMoC,EACNF,SAAUA,EACVS,QAfQC,KAChBT,EAAY,KAAK,EAeTU,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACd1C,UAEFF,EAAAA,EAAAA,MAAC8C,EAAAA,EAAQ,CAAA5C,SAAA,CAEJ5C,IACG0C,EAAAA,EAAAA,MAAC+C,EAAAA,EAAQ,CACLtC,QAASA,IAAMxC,GAAkByC,IAAQA,IACzCsC,UAAU/B,EAAAA,EAAAA,IAAuB,OAATvE,QAAS,IAATA,OAAS,EAATA,EAAWP,OAAQ,GAAG+D,SAAA,EAE9CE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAY,CAAA/C,SACRlC,GACKoC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAQ,CAACnD,SAAS,QAAQoD,MAAM,aACjC/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAS,CAACrD,SAAS,aAG9BK,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CACTF,MAAOnF,EAAiB,UAAY,GAAGkC,SAC1C,kBAIR9C,IACG4C,EAAAA,EAAAA,MAAC+C,EAAAA,EAAQ,CACLtC,QAASA,IA1SrB6C,EAAC5G,EAAW7B,KAC5B,IACI,MAAM0I,EAAM,IAAIC,EAAAA,QACVC,EAAgB9I,EAAwB+B,EAAW7B,GAEnD6I,EAAU7I,EACX8I,QAAQzI,GAAWA,EAAOE,WAAaF,EAAOG,iBAC9CP,KAAKI,GAAWA,EAAOc,YAAcL,OAAOT,EAAOQ,cAAcE,QAAQ,OAAQ,KAAKC,gBAErF+H,EAAOH,EAAc3I,KAAKC,GAC5B2I,EAAQ5I,KAAK+I,GAAW9I,EAAI8I,OAC9B/I,KAAI,CAACgJ,EAAGC,KAAC,IAAWD,EAAGE,IAAKD,EAAI,MAElCR,EAAIU,UAAU,CACVC,KAAM,CAACR,GACPS,KAAMP,IAGVL,EAAIa,KAAK,YACb,CAAE,MAAOC,GACL3C,QAAQ4C,MAAMD,EAClB,GAqR2Cf,CAAY5G,EAAW7B,GACtCmI,UAAU/B,EAAAA,EAAAA,IAAuB,OAATvE,QAAS,IAATA,OAAS,EAATA,EAAWP,OAAQ,GAAG+D,SAAA,EAE9CE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAY,CAAA/C,UAACE,EAAAA,EAAAA,KAACmE,EAAAA,EAAQ,CAACxE,SAAS,QAAQoD,MAAM,eAC/C/C,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAAAnD,SAAC,oBAIrB7C,IACG2C,EAAAA,EAAAA,MAAC+C,EAAAA,EAAQ,CACLtC,QAASA,IA5RnB+D,EAAC9H,EAAW7B,KAC9B,IACI,MAAM4I,EAAgB9I,EAAwB+B,EAAW7B,GAEnD4J,EAAYC,EAAAA,GAAWC,cAAclB,GACrCmB,EAAWF,EAAAA,GAAWG,WAE5BH,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,QAClDC,EAAAA,GAAeE,EAAU,aAC7B,CAAE,MAAOP,GACL3C,QAAQ4C,MAAMD,EAClB,GAiR2CG,CAAc9H,EAAW7B,GACxCmI,UAAU/B,EAAAA,EAAAA,IAAuB,OAATvE,QAAS,IAATA,OAAS,EAATA,EAAWP,OAAQ,GAAG+D,SAAA,EAE9CE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAY,CAAA/C,UAACE,EAAAA,EAAAA,KAACmE,EAAAA,EAAQ,CAACxE,SAAS,QAAQoD,MAAM,eAC/C/C,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAAAnD,SAAC,sBAIrB1C,EAAY1C,KAAIiK,GA3QjB,SAACC,EAAMC,EAAMC,GAAO,IAAElC,EAAQ9G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAQ,OAC1D8D,EAAAA,EAAAA,MAAC+C,EAAAA,EAAQ,CACLtC,QAASyE,EACTlC,SAAUA,EAAS9C,SAAA,EAEnBE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAY,CAAA/C,SAAE+E,KACf7E,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAAAnD,SAAE8E,MACR,CAoQiCG,CAAgBJ,EAAIC,KAAMD,EAAIE,KAAMF,EAAIG,QAASH,EAAI/B,mBAItF,EAIX,OACIhD,EAAAA,EAAAA,MAACoF,EAAAA,EAAI,CAAC9E,UAAU,qCAAqC+E,UAAWC,EAAAA,EAAMpF,SAAA,EAClEF,EAAAA,EAAAA,MAAA,OACIM,UAAU,kEAAiEJ,SAAA,EAEzE9C,GAAkBC,GAAoBG,EAAYrB,OAAS,GAAKmB,KAAoB8C,EAAAA,EAAAA,KAAC0B,GAAY,IAClGvE,GAAcA,EACdJ,IAASiD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,qCAAoCJ,SAAE/C,QAGlEiD,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CAAC3E,GAAI,CAAE4E,UAAWtH,IAAcgC,UAE3CF,EAAAA,EAAAA,MAACyF,EAAAA,EAAK,CAACC,cAAY,EAAClF,KAAMvD,EAASiD,SAAA,EAE/BE,EAAAA,EAAAA,KAACuF,EAAAA,EAAS,CAAAzF,UACNF,EAAAA,EAAAA,MAACG,EAAAA,EAAQ,CAAAD,SAAA,CAEJtD,GAAgBC,IACbuD,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,kDAAkDsF,MAAO,CAAEC,gBAAiB,WAAY3F,SAAC,MAMjHlD,IACGoD,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,kDAAkDsF,MAAO,CAAEC,gBAAiB,WAAY3F,SAAC,QAMjHrF,EAAQC,KAAI,CAACI,EAAQ4K,KAClB,MAAMC,GAAkB9E,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAgB,KAAM4F,EAAAA,EAAAA,IAAoB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAW,GAC/F4K,GAA+C,IAAlC9E,QAAc,OAANhG,QAAM,IAANA,OAAM,EAANA,EAAQI,gBAA4BJ,EAAOK,KAChE0K,EAAoBnI,EAAaqD,MAAKxC,GAAYA,EAASC,WAAa1D,EAAOc,aAC/EkK,EAAgBD,EAAoBA,EAAkBpH,UAAY,MAElD,IAADsH,EAAAC,EAAAC,EAAAC,EAArB,OAAIP,EACOC,GACH5F,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAENC,UAAW,wCACNpF,EAAOoB,MAAoF,QAA/E6J,EAAGhI,GAAYgD,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOoB,OAAOT,uBAAc,IAAAsK,OAAA,EAA5EA,EAA8E9H,MAAQ,IAC1GuH,MAAO,CAAEC,gBAAiB,WAC1BK,gBAAeD,GAAoBC,EAAsBhG,UAEzDE,EAAAA,EAAAA,KAACmG,EAAAA,EAAc,CACXC,SAAUP,EACVpH,UAAWqH,EACXzF,QAASA,IA9P1B7B,KACvB,MAAM6H,EAAmB3I,EAAaqD,MAAKxC,GAAYA,EAASC,WAAaA,IAC7E,GAAI6H,EAAkB,CAClB,MAAMC,EAAuC,QAA/BD,EAAiB5H,UAC/Bd,EAAgBD,EAAahD,KAAI6D,GAC7BA,EAASC,WAAaA,EAChB,IAAKD,EAAUE,UAAW6H,EAAQ,OAAS,OAC3C/H,IAEd,MACIZ,EAAgB,IAAID,EAAc,CAAEc,WAAUC,UAAW,QAC7D,EAmPuD8H,CAAkBzL,EAAOc,YAAYkE,SAEnDhF,EAAOQ,eAAsB,OAANR,QAAM,IAANA,GAAkB,QAAZkL,EAANlL,EAAQc,kBAAU,IAAAoK,OAAZ,EAANA,EAAoBxK,QAAQ,KAAM,SAXzDkK,IAeT1F,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAENC,UAAW,GAAAxE,OAAIZ,EAAOQ,cAAsB,OAANR,QAAM,IAANA,GAAAA,EAAQc,WAAc,oDAAsD,QAAO,MACpHd,EAAOoB,MAAoF,QAA/E+J,EAAGlI,GAAYgD,MAAK7E,GAASA,EAAM8B,OAASzC,OAAOT,EAAOoB,OAAOT,uBAAc,IAAAwK,OAAA,EAA5EA,EAA8EhI,MAAQ,IAC1GuH,MAAO,CAAEC,gBAAiB,WAAY3F,SAErChF,EAAOQ,eAAsB,OAANR,QAAM,IAANA,GAAkB,QAAZoL,EAANpL,EAAQc,kBAAU,IAAAsK,OAAZ,EAANA,EAAoB1K,QAAQ,KAAM,OALrDkK,GASV,IAAI,UAOvB9F,EAAAA,EAAAA,MAAC4G,EAAAA,EAAS,CAAA1G,SAAA,EACJhD,EAAoBqB,GAAaY,IAAerE,KAAI,CAACC,EAAKI,KACxDiF,EAAAA,EAAAA,KAACT,GAAO,CAAa5E,IAAKA,EAAKI,MAAOA,GAAxBA,KAEI,IAArBuB,EAAUP,SACPiE,EAAAA,EAAAA,KAACD,EAAAA,EAAQ,CAAAD,UACLE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNuB,QACI/G,EAAQsB,SACW,IAAjBS,GAAyBC,EAAkB,EAAI,KACzB,IAAvBG,EAA8B,EAAI,GAEvC4D,GAAI,CAAEiG,UAAW,UAAW3G,SAC/B,uBAWnBhD,GAA8C,IAAzBiC,GAAchD,SACjCiE,EAAAA,EAAAA,KAAA,OACIE,UAAU,WAAUJ,UAEpBE,EAAAA,EAAAA,KAAC0G,EAAAA,EAAe,CACZzB,UAAU,MACV0B,MAAOrK,EAAUP,OACjBsB,KAAMA,EACNuJ,aA9TKC,CAAC7E,EAAO8E,KAC7BxJ,EAAQwJ,EAAQ,EA8TAtJ,YAAaA,EACbuJ,oBA5Ta/E,IAC7BvE,EAAeuJ,SAAShF,EAAMiF,OAAO5F,MAAO,KAC5C/D,EAAQ,EAAE,EA2TM4J,mBAAoBC,MAAMC,KAAK,IAAIC,IAAI,CAAC1K,EAAkB,EAAG,GAAI,GAAI,IAAK,IAAK,OAAOyB,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACzGgJ,iBAAiB,gBACjBC,iBAAe,EACfC,gBAAc,QAKvB,EAgCfpL,EAAgBqL,aAAe,CAC3BnL,UAAW,GACX7B,QAAS,GACT8B,WAAY,KACZC,cAAc,EACdC,eAAgB,KAChBC,eAAgB,IAChBC,iBAAkB,GAClBC,oBAAoB,EACpBC,SAAU,QACVC,mBAAmB,EACnBC,WAAOf,EACPgB,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAiB,EACjBC,WAAY,KACZC,YAAa,IAGjB,S,uHC3jBasK,EAAoB,CAC7BC,MAAO,CACHnC,MAAO,CACHoC,MAAO,OACPnC,gBAAiB,gBAIzBjC,KAAM,CACFgC,MAAO,CACHC,gBAAiB,gBAGzBoC,UAAW,CACPrC,MAAO,CACHC,gBAAiB,YACjB1C,MAAO,QACPpD,SAAU,UAMTmI,EAAqB,CAC9BC,QAASA,CAACC,EAAUC,KAAK,IAClBD,EACHE,OAAQ,OACRC,WAAY,+BAEhBC,KAAMA,CAACJ,EAAUC,KAAK,IACfD,EACHK,OAAQ,QAmBHC,EAAW,CACpB,CACIC,GAAI,EACJC,SAAU,UACVC,QAAS,OACTvM,MAAO,OACP0L,MAAO,KAEX,CACIW,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,WAILE,EAAiB,CAC1B,CACIC,SAAU,EACV/D,KAAM,kBACNgE,SAAU,8BACVC,QAAS,iGACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIT,SAAU,EACV/D,KAAM,oBACNgE,SAAU,GACVC,QAAS,4JACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,eACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIT,SAAU,EACV/D,KAAM,kBACNgE,SAAU,GACVC,QAAS,4HACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,e,6DC5Hd,MAYA,EAZiB/M,IAAA,IAAC,MAAEgN,EAAK,MAAEC,GAAOjN,EAAA,OAC9BuD,EAAAA,EAAAA,MAAA,OAAKM,UAAU,oFAAmFJ,SAAA,EAC9FE,EAAAA,EAAAA,KAAA,MAAIwF,MAAO,CAAE7F,SAAU,OAAQoD,MAAO,OAAQwG,OAAQ,WAAYzJ,SAC7D0J,MAAMH,GACDA,GAAgB,IAChBA,GAAQjK,EAAAA,EAAAA,IAAaiK,GAAS,OAGxCrJ,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOJ,SAAEwJ,MACrB,C,sTCKV,MAAMG,GAAYC,EAAAA,EAAAA,IAAS,CACvBC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAkB,IAQhBC,EAAWzN,IAAA,IAAC,MAAEgN,EAAK,MAAEC,GAAOjN,EAAA,OAAK2D,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAACV,MAAOA,EAAOC,MAAOA,GAAS,EAkb/E,EAhboCU,KAAO,IAADC,EACtC,MAAOC,EAAgBC,IAAqB5M,EAAAA,EAAAA,UAAS,KAC9C6M,EAAWC,IAAgB9M,EAAAA,EAAAA,UAAS,KACpC+M,EAAaC,IAAkBhN,EAAAA,EAAAA,UAAS,KACxCiN,EAAQC,IAAalN,EAAAA,EAAAA,WAAS,IAC9BmN,EAAgBC,IAAqBpN,EAAAA,EAAAA,WAAS,IAC9CqN,EAAYC,IAAoBtN,EAAAA,EAAAA,UAAS,CAAC,IAC1CgG,EAAQuH,IAAavN,EAAAA,EAAAA,UAAS,CACjCwN,MAAMC,EAAAA,EAAAA,MACNC,IAAIC,EAAAA,EAAAA,MACJC,MAAO,GACPC,KAAM,gBACNC,QAAS,EACTC,WAAY,MAGhBC,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACN3C,QAAQ,gDAADnN,OAAkD6H,EAAOwH,KAAI,YAAArP,OAAW6H,EAAO0H,GAAE,WAAAvP,OAAU6H,EAAO4H,SAC1GM,MAAKjR,IACJ,GAAIA,EAAKkR,QAAS,CACdvB,EAAkB3P,EAAKA,MACvB,MAAMmR,EAAmB,IAAItE,IAAI7M,EAAKA,KAAKE,KAAIgJ,GAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGkI,eACvDrB,EAAepD,MAAMC,KAAKuE,IAC1B,MAAME,EAAS,GACTC,EAAe,IAAIzE,IAEzB7M,EAAKA,KAAKK,SAAQ6I,IACToI,EAAaC,IAAIrI,EAAEsI,UACpBH,EAAOI,KAAK,CACRC,SAAUxI,EAAEwI,SACZC,iBAAkBzI,EAAEyI,iBACpBH,OAAQtI,EAAEsI,SAEdF,EAAaM,IAAI1I,EAAEsI,QACvB,IAGJH,EAAOzN,MAAK,CAACC,EAAGC,IAAM/C,OAAO8C,EAAE6N,UAAUG,cAAc/N,EAAE4N,YACzD7B,EAAawB,EACjB,KACDS,OAAMrI,GAAK3C,QAAQ4C,MAAMD,IAAG,GAChC,CAACV,EAAOwH,KAAMxH,EAAO0H,GAAI1H,EAAO4H,QAEnC,MAAMoB,EAAaA,KACf9B,GAAU,GACVI,EAAiB,CAAC,EAAE,EAGlB2B,GAAYC,EAAAA,EAAAA,IAAY,IAAIC,KAAKnJ,EAAOwH,MAAO,IAAI2B,KAAKnJ,EAAO0H,KAC/D0B,EAAczC,EAAe3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAAQpP,OAChF6Q,EAAaJ,EAAYG,EAEzBE,EAAa3C,EACd3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C2B,QAAO,CAACC,EAAKC,IAASD,GAAO,IAAIL,KAAKM,EAAKC,SAAW,IAAIP,KAAKM,EAAKE,UAAU,GAE7EC,EAAsBN,EAAaF,EAEnCS,EAAgB,IAAIV,KACtBxC,EACK3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C2B,QAAO,CAACC,EAAKC,IAASD,EAAM,IAAIL,KAAKM,EAAKE,QAAQG,WAAW,GAAKV,GACzEW,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAEjEC,EAAiB,IAAIhB,KACvBxC,EACK3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C2B,QAAO,CAACC,EAAKC,IAASD,EAAM,IAAIL,KAAKM,EAAKC,SAASI,WAAW,GAAKV,GAC1EW,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAEvE,IAAIE,EAAQC,KAAKC,MAAMV,EAAmB,MACtCW,EAAUF,KAAKG,MAAOZ,EAAmB,KAAmB,KAChD,KAAZW,IACAH,GAAS,EACTG,EAAU,GAGd,MAAME,EAAsB9D,EACvB3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C2B,QAAO,CAACC,EAAKC,IAASD,EAAM,IAAIL,KAAKM,EAAKE,QAAQG,WAAW,GAAKV,EAEjEsB,EAAuB/D,EACxB3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C2B,QAAO,CAACC,EAAKC,IAASD,EAAM,IAAIL,KAAKM,EAAKC,SAASI,WAAW,GAAKV,EAElEuB,EAAiB,CACnB,CACIC,MAAO,aACP9M,MAAOmL,GAEX,CACI2B,MAAO,eACP9M,MAAOsL,GAEX,CACIwB,MAAO,cACP9M,MAAOuL,GAEX,CACIuB,MAAO,gBACP9M,MAAOsM,EAAQ,IAAMG,GAEzB,CACIK,MAAO,kBACP9M,OAAO+M,EAAAA,EAAAA,GAAahB,IAExB,CACIe,MAAO,mBACP9M,OAAO+M,EAAAA,EAAAA,GAAaV,IAExB,CACIS,MAAO,qBACP9M,MAAM,GAAD3F,OAAKkS,KAAKC,MAAMhB,EAAU,MAAoB,WAEvD,CACIsB,MAAO,gBACP9M,MAAO6I,EACF3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C5H,QAAOG,GAAK,IAAIgJ,KAAKhJ,EAAEwJ,QAAQG,UAAYW,IAC3CjS,QAET,CACIoS,MAAO,mBACP9M,MAAO6I,EACF3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC3C5H,QAAOG,GAAK,IAAIgJ,KAAKhJ,EAAEuJ,SAASI,UAAYY,IAC5ClS,QAET,CACIoS,MAAO,oBACP9M,MAAO6I,EAAe3G,QAAOG,IAAK7C,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAAQ5H,QAAOG,GAAmC,gBAA9BA,EAAE2K,iBAAiBC,SAAuBvS,SAIjIwS,EAAgB,CAClB,CACIJ,MAAO,aACP9M,OAAOoL,EAAAA,EAAAA,IAAY,IAAIC,KAAKnJ,EAAOwH,MAAO,IAAI2B,KAAKnJ,EAAO0H,MAE9D,CACIkD,MAAO,kBACP9M,MAAO+I,EAAUrO,QAErB,CACIoS,MAAO,qBACP9M,MAAO6I,EAAenO,OAASyQ,IAIjCgC,GAAcC,GACHA,EAAI/T,KAAIgJ,IAAC,CAClBsI,OAAQtI,EAAEsI,OACV0C,SAAUhL,EAAEwI,SACZgB,OAAQxJ,EAAEwJ,OACVD,QAASvJ,EAAEuJ,QACXP,KAAMhJ,EAAEwJ,OACRtB,YAAalI,EAAEkI,gBAIdrI,QAAOG,IAAMH,EAAO4H,QAAStK,EAAAA,EAAAA,IAAc6C,EAAEsI,OAAQzI,EAAO4H,SAC5D5H,QAAOG,IAAMH,EAAO+H,YAAc5H,EAAEkI,cAAgBrI,EAAO+H,aAMpE,OACI1L,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAAhC,SAAA,EACIE,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,CAAAlF,UAEDF,EAAAA,EAAAA,MAAC+O,EAAAA,EAAW,CAACnO,GAAI,CAAEoO,UAAW,QAAS9O,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sFAAqFJ,SAAA,EAChGE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOJ,SAAC,yBACtBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAAChF,MAAM,sBAAqB+C,UAChCE,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACPE,QAASA,IAzLnB/D,KACtB,MAAMuS,GAAMC,EAAAA,EAAAA,IAAYrF,EAAZqF,CAAuBxS,IACnCyS,EAAAA,EAAAA,IAAStF,EAATsF,CAAoBF,EAAI,EAuLuBG,CAAiBR,GAAWtE,IAC3ChK,UAAU,OAAMJ,UAEhBE,EAAAA,EAAAA,KAACiP,EAAAA,EAAY,SAGrBjP,EAAAA,EAAAA,KAACkP,EAAAA,EAAM,CACHzG,QAAQ,WACRpI,QAASA,IAAMsK,GAAkB,GAAM7K,SAEtCyD,EAAO4H,MAAQ,kBAAoB,8BAKhDvL,EAAAA,EAAAA,MAAA,OAAKM,UAAU,gBAAeJ,SAAA,EAE1BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0CAAyCJ,SAAA,EACpDE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,cACPE,EAAAA,EAAAA,KAACmP,EAAAA,GAAM,CACH9N,MAAO,CAAEA,MAAa,OAANkC,QAAM,IAANA,OAAM,EAANA,EAAQ6L,OAAQjB,MAAa,OAAN5K,QAAM,IAANA,OAAM,EAANA,EAAQ6H,MAC/CiE,SAAWpL,GAAM6G,EAAU,IAAKvH,EAAQ4H,MAAOlH,EAAE5C,MAAO+J,KAAMnH,EAAEkK,QAChEmB,QAAS,CACL,CAAEjO,MAAO,GAAI8M,MAAO,IAAM/D,EAAUrO,OAAS,uBAC1CqO,EAAU1P,KAAI6U,IAAG,CAAOlO,MAAU,OAAHkO,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,OAAQmC,MAAU,OAAHoB,QAAG,IAAHA,OAAG,EAAHA,EAAKrD,cAE/DsD,OAAQ1H,EAAAA,GACR2H,cAAc,EACdC,YAAa,sBAIrB9P,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0CAAyCJ,SAAA,EACpDE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,UACPE,EAAAA,EAAAA,KAAA,SACIhC,KAAK,OACLkC,UAAU,YACVmB,MAAa,OAANkC,QAAM,IAANA,OAAM,EAANA,EAAQwH,KACfsE,SAAUpL,GAAK6G,GAAUxK,IAAG,IAAUA,EAAKyK,KAAM9G,EAAEgD,OAAO5F,gBAIlEzB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0CAAyCJ,SAAA,EACpDE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,QACPE,EAAAA,EAAAA,KAAA,SACIhC,KAAK,OACLkC,UAAU,YACVmB,MAAa,OAANkC,QAAM,IAANA,OAAM,EAANA,EAAQ0H,GACfoE,SAAUpL,GAAK6G,GAAUxK,IAAG,IAAUA,EAAK2K,GAAIhH,EAAEgD,OAAO5F,gBAIhEzB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0CAAyCJ,SAAA,EACpDE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,kBACPF,EAAAA,EAAAA,MAAA,UACIM,UAAU,WACVmB,MAAa,OAANkC,QAAM,IAANA,OAAM,EAANA,EAAQ8H,QACfgE,SAAUpL,GAAK6G,GAAUxK,IAAG,IAAUA,EAAK+K,QAAS5J,OAAOwC,EAAEgD,OAAO5F,WAAWvB,SAAA,EAE/EE,EAAAA,EAAAA,KAAA,UAAQqB,MAAO,EAAEvB,SAAC,cAClBE,EAAAA,EAAAA,KAAA,UAAQqB,MAAO,EAAEvB,SAAC,iBAI1BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0CAAyCJ,SAAA,EACpDE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,iBACPF,EAAAA,EAAAA,MAAA,UACIM,UAAU,WACVmB,MAAa,OAANkC,QAAM,IAANA,OAAM,EAANA,EAAQ+H,WACf+D,SAAUpL,GAAK6G,GAAUxK,IAAG,IAAUA,EAAKgL,WAAYrH,EAAEgD,OAAO5F,UAAUvB,SAAA,EAE1EE,EAAAA,EAAAA,KAAA,UAAQqB,MAAO,GAAGvB,SAAC,eAClBwK,EAAY5P,KAAI,CAACgJ,EAAGC,KACjB3D,EAAAA,EAAAA,KAAA,UAAQqB,MAAOqC,EAAE5D,SAAU4D,GAAJC,eAOtC9C,EAAAA,EAAAA,IAAc0C,EAAO8H,QAAS,KAC3BrL,EAAAA,EAAAA,KAAC2P,EAAAA,EAAY,CACTC,QAAS,CAACC,EAAAA,EAAgBC,EAAAA,EAAYC,EAAAA,EAAeC,EAAAA,IACrDC,YAAY,YACZC,YAAa,IAAIxD,KACjByD,OAC8B,QADxBlG,EACFuE,GAAWtE,UAAe,IAAAD,OAAA,EAA1BA,EAA4BvP,KAAIgJ,IAAC,CAC7B3G,MAAQ,OAAD2G,QAAC,IAADA,OAAC,EAADA,EAAGgL,SACV0B,MAAO,IAAI1D,KAAM,OAADhJ,QAAC,IAADA,OAAC,EAADA,EAAGwJ,QACnBmD,IAAK,IAAI3D,KAAM,OAADhJ,QAAC,IAADA,OAAC,EAADA,EAAGuJ,SACjBqD,WAAY5M,MAGpB6M,cAAe,CACXC,KAAM,YACNC,OAAQ,QACRC,MAAO,sDAEXC,aAAc,WACdC,qBAAqB,EACrBC,UAAU,EACVC,YAAU,EACVC,cAAY,EACZC,WAAYC,IACR,MAAMC,EAASD,EAAIjP,MAAMmP,cAAcb,WACvCzF,EAAiBqG,GACjBzG,GAAU,EAAK,EAEnB2G,SAAUC,IACN,MAAMC,EAAU,IAAI5E,KAAK2E,EAAKE,QAC9BD,EAAQE,QAAQF,EAAQG,UAAY,GACpC,MAAMC,EAAmBJ,EAAQK,mBAAmB,SACpD7G,GAAUxK,IAAG,IACNA,EACHyK,KAAMsG,EAAKO,SAASC,MAAM,KAAK,GAC/B5G,GAAIyG,KACL,EAEPxJ,OAAQ,OAIfrH,EAAAA,EAAAA,IAAc0C,EAAO8H,QAAS,KAC3BrL,EAAAA,EAAAA,KAAC5D,EAAAA,EAAe,CACZE,UAAWkS,GAAWtE,GACtBzP,QAAS,CACL,CACImB,WAAY,WACZK,UAAW,SACXjB,UAAW,EACX8W,QAAS,GAEb,CACIlW,WAAY,cACZK,UAAW,SACXjB,UAAW,EACX8W,QAAS,GAEb,CACIlW,WAAY,OACZK,UAAW,OACXjB,UAAW,EACX8W,QAAS,GAEb,CACIlW,WAAY,SACZK,UAAW,OACXjB,UAAW,EACX8W,QAAS,GAEb,CACIlW,WAAY,UACZK,UAAW,OACXjB,UAAW,EACX8W,QAAS,IAGjBlV,oBAAoB,UAOpCgD,EAAAA,EAAAA,MAACmS,EAAAA,EAAM,CACHtS,KAAM+K,EACNpI,QAASmK,EACTyF,WAAS,EACTC,SAAS,KAAInS,SAAA,EAEbF,EAAAA,EAAAA,MAACsS,EAAAA,EAAW,CAAChS,UAAU,iCAAgCJ,SAAA,EACnDE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,wBACNE,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACE,QAASkM,EAAWzM,UAACE,EAAAA,EAAAA,KAACmS,EAAAA,EAAK,CAAC3R,GAAI,CAAEuC,MAAO,iBAGzD/C,EAAAA,EAAAA,KAACoS,EAAAA,EAAa,CAAAtS,UACVE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mBAAkBJ,UAC7BE,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOJ,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kCAAiCJ,SAAC,gBAChDE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2CAA0CJ,SAAC,iBAE7DF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,oCAAmCJ,SAAY,OAAV8K,QAAU,IAAVA,GAAAA,EAAYsC,QAAS7N,EAAAA,EAAAA,IAAoB,OAAVuL,QAAU,IAAVA,OAAU,EAAVA,EAAYsC,QAAU,SACxGlN,EAAAA,EAAAA,KAAA,MAAIE,UAAU,6CAA4CJ,SAAY,OAAV8K,QAAU,IAAVA,GAAAA,EAAYqC,SAAU5N,EAAAA,EAAAA,IAAoB,OAAVuL,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,SAAW,YAEvHrN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kCAAiCJ,SAAC,aAChDE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2CAA0CJ,SAAC,iBAE7DF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,oCAAmCJ,SAAY,OAAV8K,QAAU,IAAVA,GAAAA,EAAYsC,QAAS5N,EAAAA,EAAAA,IAAoB,OAAVsL,QAAU,IAAVA,OAAU,EAAVA,EAAYsC,QAAU,SACxGlN,EAAAA,EAAAA,KAAA,MAAIE,UAAU,6CAA4CJ,SAAY,OAAV8K,QAAU,IAAVA,GAAAA,EAAYqC,SAAU3N,EAAAA,EAAAA,IAAoB,OAAVsL,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,SAAW,wBAyB3IrN,EAAAA,EAAAA,MAACmS,EAAAA,EAAM,CACHtS,KAAMiL,EACNtI,QAASA,IAAMuI,GAAkB,GACjCsH,SAAS,KAAKD,WAAS,EAAAlS,SAAA,EAEvBF,EAAAA,EAAAA,MAACsS,EAAAA,EAAW,CAAChS,UAAU,iCAAgCJ,SAAA,EACnDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,sBACkByD,EAAO4H,OAAS,MAAQ5H,EAAO6H,MACnDpL,EAAAA,EAAAA,KAAA,QAAME,UAAU,iBAAgBJ,UAAET,EAAAA,EAAAA,IAAUkE,EAAOwH,MAAQ,OAAQ1L,EAAAA,EAAAA,IAAUkE,EAAO0H,UAExFjL,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACE,QAASA,IAAMsK,GAAkB,GAAO7K,UAACE,EAAAA,EAAAA,KAACmS,EAAAA,EAAK,CAAC3R,GAAI,CAAEuC,MAAO,iBAE7E/C,EAAAA,EAAAA,KAACoS,EAAAA,EAAa,CAAAtS,UACVE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKJ,SACfyD,EAAO4H,MACJ+C,EAAexT,KAAI,CAACgJ,EAAGC,KACnB3D,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcJ,UACzBE,EAAAA,EAAAA,KAAC8J,EAAQ,CAACT,MAAO3F,EAAErC,MAAOiI,MAAO5F,EAAEyK,SADJxK,KAKvC4K,EAAc7T,KAAI,CAACgJ,EAAGC,KAClB3D,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcJ,UACzBE,EAAAA,EAAAA,KAAC8J,EAAQ,CAACT,MAAO3F,EAAErC,MAAOiI,MAAO5F,EAAEyK,SADJxK,cASxD,C,6DCpcX,SAAe0O,EAAAA,EAAAA,IAA4BrS,EAAAA,EAAAA,KAAK,OAAQ,CACtDsS,EAAG,0GACD,Q,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BrS,EAAAA,EAAAA,KAAK,OAAQ,CACtDsS,EAAG,wCACD,e,0ICJG,SAASC,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAkBC,EAAAA,EAAAA,IAAO,MAAO,CACpCjO,KAAM,iBACN4N,KAAM,OACNM,kBAAmBA,CAACC,EAAOvD,IAAWA,EAAOwD,MAHvBH,EAIrB,KACM,CACLI,QAAS,GACT,eAAgB,CACdC,cAAe,QAoDrB,EAhDiCC,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,MAAMN,GAAQO,EAAAA,EAAAA,GAAgB,CAC5BP,MAAOK,EACPxO,KAAM,oBAEF,UACF1E,EAAS,UACT+E,EAAY,OACV8N,EACJQ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAOJ,GACzCc,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrC9N,cAEI0O,EAlCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBT,EAA4BoB,EAAQ,EA2BjDE,CAAkBJ,GAClC,OAAoBzT,EAAAA,EAAAA,KAAK4S,GAAiBc,EAAAA,EAAAA,GAAS,CACjDI,GAAI7O,EACJ/E,WAAW6T,EAAAA,EAAAA,GAAKJ,EAAQX,KAAM9S,GAC9BuT,WAAYA,EACZJ,IAAKA,GACJE,GACL,G,sDCtDA,IAAIS,EAAE,CAACrK,eAAe,IAAIC,iBAAiB,IAAIqK,cAAa,EAAGC,eAAe,IAAIC,WAAU,EAAGpX,MAAM,sBAAsBqX,SAAS,YAAYC,mBAAkB,EAAGC,aAAY,EAAGC,QAAO,EAAGC,cAAc,GAAG3K,kBAAiB,EAAG4K,YAAY,CAACC,KAAK,OAAOC,MAAM,SAASC,qBAAqB,IAAwBC,EAAGC,GAAI9T,OAAO+T,OAAO,CAAC,EAAEf,EAAEc,GAAG,MAAME,UAAUC,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKxQ,KAAK,oBAAoB,EAAE,MAAMyQ,UAAUJ,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKxQ,KAAK,mBAAmB,EAAE,MAAM0Q,UAAUL,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKxQ,KAAK,6BAA6B,EAAE,MAAM2Q,UAAUN,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKxQ,KAAK,4BAA4B,EAAE,IAAI4Q,EAAGV,GAAIA,EAAWW,EAAED,EAAEE,EAAEF,EAAEG,EAAEH,EAAEI,EAAEJ,EAAEK,EAAEL,EAAyFM,EAAGhB,GAAwBc,EAAT,kBAAJd,EAAeA,EAAEnZ,IAAOmZ,GAAGiB,EAAGjB,GAAwBe,EAAT,kBAAJf,EAAeA,EAAEkB,aAAgBlB,GAA4HmB,EAAGnB,GAAKoB,GAAIR,EAAIZ,EAAKoB,EAAjuB,QAAuuBC,EAAGrB,GAAI,CAACoB,EAAEE,IAAIC,EAAEvB,EAAFuB,CAAKV,EAAIO,EAAKE,IAAKC,EAAGvB,GAAKoB,GAAQA,EAAGpB,EAAEnL,eAAskB2M,EAAEA,CAACxB,EAAEoB,KAAK,GAAnDpB,KAAKA,IAAIA,KAAKyB,SAASzB,IAAIhU,QAAQgU,EAAE,IAAiB0B,CAAEN,GAAG,CAAC,GAAwB,WAArBpB,EAAElL,iBAA4B,OAAO6L,EAAES,EAAEO,kBAAkB,GAAG3B,EAAElL,iBAAiB,OAAO6L,EAAES,EAAEQ,WAAWlb,QAAQ,IAAIsZ,EAAElL,kBAAkB,CAAC,OAAO6L,EAAES,EAAEQ,WAAW,EAAEC,EAAEA,CAAC7B,EAAEoB,KAAK,IAAIE,EAAEF,EAA0N,OAArNpB,EAAEb,cAAca,EAAEnL,gBAAgBuM,EAAEU,QAAQ9B,EAAEnL,iBAAiB,GAAGmL,EAAEZ,gBAAgBgC,EAAEU,QAAQ9B,EAAEZ,iBAAiB,GAAGgC,EAAEU,QAAQ,OAAO,GAAGV,EAAEU,QAAQ,OAAO,KAAER,EAAEtB,EAAEZ,eAAtyC,SAASY,EAAEoB,GAAG,MAAM,KAAHA,GAAQpB,EAAE8B,QAAQ,MAAM,EAAS9B,EAAEtZ,QAAQ,KAAK,MAAasZ,CAAC,CAAsuC+B,CAAEX,EAAEpB,EAAEZ,gBAAgBY,EAAEZ,gBAAsBuB,EAAEW,EAAE,EAA2N9X,EAAEA,CAACwW,EAAEoB,KAAK,GAAc,kBAAJA,EAAa,OAAOI,EAAExB,EAAEoB,GAAG,GAAc,kBAAJA,EAAa,OAAOS,EAAE7B,EAAEoB,GAAG,GAAc,mBAAJA,GAAepB,EAAEL,YAAY,MAAlVqC,EAAChC,EAAEoB,KAAK,MAAME,EAAEF,EAAE,OAAO,QAAQ,OAAOT,EAAEX,EAAEL,YAAY2B,GAAG,EAA8RU,CAAEhC,EAAEoB,GAAG,GAAO,OAAJA,GAAqB,qBAAJA,EAAgB,MAArUa,EAACjC,EAAEoB,IAAmB,qBAAJA,QAA0C,IAAzBpB,EAAEF,qBAAqC+B,EAAE7B,EAAEA,EAAEF,qBAAqB,IAAuB+B,EAAE7B,EAAd,OAAJoB,EAAoB,OAAmB,IAAyLa,CAAEjC,EAAEoB,GAAG,MAAM,IAAIX,EAAE,gBAAD7Z,cACj8Ewa,EAAC,kLAEf,EAAMc,EAAIlC,GAAKoB,IAAK,MAAME,EAAEvB,EAAEC,GAAGmC,EAAEb,EAAEvM,iBAAiB7I,OAAOkW,KAAKhB,EAAE,IAAIE,EAAE5B,cAAc,IAAI2C,EAHyxB,SAACrC,GAAC,QAAAsC,EAAAtb,UAAAC,OAAIma,EAAC,IAAA/O,MAAAiQ,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAADnB,EAACmB,EAAA,GAAAvb,UAAAub,GAAA,OAAGnB,EAAEpJ,QAAO,CAACsJ,EAAEa,IAAIA,EAAEb,IAAGtB,EAAE,CAGxzBwC,CAAE5B,EAAE,IAHwzBZ,IAAKoB,GAAIpB,EAAEP,OAAOmB,EAAIQ,EAAvoB,UAA6oBA,EAGh1BqB,CAAEnB,GAHm1BtB,IAAKoB,GAAIpB,EAAEX,UAAU8B,EAAEP,EAAIQ,EAAGpB,EAAE/X,OAAXkZ,CAAmBN,EAAE,KAAKO,EAG/3BsB,CAAEpB,GAHk+BqB,EAAC3C,EAAEoB,IAAKE,IAAK,IAAItB,EAAET,kBAAkB,OAAO+B,EAAE,GAAGF,EAAEna,OAAO,EAAE,MAAM,IAAIsZ,EAAE,qJAAqJ,IAAI4B,EAAEtB,EAAE,IAAI,IAAI,IAAIwB,EAAE,EAAEA,EAAEjB,EAAEna,OAAOob,IAAI,CAAC,MAAMO,EAAE3B,EAAEG,EAAEiB,IAAIF,EAAEd,EAAErB,EAAFqB,CAAKc,EAAE3Y,EAAEwW,EAAI4C,GAAI,CAAC,OAAOT,EAAEtB,EAAIsB,EAAGjY,MAAM,GAAG,IAAIiX,EAAEG,EAAFH,CAAKgB,EAAE,EAG5yCQ,CAAErB,EAAEa,GAH4yCU,EAAC7C,EAAEoB,EAAEE,IAAKa,IAAK,IAAIE,EAAEF,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAEtB,EAAEra,OAAO2b,IAAI,CAAC,IAAIE,EAAEjC,EAAE,IAAI,IAAI,IAAIkC,EAAE,EAAEA,EAAE3B,EAAEna,OAAO8b,IAAI,CAAC,MAAMC,EAAEhC,EAAEI,EAAE2B,IAAIE,EAAE3B,EAAEsB,GAAKI,GAAIF,EAAEzB,EAAErB,EAAFqB,CAAKyB,EAAEtZ,EAAEwW,EAAEiD,GAAG,CAACH,EAAEjC,EAAIiC,EAAG5Y,MAAM,GAAG,IAAImY,EAAElB,EAAEkB,EAAFlB,CAAK2B,EAAE,CAAC,OAAOT,CAAC,EAG19CQ,CAAEvB,EAAEa,EAAEf,IAAI,GAAKiB,EAAGpb,OAAO,EAAE,MAAM,IAAIiZ,EAAE,sDAAsD,OAAOmC,CAAC,EAAwHa,EAAIlD,GAAKoB,IAAK,IAAI+B,OAAO,MAAM,IAAI3C,EAAE,wDAAwD,MAAMc,EAAtNtB,IAAKoB,IAAK,MAAae,EAAIf,EAAGiB,EAAZtC,EAAEC,GAAcR,YAAY,QAAQ,MAAM,OAAO,IAAI4D,KAAK,CAACjB,GAAG,CAACjZ,KAAI,QAAAtC,OAASyb,EAAC,mBAAkB,EAAuGgB,CAAErD,EAAFqD,CAAKjC,GAAGe,EAAEpC,EAAEC,GAAGqC,EAAEF,EAAE3C,YAAY,MAAM,MAAMoD,EAAC,GAAAhc,OAAIub,EAAE7C,SAAQ,KAAA1Y,OAAIyb,GAAIS,EAAEQ,SAASC,cAAc,KAAKT,EAAE7I,SAAS2I,EAAEE,EAAEU,KAAKC,IAAIC,gBAAgBpC,GAAGwB,EAAEa,aAAa,aAAa,UAAUL,SAASrU,KAAK2U,YAAYd,GAAGA,EAAEe,QAAQP,SAASrU,KAAK6U,YAAYhB,EAAE,C","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","Pages/Analytics/entryComps/numCardComp.jsx","Pages/Attendance/fingerPrintAttendance.jsx","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/FileDownload.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/export-to-csv/output/index.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton, Button, Popover, MenuList, MenuItem, ListItemIcon, ListItemText, Tooltip, Card } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {'top'|'middle'|'bottom'} verticalAlign\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} name\r\n * @property {Element} icon\r\n * @property {Function} onclick\r\n * @property {boolean} disabled\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {''} [props.title]\r\n * @param {boolean} [props.PDFPrintOption]\r\n * @param {boolean} [props.ExcelPrintOption]\r\n * @param {boolean} [props.maxHeightOption]\r\n * @param {React.ReactElement} [props.ButtonArea]\r\n * @param {Array<Menu>} props.MenuButtons\r\n */\r\n\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'center') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst createPopUpMenu = (name, icon, onclick, disabled = false) => (\r\n    <MenuItem\r\n        onClick={onclick}\r\n        disabled={disabled}\r\n    >\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText>{name}</ListItemText>\r\n    </MenuItem>\r\n)\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = []\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            ) + (\r\n                                                    column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                                )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    ) + (\r\n                                            column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                        )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const TableActions = () => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Tooltip title='Export options and more...'>\r\n                    <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Popover\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        {maxHeightOption && (\r\n                            <MenuItem\r\n                                onClick={() => setShowFullHeight(pre => !pre)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    {showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />\r\n                                    }\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    color={showFullHeight ? 'success' : ''}\r\n                                >Max Height</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {PDFPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => generatePDF(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download PDF</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {ExcelPrintOption && (\r\n                            <MenuItem\r\n                                onClick={() => exportToExcel(dataArray, columns)}\r\n                                disabled={isEqualNumber(dataArray?.length, 0)}\r\n                            >\r\n                                <ListItemIcon><Download fontSize=\"small\" color='primary' /></ListItemIcon>\r\n                                <ListItemText>Download Excel</ListItemText>\r\n                            </MenuItem>\r\n                        )}\r\n\r\n                        {MenuButtons.map(btn => createPopUpMenu(btn.name, btn.icon, btn.onclick, btn.disabled))}\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && <TableActions />}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: []\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    // createPopUpMenu,\r\n}","\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","import { NumberFormat } from \"../../../Components/functions\"\n\nconst CardComp = ({ Value, Label }) => (\n    <div className=\"grid-card d-flex align-items-center justify-content-center flex-column cus-shadow\">\n        <h1 style={{ fontSize: '45px', color: 'blue', margin: '0 0.5em' }}>\n            {isNaN(Value)\n                ? Value ? Value : '-'\n                : Value ? NumberFormat(Value) : '0'\n            }\n        </h1>\n        <h2 className='fa-20'>{Label}</h2>\n    </div>\n)\n\nexport default CardComp;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, IconButton, Dialog, DialogTitle, DialogContent, Button, Tooltip } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { DaysBetween, firstDayOfMonth, formatTime24, isEqualNumber, ISOString, LocalDate, LocalTime } from \"../../Components/functions\";\r\nimport { Close, FileDownload } from \"@mui/icons-material\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport CardComp from '../Analytics/entryComps/numCardComp';\r\nimport FilterableTable from '../../Components/filterableTable2';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst handleExportData = (dataArray) => {\r\n    const csv = generateCsv(csvConfig)(dataArray);\r\n    download(csvConfig)(csv);\r\n};\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst FingerPrintAttendanceReport = () => {\r\n    const [attendanceData, setAttendanceData] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [salaryTypes, setSalaryTypes] = useState([]);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [dialogAbstract, setDialogAbstract] = useState(false);\r\n    const [objDetails, setObjectDetails] = useState({});\r\n    const [filter, setFilter] = useState({\r\n        From: firstDayOfMonth(),\r\n        To: ISOString(),\r\n        EmpId: '',\r\n        Name: 'All Employees',\r\n        display: 0, // calendar - 0, table - 1.\r\n        salaryType: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `empAttendance/fingerPrintAttendance?Fromdate=${filter.From}&Todate=${filter.To}&EmpId=${filter.EmpId}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setAttendanceData(data.data);\r\n                const uniqueSalaryType = new Set(data.data.map(o => o?.Salary_Type));\r\n                setSalaryTypes(Array.from(uniqueSalaryType));\r\n                const empSet = [];\r\n                const uniqueEmpIds = new Set();\r\n\r\n                data.data.forEach(o => {\r\n                    if (!uniqueEmpIds.has(o.Emp_Id)) {\r\n                        empSet.push({\r\n                            Emp_Name: o.Emp_Name,\r\n                            fingerPrintEmpId: o.fingerPrintEmpId,\r\n                            Emp_Id: o.Emp_Id,\r\n                        });\r\n                        uniqueEmpIds.add(o.Emp_Id);\r\n                    }\r\n                });\r\n\r\n                empSet.sort((a, b) => String(a.Emp_Name).localeCompare(b.Emp_Name))\r\n                setEmployees(empSet);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [filter.From, filter.To, filter.EmpId,])\r\n\r\n    const closeDialg = () => {\r\n        setDialog(false);\r\n        setObjectDetails({});\r\n    }\r\n\r\n    const totalDays = DaysBetween(new Date(filter.From), new Date(filter.To));\r\n    const presentDays = attendanceData.filter(o => isEqualNumber(o.Emp_Id, filter.EmpId)).length;\r\n    const absentDays = totalDays - presentDays;\r\n\r\n    const totalHours = attendanceData\r\n        .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n        .reduce((sum, item) => sum + (new Date(item.OutTime) - new Date(item.InTime)), 0);\r\n\r\n    const averageMilliseconds = totalHours / presentDays;\r\n\r\n    const averageInTime = new Date(\r\n        attendanceData\r\n            .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n            .reduce((sum, item) => sum + new Date(item.InTime).getTime(), 0) / presentDays\r\n    ).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });\r\n\r\n    const averageOutTime = new Date(\r\n        attendanceData\r\n            .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n            .reduce((sum, item) => sum + new Date(item.OutTime).getTime(), 0) / presentDays\r\n    ).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });\r\n\r\n    let hours = Math.floor(averageMilliseconds / (1000 * 60 * 60));\r\n    let minutes = Math.round((averageMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n    if (minutes === 60) {\r\n        hours += 1;\r\n        minutes = 0;\r\n    }\r\n\r\n    const averageInTimeMillis = attendanceData\r\n        .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n        .reduce((sum, item) => sum + new Date(item.InTime).getTime(), 0) / presentDays;\r\n\r\n    const averageOutTimeMillis = attendanceData\r\n        .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n        .reduce((sum, item) => sum + new Date(item.OutTime).getTime(), 0) / presentDays;\r\n\r\n    const ifEmployeeData = [\r\n        {\r\n            label: 'Total Days',\r\n            value: totalDays,\r\n        },\r\n        {\r\n            label: 'Present Days',\r\n            value: presentDays,\r\n        },\r\n        {\r\n            label: 'Absent Days',\r\n            value: absentDays,\r\n        },\r\n        {\r\n            label: 'Average Hours',\r\n            value: hours + ':' + minutes,\r\n        },\r\n        {\r\n            label: 'Average In-Time',\r\n            value: formatTime24(averageInTime),\r\n        },\r\n        {\r\n            label: 'Average Out-Time',\r\n            value: formatTime24(averageOutTime),\r\n        },\r\n        {\r\n            label: 'Total Hours Worked',\r\n            value: `${Math.floor(totalHours / (1000 * 60 * 60))} hours`,\r\n        },\r\n        {\r\n            label: 'Late Arrivals',\r\n            value: attendanceData\r\n                .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n                .filter(o => new Date(o.InTime).getTime() > averageInTimeMillis)\r\n                .length,\r\n        },\r\n        {\r\n            label: 'Early Departures',\r\n            value: attendanceData\r\n                .filter(o => isEqualNumber(o.Emp_Id, filter.EmpId))\r\n                .filter(o => new Date(o.OutTime).getTime() < averageOutTimeMillis)\r\n                .length,\r\n        },\r\n        {\r\n            label: 'Half Present Days',\r\n            value: attendanceData.filter(o => isEqualNumber(o.Emp_Id, filter.EmpId)).filter(o => o.AttendanceStatus.trim() === '½Present').length,\r\n        },\r\n    ];\r\n\r\n    const ifNotEmployee = [\r\n        {\r\n            label: 'Total Days',\r\n            value: DaysBetween(new Date(filter.From), new Date(filter.To)),\r\n        },\r\n        {\r\n            label: 'Total Employees',\r\n            value: employees.length,\r\n        },\r\n        {\r\n            label: 'Average Attendance',\r\n            value: attendanceData.length / totalDays,\r\n        },\r\n    ];\r\n\r\n    const dataFormat = (arr) => {\r\n        const data = arr.map(o => ({\r\n            Emp_Id: o.Emp_Id,\r\n            Employee: o.Emp_Name,\r\n            InTime: o.InTime,\r\n            OutTime: o.OutTime,\r\n            Date: o.InTime,\r\n            Salary_Type: o.Salary_Type\r\n        }));\r\n\r\n        const filteredData = data\r\n            .filter(o => !filter.EmpId || isEqualNumber(o.Emp_Id, filter.EmpId))\r\n            .filter(o => !filter.salaryType || o.Salary_Type === filter.salaryType);\r\n\r\n        return filteredData;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <CardContent sx={{ minHeight: '50vh' }}>\r\n                    <div className=\"ps-3 pb-2 pt-0 d-flex align-items-center justify-content-between border-bottom mb-3\">\r\n                        <h6 className=\"fa-18\">Employee Attendance</h6>\r\n                        <div>\r\n                            <Tooltip title='Download Excel Data'>\r\n                                <IconButton \r\n                                    onClick={() => handleExportData(dataFormat(attendanceData))}\r\n                                    className=\"me-2\"\r\n                                >\r\n                                    <FileDownload />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Button\r\n                                variant='outlined'\r\n                                onClick={() => setDialogAbstract(true)}\r\n                            >\r\n                                {filter.EmpId ? 'Emplyee Summary' : 'Attendance Summary'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"px-2 row mb-4\">\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>Employee</label>\r\n                            <Select\r\n                                value={{ value: filter?.UserId, label: filter?.Name }}\r\n                                onChange={(e) => setFilter({ ...filter, EmpId: e.value, Name: e.label })}\r\n                                options={[\r\n                                    { value: '', label: '(' + employees.length + ') All Employees ' },\r\n                                    ...employees.map(obj => ({ value: obj?.Emp_Id, label: obj?.Emp_Name }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder={\"Employee Name\"} // start from here\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>From</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"cus-inpt \"\r\n                                value={filter?.From}\r\n                                onChange={e => setFilter(pre => ({ ...pre, From: e.target.value }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>To</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"cus-inpt \"\r\n                                value={filter?.To}\r\n                                onChange={e => setFilter(pre => ({ ...pre, To: e.target.value }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>Display View</label>\r\n                            <select\r\n                                className=\"cus-inpt\"\r\n                                value={filter?.display}\r\n                                onChange={e => setFilter(pre => ({ ...pre, display: Number(e.target.value) }))}\r\n                            >\r\n                                <option value={0}>Calendar</option>\r\n                                <option value={1}>Table</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>Salary Type</label>\r\n                            <select\r\n                                className=\"cus-inpt\"\r\n                                value={filter?.salaryType}\r\n                                onChange={e => setFilter(pre => ({ ...pre, salaryType: e.target.value }))}\r\n                            >\r\n                                <option value={''}>- Select -</option>\r\n                                {salaryTypes.map((o, i) => (\r\n                                    <option value={o} key={i}>{o}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {isEqualNumber(filter.display, 0) && (\r\n                        <FullCalendar\r\n                            plugins={[timeGridPlugin, listPlugin, dayGridPlugin, interactionPlugin]}\r\n                            initialView=\"listMonth\"\r\n                            initialDate={new Date()}\r\n                            events={\r\n                                dataFormat(attendanceData)?.map(o => ({\r\n                                    title: o?.Employee,\r\n                                    start: new Date(o?.InTime),\r\n                                    end: new Date(o?.OutTime),\r\n                                    objectData: o\r\n                                }))\r\n                            }\r\n                            headerToolbar={{\r\n                                left: 'prev next',\r\n                                center: 'title',\r\n                                right: 'timeGridDay, timeGridWeek, dayGridMonth, listMonth',\r\n                            }}\r\n                            slotDuration={'00:30:00'}\r\n                            showNonCurrentDates={false}\r\n                            editable={false}\r\n                            selectable\r\n                            selectMirror\r\n                            eventClick={eve => {\r\n                                const eveObj = eve.event.extendedProps.objectData;\r\n                                setObjectDetails(eveObj);\r\n                                setDialog(true);\r\n                            }}\r\n                            datesSet={date => {\r\n                                const lastDay = new Date(date.endStr);\r\n                                lastDay.setDate(lastDay.getDate() - 1);\r\n                                const formattedLastDay = lastDay.toLocaleDateString('en-CA');\r\n                                setFilter(pre => ({\r\n                                    ...pre,\r\n                                    From: date.startStr.split('T')[0],\r\n                                    To: formattedLastDay\r\n                                }));\r\n                            }}\r\n                            height={800}\r\n                        />\r\n                    )}\r\n\r\n                    {isEqualNumber(filter.display, 1) && (\r\n                        <FilterableTable\r\n                            dataArray={dataFormat(attendanceData)}\r\n                            columns={[\r\n                                {\r\n                                    Field_Name: \"Employee\",\r\n                                    Fied_Data: \"string\",\r\n                                    isVisible: 1,\r\n                                    OrderBy: 1,\r\n                                },\r\n                                {\r\n                                    Field_Name: \"Salary_Type\",\r\n                                    Fied_Data: \"string\",\r\n                                    isVisible: 1,\r\n                                    OrderBy: 1,\r\n                                },\r\n                                {\r\n                                    Field_Name: \"Date\",\r\n                                    Fied_Data: \"date\",\r\n                                    isVisible: 1,\r\n                                    OrderBy: 2,\r\n                                },\r\n                                {\r\n                                    Field_Name: \"InTime\",\r\n                                    Fied_Data: \"time\",\r\n                                    isVisible: 1,\r\n                                    OrderBy: 2,\r\n                                },\r\n                                {\r\n                                    Field_Name: \"OutTime\",\r\n                                    Fied_Data: \"time\",\r\n                                    isVisible: 1,\r\n                                    OrderBy: 3,\r\n                                },\r\n                            ]}\r\n                            EnableSerialNumber={true}\r\n                        />\r\n                    )}\r\n\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialg}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>Attendance Details</span>\r\n                    <IconButton onClick={closeDialg}><Close sx={{ color: 'black' }} /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"fa-14 fw-bold text-muted border\">Start Date</td>\r\n                                    <td className=\"fa-14 fw-bold text-end text-muted border\">End Date</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"fa-14 fw-bold text-primary border\">{objDetails?.InTime ? LocalDate(objDetails?.InTime) : ' - '}</td>\r\n                                    <td className=\"fa-14 fw-bold text-primary border text-end\">{objDetails?.OutTime ? LocalDate(objDetails?.OutTime) : ' - '}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"fa-14 fw-bold text-muted border\">In Time</td>\r\n                                    <td className=\"fa-14 fw-bold text-end text-muted border\">Out Time</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"fa-14 fw-bold text-primary border\">{objDetails?.InTime ? LocalTime(objDetails?.InTime) : ' - '}</td>\r\n                                    <td className=\"fa-14 fw-bold text-primary border text-end\">{objDetails?.OutTime ? LocalTime(objDetails?.OutTime) : ' - '}</td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <td className=\"fa-14 border text-end fw-bold\" colSpan={2}>\r\n                                        <Tooltip title=\"Open in Map\">\r\n                                            <span className=\"ps-2\">\r\n                                                Location:\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    color='primary'\r\n                                                    onClick={() => window.open(`https://www.google.com/maps/search/?api=1&query=${objDetails?.Latitude},${objDetails?.Longitude}`, '_blank')}\r\n                                                >\r\n                                                    <OpenInNew sx={{ fontSize: '16px' }} />\r\n                                                </IconButton>\r\n                                            </span>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogAbstract}\r\n                onClose={() => setDialogAbstract(false)}\r\n                maxWidth='lg' fullWidth\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Attendance summary {filter.EmpId && 'of ' + filter.Name}\r\n                        <span className=\"ps-2 blue-text\">{LocalDate(filter.From) + ' - ' + LocalDate(filter.To)}</span>\r\n                    </span>\r\n                    <IconButton onClick={() => setDialogAbstract(false)}><Close sx={{ color: 'black' }} /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n                        {filter.EmpId ? (\r\n                            ifEmployeeData.map((o, i) => (\r\n                                <div className=\"col-lg-4 p-2\" key={i}>\r\n                                    <ContCard Value={o.value} Label={o.label} />\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            ifNotEmployee.map((o, i) => (\r\n                                <div className=\"col-lg-4 p-2\" key={i}>\r\n                                    <ContCard Value={o.value} Label={o.label} />\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FingerPrintAttendanceReport;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","var y={fieldSeparator:\",\",decimalSeparator:\".\",quoteStrings:!0,quoteCharacter:'\"',showTitle:!1,title:\"My Generated Report\",filename:\"generated\",showColumnHeaders:!0,useTextFile:!1,useBom:!0,columnHeaders:[],useKeysAsHeaders:!1,boolDisplay:{true:\"TRUE\",false:\"FALSE\"},replaceUndefinedWith:\"\"},L=\"\\r\\n\",F=\"\\uFEFF\",q=($)=>Object.assign({},y,$);class Q extends Error{constructor($){super($);this.name=\"CsvGenerationError\"}}class T extends Error{constructor($){super($);this.name=\"EmptyHeadersError\"}}class U extends Error{constructor($){super($);this.name=\"CsvDownloadEnvironmentError\"}}class V extends Error{constructor($){super($);this.name=\"UnsupportedDataFormatError\"}}var X=($)=>$,z=($)=>$,Z=X,_=X,Y=X,K=X,N=X;var r=function($,x){if(x=='\"'&&$.indexOf('\"')>-1)return $.replace(/\"/g,'\"\"');return $},D=($)=>typeof $===\"object\"?K($.key):K($),h=($)=>typeof $===\"object\"?N($.displayLabel):N($),P=($,...x)=>x.reduce((W,j)=>j(W),$),S=($)=>(x)=>$.useBom?_(z(x)+F):x,R=($)=>(x)=>$.showTitle?B(_(z(x)+$.title))(Y(\"\")):x,B=($)=>(x)=>_(z($)+z(x)+L),E=($)=>(x,W)=>w($)(Y(z(x)+z(W))),w=($)=>(x)=>X(z(x)+$.fieldSeparator),O=($,x)=>(W)=>{if(!$.showColumnHeaders)return W;if(x.length<1)throw new T(\"Option to show headers but none supplied. Make sure there are keys in your collection or that you've supplied headers through the config options.\");let j=Y(\"\");for(let A=0;A<x.length;A++){const J=h(x[A]);j=E($)(j,b($,z(J)))}return j=Y(z(j).slice(0,-1)),B(W)(j)},C=($,x,W)=>(j)=>{let A=j;for(var J=0;J<W.length;J++){let I=Y(\"\");for(let M=0;M<x.length;M++){const H=D(x[M]),v=W[J][z(H)];I=E($)(I,b($,v))}I=Y(z(I).slice(0,-1)),A=B(A)(I)}return A},l=z,k=($)=>+$===$&&(!isFinite($)||Boolean($%1)),m=($,x)=>{if(k(x)){if($.decimalSeparator===\"locale\")return Z(x.toLocaleString());if($.decimalSeparator)return Z(x.toString().replace(\".\",$.decimalSeparator))}return Z(x.toString())},G=($,x)=>{let W=x;if($.quoteStrings||$.fieldSeparator&&x.indexOf($.fieldSeparator)>-1||$.quoteCharacter&&x.indexOf($.quoteCharacter)>-1||x.indexOf(\"\\n\")>-1||x.indexOf(\"\\r\")>-1)W=$.quoteCharacter+r(x,$.quoteCharacter)+$.quoteCharacter;return Z(W)},p=($,x)=>{const W=x?\"true\":\"false\";return Z($.boolDisplay[W])},g=($,x)=>{if(typeof x===\"undefined\"&&$.replaceUndefinedWith!==void 0)return G($,$.replaceUndefinedWith+\"\");if(x===null)return G($,\"null\");return G($,\"\")},b=($,x)=>{if(typeof x===\"number\")return m($,x);if(typeof x===\"string\")return G($,x);if(typeof x===\"boolean\"&&$.boolDisplay)return p($,x);if(x===null||typeof x===\"undefined\")return g($,x);throw new V(`\n    typeof ${typeof x} isn't supported. Only number, string, boolean, null and undefined are supported.\n    Please convert the data in your object to one of those before generating the CSV.\n    `)};var Q$=($)=>(x)=>{const W=q($),j=W.useKeysAsHeaders?Object.keys(x[0]):W.columnHeaders;let A=P(_(\"\"),S(W),R(W),O(W,j),C(W,j,x));if(z(A).length<1)throw new Q(\"Output is empty. Is your data formatted correctly?\");return A},s=($)=>(x)=>{const W=q($),j=z(x),A=W.useTextFile?\"plain\":\"csv\";return new Blob([j],{type:`text/${A};charset=utf8;`})},T$=($)=>(x)=>{if(!window)throw new U(\"Downloading only supported in a browser environment.\");const W=s($)(x),j=q($),A=j.useTextFile?\"txt\":\"csv\",J=`${j.filename}.${A}`,I=document.createElement(\"a\");I.download=J,I.href=URL.createObjectURL(W),I.setAttribute(\"visibility\",\"hidden\"),document.body.appendChild(I),I.click(),document.body.removeChild(I)};export{q as mkConfig,Q$ as generateCsv,T$ as download,l as asString,s as asBlob};\n"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","FilterableTable","_ref","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","columnInd","_columnAlign$find2","_columnVerticalAlign$2","isEqualNumber","Boolean","find","Object","entries","_ref3","_columnAlign$find","_columnVerticalAlign$","value","console","log","colSpan","Number","TableActions","anchorEl","setAnchorEl","popOverOpen","_Fragment","Tooltip","event","currentTarget","MoreVert","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","disabled","ListItemIcon","ToggleOn","color","ToggleOff","ListItemText","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","Download","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","btn","name","icon","onclick","createPopUpMenu","Card","component","Paper","TableContainer","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","width","headCells","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","Value","Label","margin","isNaN","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","ContCard","CardComp","FingerPrintAttendanceReport","_dataFormat","attendanceData","setAttendanceData","employees","setEmployees","salaryTypes","setSalaryTypes","dialog","setDialog","dialogAbstract","setDialogAbstract","objDetails","setObjectDetails","setFilter","From","firstDayOfMonth","To","ISOString","EmpId","Name","display","salaryType","useEffect","fetchLink","then","success","uniqueSalaryType","Salary_Type","empSet","uniqueEmpIds","has","Emp_Id","push","Emp_Name","fingerPrintEmpId","add","localeCompare","catch","closeDialg","totalDays","DaysBetween","Date","presentDays","absentDays","totalHours","reduce","sum","item","OutTime","InTime","averageMilliseconds","averageInTime","getTime","toLocaleTimeString","hour","minute","hour12","averageOutTime","hours","Math","floor","minutes","round","averageInTimeMillis","averageOutTimeMillis","ifEmployeeData","label","formatTime24","AttendanceStatus","trim","ifNotEmployee","dataFormat","arr","Employee","CardContent","minHeight","csv","generateCsv","download","handleExportData","FileDownload","Button","Select","UserId","onChange","options","obj","styles","isSearchable","placeholder","FullCalendar","plugins","timeGridPlugin","listPlugin","dayGridPlugin","interactionPlugin","initialView","initialDate","events","start","end","objectData","headerToolbar","left","center","right","slotDuration","showNonCurrentDates","editable","selectable","selectMirror","eventClick","eve","eveObj","extendedProps","datesSet","date","lastDay","endStr","setDate","getDate","formattedLastDay","toLocaleDateString","startStr","split","OrderBy","Dialog","fullWidth","maxWidth","DialogTitle","Close","DialogContent","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","y","quoteStrings","quoteCharacter","showTitle","filename","showColumnHeaders","useTextFile","useBom","columnHeaders","boolDisplay","true","false","replaceUndefinedWith","q","$","assign","Q","Error","constructor","super","this","T","U","V","X","Z","_","Y","K","N","D","h","displayLabel","B","x","E","W","w","m","isFinite","k","toLocaleString","toString","G","indexOf","r","p","g","Q$","j","keys","A","_len","_key","P","S","R","O","J","C","I","M","H","v","T$","window","Blob","s","document","createElement","href","URL","createObjectURL","setAttribute","appendChild","click","removeChild"],"sourceRoot":""}