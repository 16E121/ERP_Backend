{"version":3,"file":"static/js/5232.7e6cf019.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx"],"sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton } from '@mui/material';\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\n\nimport PropTypes from 'prop-types';\n\nconst FilterableTable = ({\n    dataArray = [],\n    columns = [],\n    onClickFun = null,\n    isExpendable = false,\n    expandableComp = null,\n    tableMaxHeight = 550,\n    initialPageCount = 20,\n    EnableSerialNumber = false,\n    CellSize = 'small' || 'medium',\n    disablePagination = false\n}) => {\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\n    const [sortCriteria, setSortCriteria] = useState([]);\n\n    const columnAlign = [\n        {\n            type: 'left',\n            class: ''\n        }, {\n            type: 'right',\n            class: 'text-right'\n        }, {\n            type: 'center',\n            class: 'text-center'\n        }\n    ];\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleSortRequest = (columnId) => {\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\n        if (existingCriteria) {\n            const isAsc = existingCriteria.direction === 'asc';\n            setSortCriteria(sortCriteria.map(criteria =>\n                criteria.columnId === columnId\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\n                    : criteria\n            ));\n        } else {\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\n        }\n    };\n\n    const sortData = (data) => {\n        if (!sortCriteria.length) return data;\n\n        const sortedData = [...data].sort((a, b) => {\n            for (const criteria of sortCriteria) {\n                const { columnId, direction } = criteria;\n                const aValue = a[columnId];\n                const bValue = b[columnId];\n\n                if (aValue !== bValue) {\n                    if (direction === 'asc') {\n                        return aValue > bValue ? 1 : -1;\n                    } else {\n                        return aValue < bValue ? 1 : -1;\n                    }\n                }\n            }\n            return 0;\n        });\n\n        return sortedData;\n    };\n\n    const sortedData = sortData(dataArray);\n    const startIndex = page * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    const paginatedData = sortedData.slice(startIndex, endIndex);\n\n    const formatString = (val, dataType) => {\n        switch (dataType) {\n            case 'number':\n                return NumberFormat(val)\n            case 'date':\n                return LocalDate(val);\n            case 'time':\n                return LocalTime(val);\n            case 'string':\n                return val;\n            default:\n                return ''\n        }\n    }\n\n    const RowComp = ({ row, index }) => {\n        const [open, setOpen] = useState(false);\n        const fontSize = '20px';\n\n        return (\n            <Fragment>\n                <TableRow>\n\n                    {(isExpendable === true && expandableComp) && (\n                        <TableCell className='fa-13 border-end text-center'>\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\n                        </TableCell>\n                    )}\n\n                    {EnableSerialNumber === true && (\n                        <TableCell className='fa-13 border-end text-center'>{(rowsPerPage * page) + index + 1}</TableCell>\n                    )}\n\n                    {columns?.map((column, columnInd) => (\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\n                    ) && (\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\n                                Object.entries(row).map(([key, value]) => (\n                                    (\n                                        (column.Field_Name === key)\n                                        &&\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\n                                    ) && (\n                                        <TableCell\n                                            key={columnInd}\n                                            className={`fa-13 border-end ` + (\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\n                                            )}\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\n                                        >\n                                            {formatString(value, column?.Fied_Data)}\n                                        </TableCell>\n                                    )\n                                ))\n                            ) : (\n                                <TableCell\n                                    key={columnInd}\n                                    className={`fa-13 border-end ` + (\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\n                                    )}\n                                >\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\n                                </TableCell>\n                            )\n                        )\n                    )}\n\n                </TableRow>\n\n                {(isExpendable === true && expandableComp && open) && (\n                    <TableRow>\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\n                    </TableRow>\n                )}\n            </Fragment>\n        )\n    }\n\n    return (\n        <div>\n            <TableContainer component={Paper} sx={{ maxHeight: tableMaxHeight }}>\n\n                <Table stickyHeader size={CellSize}>\n\n                    <TableHead>\n                        <TableRow>\n\n                            {(isExpendable === true && expandableComp) && (\n                                <TableCell\n                                    className='fa-13 fw-bold border-end border-top text-center'\n                                    style={{ backgroundColor: '#EDF0F7' }}\n                                >#</TableCell>\n                            )}\n\n                            {EnableSerialNumber === true && (\n                                <TableCell\n                                    className='fa-13 fw-bold border-end border-top text-center'\n                                    style={{ backgroundColor: '#EDF0F7' }}\n                                >SNo</TableCell>\n                            )}\n\n                            {columns.map((column, ke) => {\n                                return (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\n                                    (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\n                                        <TableCell\n                                            key={ke}\n                                            className={`fa-13 fw-bold border-end border-top ` + (\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\n                                            )}\n                                            style={{ backgroundColor: '#EDF0F7' }}\n                                            sortDirection={\n                                                sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\n                                                    ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\n                                                    : false\n                                            }\n                                        >\n                                            <TableSortLabel\n                                                active={sortCriteria.some(criteria => criteria.columnId === column.Field_Name)}\n                                                direction={\n                                                    sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\n                                                        ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\n                                                        : 'asc'\n                                                }\n                                                onClick={() => handleSortRequest(column.Field_Name)}\n                                            >\n                                                {column.ColumnHeader ? column.ColumnHeader : column?.Field_Name?.replace(/_/g, ' ')}\n                                            </TableSortLabel>\n                                        </TableCell>\n                                    ) : (\n                                        <TableCell\n                                            key={ke}\n                                            className={`fa-13 fw-bold border-end border-top ` + (\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\n                                            )}\n                                            style={{ backgroundColor: '#EDF0F7' }}\n                                        >\n                                            {column.ColumnHeader ? column.ColumnHeader : column?.Field_Name?.replace(/_/g, ' ')}\n                                        </TableCell>\n                                    )\n                                )\n                            })}\n\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                        {(disablePagination ? dataArray : paginatedData).map((row, index) => (\n                            <RowComp key={index} row={row} index={index} />\n                        ))}\n                        {dataArray.length === 0 && (\n                            <TableRow>\n                                <TableCell\n                                    colSpan={\n                                        columns.length +\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\n                                        (EnableSerialNumber === true ? 1 : 0)\n                                    }\n                                    sx={{ textAlign: 'center' }}\n                                >\n                                    No Data\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n\n\n                </Table>\n            </TableContainer>\n\n            {!disablePagination && paginatedData.length !== 0 && (\n                <div className=\"p-2 pb-0\">\n                    <TablePagination\n                        component=\"div\"\n                        count={dataArray.length}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        rowsPerPage={rowsPerPage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\n                        labelRowsPerPage=\"Rows per page\"\n                        showFirstButton\n                        showLastButton\n                    />\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nFilterableTable.propTypes = {\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        Field_Name: PropTypes.string,\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\n        ColumnHeader: PropTypes.string,\n        isVisible: PropTypes.oneOf([0, 1]),\n        align: PropTypes.oneOf(['left', 'right', 'center']),\n        isCustomCell: PropTypes.bool,\n        Cell: PropTypes.func\n    })).isRequired,\n    onClickFun: PropTypes.func,\n    isExpendable: PropTypes.bool,\n    expandableComp: PropTypes.element,\n    tableMaxHeight: PropTypes.number,\n    initialPageCount: PropTypes.number,\n    EnableSerialNumber: PropTypes.bool,\n    CellSize: PropTypes.string,\n    disablePagination: PropTypes.bool\n};\n\nFilterableTable.defaultProps = {\n    dataArray: [],\n    columns: [],\n    onClickFun: null,\n    isExpendable: false,\n    expandableComp: null,\n    tableMaxHeight: 550,\n    initialPageCount: 20,\n    EnableSerialNumber: false,\n    CellSize: 'small',\n    disablePagination: false\n};\n\n\nexport default FilterableTable;","import { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\nimport { fetchLink } from './fetchComponent';\n\nconst formatString = (val, dataType) => {\n    switch (dataType) {\n        case 'number':\n            return NumberFormat(val)\n        case 'date':\n            return LocalDate(val);\n        case 'string':\n            return val;\n        default:\n            return ''\n    }\n}\n\nconst getFun = (dataType) => {\n    switch (dataType) {\n        case 'number':\n            return {\n                filterVariant: 'range',\n                filterFn: 'between',\n            }\n        case 'date':\n            return {\n                filterVariant: 'text',\n            };\n        case 'string':\n            // const distinctValues = [];\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\n            //     : null\n            // )\n            return {\n                filterVariant: 'text',\n            }\n\n        default:\n            return {}\n    }\n}\n\nconst csvConfig = mkConfig({\n    fieldSeparator: ',',\n    decimalSeparator: '.',\n    useKeysAsHeaders: true,\n});\n\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\n\nconst DynamicMuiTable = ({ reportId, company, queryFilters }) => {\n    const [dispColmn, setDispColmn] = useState([]);\n    const [dataArray, setDataArray] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [filters, setFilters] = useState({});\n    const [filteredData, setFilteredData] = useState(dataArray);\n    const filterCount = Object.keys(filters).length;\n    const showData = (filterCount > 0) ? filteredData : dataArray;\n    const [aggregationValues, setAggregationValues] = useState({});\n    const [dialogs, setDialogs] = useState({\n        filters: false,\n        aggregations: false\n    })\n\n    useEffect(() => {\n        fetchLink({\n            address: `reports/template?ReportId=${reportId}`\n        }).then(data => {\n            if (data?.success) {\n                if (data.data[0]) {\n                    const o = data.data[0];\n                    const strucre = {\n                        Report_Type_Id: o?.Report_Type_Id,\n                        reportName: o?.Report_Name,\n                        tables: o?.tablesList?.map(table => ({\n                            Table_Id: table?.Table_Id,\n                            Table_Name: table?.Table_Name,\n                            AliasName: table?.AliasName,\n                            Table_Accronym: table?.Table_Accronym,\n                            isChecked: true,\n                            columns: table?.columnsList?.map(column => ({\n                                Column_Data_Type: column?.Column_Data_Type,\n                                Column_Name: column?.Column_Name,\n                                IS_Default: column?.IS_Default,\n                                IS_Join_Key: column?.IS_Join_Key,\n                                Order_By: column?.Order_By,\n                                Table_Id: column?.Table_Id,\n                                isVisible: true,\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\n                            }))\n                        }))\n                    }\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\n                        return colArr.concat(table.columns);\n                    }, []);\n                    setColumns(allColumns);\n                }\n            }\n        }).catch(e => console.log(e))\n            \n    }, [reportId])\n\n    useEffect(() => {\n        if (reportId) {\n            fetchLink({\n                address: `reports/template/executeQuery`,\n                method: 'POST',\n                headers: {\n                    'Db': company,\n                },\n                bodyData: {\n                    filterReq: queryFilters,\n                    ReportID: reportId\n                }\n            }).then(data => {\n                if (data?.success) {\n                    setDataArray(data?.data);\n                }\n            }).catch(e => console.log(e))\n        }\n    }, [company, reportId])\n\n    useEffect(() => {\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\n\n        const muiColumns = displayColumns.filter(column =>\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\n        ).map(column => ({\n            header: column?.Column_Name?.replace(/_/g, ' '),\n            accessorKey: column?.accessColumnName,\n            sortable: true,\n            size: 150,\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\n            AggregatedCell: ({ cell }) => (\n                <div className='blue-text text-center float-end w-100'>\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\n                </div>\n            ),\n            Cell: ({ cell }) => (\n                <p className={`m-0 text-center fa-14 w-100`}>\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\n                </p>\n            ),\n            ...getFun(column?.Column_Data_Type),\n        }))\n\n        setDispColmn(muiColumns)\n    }, [columns, aggregationValues])\n\n    useEffect(() => {\n        applyFilters();\n    }, [filters]);\n\n    const handleExportRows = (rows) => {\n        const rowData = rows.map((row) => row.original);\n        const csv = generateCsv(csvConfig)(rowData);\n        download(csvConfig)(csv);\n    };\n\n    const handleExportData = () => {\n        const csv = generateCsv(csvConfig)(dataArray);\n        download(csvConfig)(csv);\n    };\n\n    const table = useMaterialReactTable({\n        columns: dispColmn,\n        data: showData || [],\n        enableColumnResizing: true,\n        enableGrouping: true,\n        enableStickyHeader: true,\n        enableStickyFooter: true,\n        enableColumnOrdering: true,\n        enableRowNumbers: false,\n        enableRowSelection: true,\n        initialState: {\n            density: 'compact',\n            pagination: { pageIndex: 0, pageSize: 100 },\n        },\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\n        muiTableProps: {\n            sx: {\n                caption: {\n                    captionSide: 'top',\n                },\n            },\n        },\n        muiTableHeadCellProps: {\n            sx: {\n                fontWeight: 'normal',\n            },\n            className: ' border text-center'\n        },\n        muiTableBodyCellProps: {\n            className: ' border-end text-center'\n        },\n        renderTopToolbarCustomActions: ({ table }) => (\n            <Box\n                sx={{\n                    display: 'flex',\n                    gap: '16px',\n                    padding: '8px',\n                    flexWrap: 'wrap',\n                }}\n            >\n                <Button\n                    onClick={handleExportData}\n                    startIcon={<FileDownload />}\n                >\n                    All Data\n                </Button>\n                <Button\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\n                    onClick={() =>\n                        handleExportRows(table.getPrePaginationRowModel().rows)\n                    }\n                    startIcon={<FileDownload />}\n                >\n                    All Rows\n                </Button>\n                <Button\n                    disabled={\n                        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()\n                    }\n                    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}\n                    startIcon={<FileDownload />}\n                >\n                    Selected Rows\n                </Button>\n                <Button\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\n                    startIcon={<SettingsOutlined />}\n                >\n                    Aggregation\n                </Button>\n                <Button\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\n                    className=\"d-md-none d-inline\"\n                    startIcon={<FilterAlt />}\n                >\n                    Filters\n                </Button>\n            </Box>\n        ),\n    })\n\n    const memoizedTableConfig = useMemo(() => {\n        return table;\n    }, [table, aggregationValues, showData]);\n\n    const handleFilterChange = (column, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [column]: value,\n        }));\n    };\n\n    const applyFilters = () => {\n        let filtered = [...dataArray];\n        for (const column of columns) {\n            if (filters[column.accessColumnName]) {\n                if (filters[column.accessColumnName].type === 'range') {\n                    const { min, max } = filters[column.accessColumnName];\n                    filtered = filtered.filter(item => {\n                        const value = item[column.accessColumnName];\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\n                    });\n                } else if (filters[column.accessColumnName].type === 'date') {\n                    const { start, end } = filters[column.accessColumnName].value;\n                    filtered = filtered.filter(item => {\n                        const dateValue = new Date(item[column.accessColumnName]);\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\n                    });\n                } else if (Array.isArray(filters[column.accessColumnName])) {\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\n                }\n            }\n        }\n        setFilteredData(filtered);\n    };\n\n    const renderFilter = (column) => {\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\n        if (Column_Data_Type === 'number') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Min\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.min ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                    <input\n                        placeholder=\"Max\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.max ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'date') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Start Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.value?.start ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\n                    />\n                    <input\n                        placeholder=\"End Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.value?.end ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'string') {\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\n            return (\n                <Autocomplete\n                    multiple\n                    id={`${accessColumnName}-filter`}\n                    options={distinctValues}\n                    disableCloseOnSelect\n                    getOptionLabel={option => option}\n                    value={filters[accessColumnName] || []}\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    isOptionEqualToValue={(opt, val) => opt === val}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label={Column_Name?.replace(/_/g, ' ')}\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\n                        />\n                    )}\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <div className=\"row \">\n\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\n                    <div className=\"p-2\">\n                        <MaterialReactTable table={memoizedTableConfig} />\n                    </div>\n                </div>\n\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\n                    <h5 className=\"d-flex justify-content-between px-2\">\n                        Filters\n                        <Tooltip title='Clear Filters'>\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setFilters({})}\n                            >\n                                <FilterAltOff />\n                            </IconButton>\n                        </Tooltip>\n                    </h5>\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\n                                {renderFilter(column)}\n                            </div>\n                        ))}\n                        <br />\n                    </div>\n                </div>\n\n            </div>\n\n            <Dialog\n                open={dialogs.filters}\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\n                fullWidth maxWidth='sm'\n            >\n                <DialogTitle>\n                    <h5 className=\"d-flex justify-content-between px-2\">\n                        Filters\n                        <Tooltip title='Clear Filters'>\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setFilters({})}\n                            >\n                                <FilterAltOff />\n                            </IconButton>\n                        </Tooltip>\n                    </h5>\n                </DialogTitle>\n                <DialogContent>\n\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\n                                {renderFilter(column)}\n                            </div>\n                        ))}\n                        <br />\n                    </div>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={dialogs.aggregations}\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\n                fullWidth maxWidth='lg'\n            >\n                <DialogTitle>Aggregations</DialogTitle>\n                <DialogContent>\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\n                        {[...columns].filter(column => (\n                            isEqualNumber(column?.IS_Default, 0)\n                            && isEqualNumber(column?.IS_Join_Key, 0)\n                            && (column.Column_Data_Type === 'number'\n                                || column.Column_Data_Type === 'string')\n                        )).map((o, i) => (\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\n                                <select\n                                    className='cus-inpt'\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\n                                >\n                                    {\n                                        [\n                                            { label: 'Select Aggregation', value: '' },\n                                            { label: 'count', value: 'count' },\n                                            { label: 'extent', value: 'extent' },\n                                            { label: 'max', value: 'max' },\n                                            { label: 'min', value: 'min' },\n                                            { label: 'mean', value: 'mean' },\n                                            { label: 'median', value: 'median' },\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\n                                            { label: 'sum', value: 'sum' },\n                                            { label: 'unique', value: 'unique' },\n                                        ].map((o, i) => (\n                                            <option value={o.value} key={i}>{o.label}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                        ))}\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\n\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Button, Card, CardContent, Collapse, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper\n} from '@mui/material';\nimport { ArrowBackIosNewOutlined, Edit, ExpandLess, ExpandMore, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\nimport { MyContext } from '../../Components/context/contextProvider';\nimport { useNavigate } from 'react-router-dom'\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\nimport { toast } from 'react-toastify';\nimport { fetchLink } from '../../Components/fetchComponent';\nimport FilterableTable from '../../Components/filterableTable2'\n\n\n\nconst TabPanel = (props) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n};\n\nconst ReportTemplates = () => {\n    const storage = JSON.parse(localStorage.getItem('user'))\n    const [templates, setTemplates] = useState([]);\n    const variableState = {\n        search: '',\n        openFilterDialog: false,\n        filterTablesAndColumns: {},\n        deleteConfirmationDialog: false,\n        preFilterDialog: false,\n    }\n    const [localVariable, setLocalVariable] = useState(variableState);\n    const { contextObj } = useContext(MyContext);\n    const [filters, setFilters] = useState({})\n    const nav = useNavigate();\n    const [reload, setReload] = useState(false)\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n\n    useEffect(() => {\n        fetchLink({\n            address: `reports/template`,\n        }).then(data => {\n            if (data?.success) {\n                setTemplates(data?.data);\n            }\n        }).catch(e => console.log(e))\n    }, [reload])\n\n    const handleFilterChange = (column, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [column]: value,\n        }));\n    };\n\n    const renderFilter = (column) => {\n        const { Column_Name, Column_Data_Type } = column;\n        if (Column_Data_Type === 'number') {\n            return (\n                <div className='d-flex justify-content-between'>\n                    <input\n                        placeholder=\"Min\"\n                        type=\"number\"\n                        className=\"cus-inpt me-1\"\n                        value={filters[Column_Name]?.min ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'range',\n                            ...filters[Column_Name],\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\n                        })}\n                    />\n                    <input\n                        placeholder=\"Max\"\n                        type=\"number\"\n                        className=\"cus-inpt ms-1\"\n                        value={filters[Column_Name]?.max ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'range',\n                            ...filters[Column_Name],\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\n                        })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'date') {\n            return (\n                <div className='d-flex justify-content-between flex-wrap'>\n                    <input\n                        placeholder=\"Start Date\"\n                        type=\"date\"\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\n                        value={filters[Column_Name]?.value?.start ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'date',\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\n                        })}\n                    />\n                    <input\n                        placeholder=\"End Date\"\n                        type=\"date\"\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\n                        value={filters[Column_Name]?.value?.end ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'date',\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\n                        })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'string') {\n            return (\n                <input\n                    type=\"text\"\n                    placeholder='Search...'\n                    className='cus-inpt'\n                    value={filters[Column_Name]?.value ?? ''}\n                    onChange={e => handleFilterChange(Column_Name, {\n                        type: 'textCompare',\n                        value: String(e.target.value).toLowerCase() || ''\n                    })}\n                />\n            )\n        }\n    };\n\n    const Actions = ({ o }) => {\n        const [anchorEl, setAnchorEl] = useState(null);\n\n        const dataToForward = {\n            Report_Type_Id: o?.Report_Type_Id,\n            reportName: o?.Report_Name,\n            tables: o?.tablesList?.map(table => ({\n                Table_Id: table?.Table_Id,\n                Table_Name: table?.Table_Name,\n                AliasName: table?.AliasName,\n                Table_Accronym: table?.Table_Accronym,\n                isChecked: true,\n                columns: table?.columnsList?.map(column => ({\n                    Column_Data_Type: column?.Column_Data_Type,\n                    Column_Name: column?.Column_Name,\n                    IS_Default: column?.IS_Default,\n                    IS_Join_Key: column?.IS_Join_Key,\n                    Order_By: column?.Order_By,\n                    Table_Id: column?.Table_Id,\n                    isVisible: true\n                }))\n            }))\n        }\n\n        const popOverOpen = Boolean(anchorEl);\n        const id = popOverOpen ? o?.Report_Name : undefined;\n\n        const handleClick = (event) => {\n            setAnchorEl(event.currentTarget);\n        };\n\n        const handleClose = () => {\n            setAnchorEl(null);\n        };\n\n        return (\n            <>\n                <IconButton aria-describedby={id} onClick={handleClick}>\n                    <List />\n                </IconButton>\n\n                <Popover\n                    id={id}\n                    open={popOverOpen}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                >\n                    <MenuList>\n\n                        <MenuItem\n                            onClick={!storage?.Company_id\n                                ? () => toast.warn('Select Company!')\n                                : () => {\n                                    setLocalVariable(pre => ({\n                                        ...pre,\n                                        filterTablesAndColumns: dataToForward,\n                                        openFilterDialog: true,\n                                    }));\n                                    setSelectedTab(0);\n                                    setFilters({})\n                                }\n                            }\n                        // disabled={!storage?.Company_id}\n                        >\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\n                            <ListItemText>OPEN</ListItemText>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={\n                                !storage?.Company_id\n                                    ? () => toast.warn('Select Company!')\n                                    : () => {\n                                        setLocalVariable(pre => ({\n                                            ...pre,\n                                            filterTablesAndColumns: dataToForward,\n                                            preFilterDialog: true,\n                                        }));\n                                        setFilters({});\n                                        setSelectedTab(0);\n                                    }\n                            }\n                        >\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\n                            <ListItemText>FILTERS</ListItemText>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\n                        >\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\n                            <ListItemText>EDIT</ListItemText>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\n                        >\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\n                            <ListItemText>DELETE</ListItemText>\n                        </MenuItem>\n\n                    </MenuList>\n                </Popover>\n            </>\n        )\n    }\n\n    const RowComp = ({ o }) => {\n        return (\n            <>\n                <div className=\"table-responsive\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {o?.tablesList?.map((table, tableInd) => (\n                                <React.Fragment key={tableInd}>\n                                    {table?.columnsList?.map((column, columnInd) => (\n                                        <tr key={columnInd}>\n                                            {columnInd === 0 && (\n                                                <>\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\n                                                        {table?.AliasName}\n                                                    </td>\n                                                </>\n                                            )}\n                                            <td\n                                                className={`\n                                                                border fa-13 vctr\n                                                                ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\n                                                                ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\n                                                                `}\n                                            >\n                                                {column?.Column_Name}\n                                            </td>\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\n                                        </tr>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </>\n        )\n    }\n\n    const closeDialog = () => {\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\n    }\n\n    const closeDeleteConfirmationDialog = () => {\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\n    }\n\n    const closeFilterDialog = () => {\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\n        setFilters({})\n    }\n\n    const deleteTemplate = () => {\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\n        fetchLink({\n            address: `reports/template`,\n            method: 'DELETE',\n            bodyData: {\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\n            }\n        }).then(data => {\n            if (data?.success) {\n                toast.success(data.message)\n                setReload(pre => !pre)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.log(e))\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\n    }\n\n    return (\n        <>\n\n            <Card>\n\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\n                    )}\n                </div>\n\n                <div className=\"d-flex justify-content-end p-3\">\n                    <input\n                        type=\"search\"\n                        className='cus-inpt w-auto'\n                        placeholder='Search Report Name'\n                        value={localVariable?.search ?? ''}\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\n                    />\n                </div>\n\n                <CardContent className='p-0'>\n                    <FilterableTable\n                        dataArray={\n                            !localVariable?.search ? templates : (\n                                [...templates].filter(fil =>\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\n                                )\n                            )\n                        }\n                        columns={[\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\n                        ]}\n                        EnableSerialNumber\n                        isExpendable={true}\n                        expandableComp={({ row }) => <RowComp o={row} />}\n                        tableMaxHeight={650}\n                    />\n                </CardContent>\n            </Card>\n\n            <Dialog\n                open={localVariable?.openFilterDialog}\n                onClose={closeDialog}\n                fullScreen\n            >\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\n                    <span>\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\n                    </span>\n                    <span>\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\n                            <Close />\n                        </IconButton>\n                    </span>\n                </DialogTitle>\n                <DialogContent>\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\n                        <DynamicMuiTable reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id} company={storage?.Company_id} queryFilters={filters} />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeDialog}\n                        startIcon={<ArrowBackIosNewOutlined />}\n                    >\n                        Back\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={localVariable?.deleteConfirmationDialog}\n                onClose={closeDeleteConfirmationDialog}\n                fullWidth maxWidth='sm'\n            >\n                <DialogTitle>Confirmation</DialogTitle>\n                <DialogContent>\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeDeleteConfirmationDialog}\n                    >\n                        cancel\n                    </Button>\n                    <Button\n                        onClick={deleteTemplate}\n                        startIcon={<Delete />}\n                        variant='outlined'\n                        color='error'\n                    >\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={localVariable?.preFilterDialog}\n                onClose={closeFilterDialog}\n                fullWidth maxWidth='md'\n            >\n                <DialogTitle className='d-flex justify-content-between'>\n                    <span>\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\n                    </span>\n                    <span>\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\n                            <Close />\n                        </IconButton>\n                    </span>\n                </DialogTitle>\n                <DialogContent>\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\n                            <Tab label={table?.AliasName} key={i} />\n                        ))}\n                    </Tabs>\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\n                        <TabPanel value={selectedTab} index={i} key={i}>\n                            <div className=\"row\">\n                                {table?.columns?.map((column, ii) => (\n                                    !Boolean(Number(column?.IS_Default)) &&\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\n                                    (\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\n                                            {renderFilter(column)}\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n                        </TabPanel>\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeFilterDialog}\n                    >\n                        cancel\n                    </Button>\n                    <Button\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\n                        startIcon={<Launch />}\n                        variant='contained'\n                    >\n                        Open report\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ReportTemplates"],"names":["FilterableTable","_ref","dataArray","columns","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","columnAlign","type","class","sortedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","row","index","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","map","column","columnInd","_columnAlign$find2","isEqualNumber","Defult_Display","isVisible","Boolean","isCustomCell","Cell","align","find","String","toLowerCase","Field_Name","Object","entries","_ref3","_columnAlign$find","key","value","console","log","Fied_Data","colSpan","Number","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","ColumnHeader","replace","sortDirection","some","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","getFun","filterVariant","filterFn","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","reportId","company","queryFilters","dispColmn","setDispColmn","setDataArray","setColumns","filters","setFilters","filteredData","setFilteredData","showData","keys","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","useEffect","fetchLink","address","concat","then","success","_o$tablesList","_strucre$tables","o","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","accessColumnName","allColumns","reduce","colArr","catch","e","method","headers","bodyData","filterReq","ReportID","muiColumns","filter","_column$Column_Name","header","accessorKey","sortable","aggregationFn","AggregatedCell","cell","getValue","applyFilters","handleExportRows","rows","rowData","original","csv","generateCsv","download","handleExportData","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","enableRowSelection","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","color","muiTableContainerProps","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","_ref4","Box","display","gap","padding","flexWrap","Button","startIcon","FileDownload","disabled","getPrePaginationRowModel","getIsSomeRowsSelected","getIsAllRowsSelected","getSelectedRowModel","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","prevFilters","filtered","min","max","item","undefined","start","end","dateValue","Date","isArray","_filters$column$acces","includes","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","_ref5","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","_Fragment","MaterialReactTable","Tooltip","title","FilterAltOff","overflow","_column$Column_Name2","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","i","_o$Column_Name","_aggregationValues$o$","TabPanel","other","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","Actions","anchorEl","setAnchorEl","dataToForward","popOverOpen","currentTarget","List","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Company_id","toast","warn","ListItemIcon","Visibility","ListItemText","state","ReportState","Edit","Delete","_o$tablesList2","tableInd","_table$columnsList2","React","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Card","Add_Rights","variant","CardContent","fil","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","_ref7","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","error","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch"],"sourceRoot":""}