{"version":3,"file":"static/js/7912.870844bf.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Pages/Sales/convertedStatus.js","Pages/Sales/SalesReportComponent/newSaleOrderCreation.jsx","Pages/Sales/saleOrder.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewSaleOrderCreation = ({ editValues, loadingOn, loadingOff, reload, switchScreen }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    // const [productGroup, setProductGroup] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    // const [salesPerson, setSalePerson] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        So_Date: ISOString(),\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Sales_Person_Id: storage?.UserId,\r\n        Sales_Person_Name: storage?.Name,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_Id: '',\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                So_Date: editValues?.So_Date,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Sales_Person_Id: editValues?.Sales_Person_Id,\r\n                Sales_Person_Name: editValues?.Sales_Person_Name,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                So_Id: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n                // const uniqueGroup = getUniqueData(data.data, 'Product_Group', ['Pro_Group']);\r\n                // setProductGroup(uniqueGroup);\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n                // const uniqueUOM = getUniqueData(data.data, 'UOM_Id', ['Units']);\r\n                // setProductUOM(uniqueUOM)\r\n            } else {\r\n                setProducts([]);\r\n                // setProductGroup([])\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        // fetchLink({\r\n        //     address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        // }).then(data => {\r\n        //     if (data.success) {\r\n        //         setSalePerson(data.data)\r\n        //     }\r\n        // }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0))\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                    reload()\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((o, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty);\r\n        const Amount = Multiplication(billQty, itemRate);\r\n\r\n        if (isInclusive || isNotTaxableBill) {\r\n            return o += Amount;\r\n        }\r\n\r\n        if (isExclusiveBill) {\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n            const tax = taxCalc(0, itemRate, gstPercentage)\r\n            return o += (Amount + (tax * billQty));\r\n        }\r\n    }, 0);\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.So_Date ? ISOString(orderDetails?.So_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, So_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST \r\n                                    ? row?.Product?.Igst_P \r\n                                    : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(\r\n                                            Total_Invoice_value - (\r\n                                                totalValueBeforeTax.TotalValue + totalValueBeforeTax.TotalTax\r\n                                            )\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewSaleOrderCreation;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { Addition, isEqualNumber, ISOString, isValidObject } from \"../../Components/functions\";\r\nimport InvoiceBillTemplate from \"./SalesReportComponent/newInvoiceTemplate\";\r\nimport { Add, Edit, FilterAlt, Visibility } from \"@mui/icons-material\";\r\nimport { convertedStatus } from \"./convertedStatus\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport NewSaleOrderCreation from \"./SalesReportComponent/newSaleOrderCreation\";\r\n// import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\n\r\n// import TwoWheelerIcon from '@mui/icons-material/TwoWheeler';\r\nconst SaleOrderList = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [reload, setReload] = useState(false)\r\n    const [confirmDialog, setConfirmDialog] = useState(false)\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Sales_Person_Id: '',\r\n        SalsePersonGet: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `sales/saleOrder?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Sales_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'So_Id',\r\n            ColumnHeader: 'Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_Date',\r\n            ColumnHeader: 'Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            ColumnHeader: 'Status',\r\n            isVisible: 1,\r\n            align: 'center',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const convert = convertedStatus.find(status => status.id === Number(row?.isConverted));\r\n                return (\r\n                    <span className={'py-0 fw-bold px-2 rounded-4 fa-12 ' + convert?.color ?? 'bg-secondary text-white'}>\r\n                        {convert?.label ?? 'Undefined'}\r\n                    </span>\r\n                )\r\n            },\r\n        },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {/* <Tooltip title='SalesDelivery'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setConfirmDialog(true);\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <TwoWheelerIcon className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n        setOrderInfo({});\r\n        setConfirmDialog(false)\r\n    }\r\n\r\n    const Total_Invoice_value = saleOrders.reduce((acc, orders) => Addition(acc, orders?.Total_Invoice_value), 0);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Sale Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Sale Order'\r\n                                : 'Sale Order Creation'}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        {screen && (\r\n                            <Button\r\n                                variant='outlined'\r\n                                startIcon={<Add />}\r\n                                onClick={switchScreen}\r\n                            >\r\n                                {'New'}\r\n                            </Button>\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <>\r\n                            <FilterableTable\r\n                                dataArray={saleOrders}\r\n                                columns={saleOrderColumn}\r\n                                // EnableSerialNumber={true}\r\n                                isExpendable={true}\r\n                                tableMaxHeight={550}\r\n                                expandableComp={ExpendableComponent}\r\n                            />\r\n                            <h6 className=\"m-0 text-end text-muted px-3\">Total Invoice Amount ({saleOrders?.length}) : {Total_Invoice_value}</h6> \r\n                        </>\r\n                    ) : (\r\n                        <NewSaleOrderCreation\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setReload(pre => !pre);\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={confirmDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Salse Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Sales_Person_Id, label: filters?.SalsePersonGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Sales_Person_Id: e.value, SalsePersonGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Salse Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Sales_Person_Id, label: filters?.SalsePersonGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Sales_Person_Id: e.value, SalsePersonGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SaleOrderList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","convertedStatus","id","label","taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","editValues","loadingOn","loadingOff","reload","switchScreen","storage","JSON","parse","localStorage","getItem","retailers","setRetailers","useState","products","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","initialValue","Company_Id","Company_id","So_Date","ISOString","Retailer_Id","Retailer_Name","Sales_Person_Id","UserId","Sales_Person_Name","Name","Branch_Id","BranchId","Narration","Created_by","Product_Array","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isExclusiveBill","isInclusive","isNotTaxableBill","useEffect","_editValues$Products_","isValidObject","pre","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Number","Sgst_P","Igst_P","Gst_P","Addition","fetchLink","address","concat","then","data","success","catch","e","console","error","uniqueBrand","getUniqueData","closeAddProduct","Total_Invoice_value","reduce","o","item","itemRate","billQty","parseInt","Multiplication","product","gstPercentage","totalValueBeforeTax","acc","TotalValue","itemTax","basePrice","Subraction","TotalTax","_jsxs","_Fragment","className","colSpan","Company_Name","Company_Address","Telephone_Number","type","value","onChange","target","Select","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","Button","onClick","sx","ml","variant","startIcon","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref2","_row$Product","row","ColumnHeader","isVisible","_ref3","_row$Product2","HSN_Code","_ref4","_row$Units","align","Field_Name","Fied_Data","_ref5","_ref6","_row$Product3","_row$Product4","_row$Product5","_row$Amount","tax","NumberFormat","_ref7","_ref8","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref9","_ref10","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref11","IconButton","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","size","Edit","filter","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","method","bodyData","isGraterNumber","toast","message","finally","Save","disabled","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","warn","DialogContent","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","ind","required","Division","min","selectedIndex","text","i","DialogActions","ClearAll","saleOrders","setSaleOrders","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","setReload","confirmDialog","setConfirmDialog","filters","setFilters","Fromdate","Todate","RetailerGet","CreatedByGet","SalsePersonGet","Cancel_status","dialog","setDialog","saleOrderColumn","_convert$label","convert","status","isConverted","Tooltip","title","Visibility","closeDialog","orders","Card","FilterAlt","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","Round_off","NewSaleOrderCreation","Object","keys","InvoiceBillTemplate","download","actionOpen","clearDetails","TitleText","verticalAlign","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}