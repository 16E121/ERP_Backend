{"version":3,"file":"static/js/9856.1fd7f2bc.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/Search.js","Pages/ProjectList/addEditProject.jsx","Pages/employeeManagement/employeeManagement.jsx","Pages/Tasks/taskDetails/listingTask.jsx","Pages/Masters/ProjectList.jsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/People.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/createBox.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport RequiredStar from '../../Components/requiredStar';\r\nimport { ISOString } from '../../Components/functions';\r\n\r\nconst ProjectForm = ({ open, onClose, inputValue, isEdit, setReload }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n\r\n    const [projectHead, setProjectHead] = useState([]);\r\n    const [proStatus, setProStatus] = useState([]);\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        Project_Id: '',\r\n        Project_Name: '',\r\n        Project_Desc: '',\r\n        Project_Head: '',\r\n        Est_Start_Dt: ISOString(),\r\n        Est_End_Dt: ISOString(),\r\n        Project_Status: '',\r\n        Entry_By: parseData?.UserId,\r\n        Company_id: parseData?.Company_id\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            setProjectHead(data.success ? data.data : []);\r\n            \r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    }, [parseData?.Company_id]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `taskManagement/statusList`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProStatus(data.data);\r\n            }\r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n    \r\n            if (isEdit && inputValue) {\r\n                setFormData({\r\n                    ...inputValue,\r\n                    Project_Head: inputValue?.Project_Head_Id, \r\n                    Est_Start_Dt: inputValue.Est_Start_Dt ? ISOString(inputValue.Est_Start_Dt) : '',\r\n                    Est_End_Dt: inputValue.Est_End_Dt ? ISOString(inputValue.Est_End_Dt) : '',\r\n                    Project_Status: inputValue?.Project_Status || '', \r\n                    Project_Desc: inputValue?.Project_Desc || '-'\r\n                });\r\n            } else if (!isEdit) {\r\n           \r\n                setFormData({\r\n                    Project_Name: '',\r\n                    Project_Desc: '',\r\n                    Project_Head: '', \r\n                    Est_Start_Dt: ISOString(),\r\n                    Est_End_Dt: ISOString(),\r\n                    Project_Status: '',\r\n                    Entry_By: parseData?.UserId,\r\n                    Company_id: parseData?.Company_id\r\n                });\r\n            }\r\n        }\r\n    }, [inputValue, open, isEdit]);\r\n    \r\n    \r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const validateFields = () => {\r\n        const requiredFields = [\r\n            'Project_Name',\r\n            'Project_Head',\r\n            'Est_Start_Dt',\r\n            'Est_End_Dt',\r\n            'Project_Status',\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!formData[field]) {\r\n                toast.error(`${field.replace(/_/g, ' ')} is required`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const createFun = () => {\r\n        if (!validateFields()) return;\r\n\r\n        const payload = {\r\n            ...formData,\r\n            Company_id: parseData.Company_id\r\n        };\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project`,\r\n            method: 'POST',\r\n            bodyData: payload,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                onClose();\r\n                setReload(prev => !prev);\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => {\r\n            console.error('Fetch Error:', e);\r\n            toast.error(\"An error occurred while creating the project.\");\r\n        });\r\n    };\r\n\r\n    const editFun = () => {\r\n        if (!validateFields()) return;\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project`,\r\n            method: 'PUT',\r\n            bodyData: formData,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                onClose();\r\n                setReload(prev => !prev);\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error('Fetch Error:', e));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        isEdit ? editFun() : createFun();\r\n    };\r\n\r\n    const inputFields = [\r\n        {\r\n            label: 'Project Name',\r\n            elem: 'input',\r\n            type: 'text',\r\n            required: true,\r\n            name: 'Project_Name',\r\n            value: formData.Project_Name || '',\r\n        },\r\n        {\r\n            label: \"Project Head\",\r\n            elem: \"select\",\r\n            options: projectHead.map(obj => ({ value: obj?.UserId, label: obj?.Name })),\r\n            required: true,\r\n            name: 'Project_Head',\r\n            value: formData.Project_Head || '',\r\n        },\r\n        {\r\n            label: 'Estimated Start Date',\r\n            elem: 'input',\r\n            type: 'date',\r\n            required: true,\r\n            name: 'Est_Start_Dt',\r\n            value: formData.Est_Start_Dt || '',\r\n        },\r\n        {\r\n            label: 'Estimated End Date',\r\n            elem: 'input',\r\n            type: 'date',\r\n            required: true,\r\n            name: 'Est_End_Dt',\r\n            value: formData.Est_End_Dt || '',\r\n        },\r\n        {\r\n            label: 'Project Status',\r\n            elem: 'select',\r\n            options: proStatus.map(obj => ({ value: obj.Status_Id, label: obj.Status })),\r\n            required: true,\r\n            name: 'Project_Status',\r\n            value: formData.Project_Status || '',\r\n        },\r\n        {\r\n            label: 'Description',\r\n            elem: 'textarea',\r\n            name: 'Project_Desc',\r\n            value: formData.Project_Desc || ' ',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={onClose}>\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                    {isEdit ? \"Edit Project\" : 'Create Project'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                            {inputFields.map((field, index) => (\r\n                                <div key={index} className=\"col-lg-4 mb-3\">\r\n                                    <label>{field.label} {field.required && <RequiredStar />}</label>\r\n                                    {field.elem === 'textarea' ? (\r\n                                        <textarea\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    ) : field.elem === 'select' ? (\r\n                                        <select\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <option value=''>Select</option>\r\n                                            {field.options && field.options.map((option, idx) => (\r\n                                                <option key={idx} value={option.value}>{option.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    ) : (\r\n                                        <input\r\n                                            type={field.type}\r\n                                            name={field.name}\r\n                                            className='cus-inpt'\r\n                                            value={field.value}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <DialogActions>\r\n                            <button\r\n                                className=\"btn btn-light rounded-5 px-3\"\r\n                                type=\"button\"\r\n                                onClick={onClose}>\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary rounded-5 px-3\"\r\n                                type='submit'>\r\n                                {isEdit ? \"Update\" : \"Submit\"}\r\n                            </button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Autocomplete,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { toast } from 'react-toastify';\r\nimport { Box } from '@mui/material';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport Popper from '@mui/material/Popper';\r\n\r\nconst EmployeeManagementDialog = ({ open, onClose, projectId, onReload }) => {\r\n\r\n    const initialValue = {\r\n        Name: '',\r\n        Designation_Name: '',\r\n        BranchName: ''\r\n    }\r\n\r\n    const [employees, setEmployees] = useState(initialValue);\r\n    const [loading, setLoading] = useState(true);\r\n    const [addEmployeeDialogOpen, setAddEmployeeDialogOpen] = useState(false);\r\n    const [dropdownEmployees, setDropdownEmployees] = useState([]);\r\n    const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    useEffect(() => {\r\n        if (open && projectId) {\r\n            fetchEmployeeDetails();\r\n            fetchDropdownEmployees();\r\n            fetchAssignedEmployees();\r\n        }\r\n    }, [open, projectId]);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} placement=\"top\" />;\r\n    };\r\n\r\n    const fetchEmployeeDetails = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails?Project_Id=${projectId}`,\r\n            });\r\n            if (data.success) {\r\n                setEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch employee details\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDropdownEmployees = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails/dropDown?Company_id=${parseData.Company_id}`,\r\n            });\r\n            if (data.success) {\r\n                setDropdownEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch employees for dropdown\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchAssignedEmployees = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails?Project_Id=${projectId}`,\r\n            });\r\n            if (data.success) {\r\n                setSelectedEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch assigned employees\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddEmployeeOpen = () => {\r\n        setAddEmployeeDialogOpen(true);\r\n    };\r\n\r\n    const handleAddEmployeeClose = () => {\r\n        setAddEmployeeDialogOpen(false);\r\n        onClosed()\r\n        setEmployees(initialValue)\r\n    };\r\n\r\n    const handleAddEmployees = async () => {\r\n        if (Number(contextObj?.Add_Rights) === 1) {\r\n            try {\r\n                const response = await fetchLink({\r\n                    address: 'masters/Employeedetails/employeeAdd',\r\n                    method: 'POST',\r\n                    bodyData: {\r\n                        Project_Id: projectId,\r\n                        UserIds: selectedEmployees.map(emp => emp.UserId),\r\n                    },\r\n                });\r\n\r\n                if (response.success) {\r\n                    toast.success(\"Employees added successfully\");\r\n                    setAddEmployeeDialogOpen(false);\r\n                    await fetchEmployeeDetails();\r\n                    await fetchAssignedEmployees();\r\n                    onReload();\r\n                } else {\r\n                    toast.error(\"Failed to add employees\");\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                toast.error(\"Error adding employees\");\r\n            }\r\n        }\r\n    };\r\n    const onClosed = () => {\r\n\r\n        onClose()\r\n        setEmployees(initialValue);\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={open} maxWidth=\"sm\" fullWidth>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" marginTop={2} marginInlineStart={2}>\r\n                    <span>Employee Details</span>\r\n\r\n{/* <Button variant=\"contained\" color=\"primary\"    style={{ marginRight: '18px ' }}   onClick={onClosed}>Close</Button> */}\r\n<DialogActions>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddEmployeeOpen}\r\n                        sx={{ mr: 1 }}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n{/* \r\n                    <button\r\n                        className='btn btn-light'\r\n                        style={{ marginRight: '18px ',color:'#1976d2' }}\r\n                     \r\n                        onClick={onClosed}\r\n                    >\r\n                        Close\r\n                    </button> */}\r\n                </Box>\r\n                <DialogContent>\r\n                    {loading ? (\r\n                        <p>Loading...</p>\r\n                    ) : (\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Employee Name</TableCell>\r\n                                        <TableCell>Position</TableCell>\r\n                                        <TableCell>Department</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Array.isArray(employees) && employees.length > 0 ? (\r\n                                        employees.map(user => (\r\n                                            <TableRow key={user.EmployeeId || user.UserId}>\r\n                                                <TableCell>{user.Name || 'N/A'}</TableCell>\r\n                                                <TableCell>{user.Designation_Name || '-'}</TableCell>\r\n                                                <TableCell>{user.BranchName || '-'}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                    ) : (\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={3}>No data available</TableCell>\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions sx={{ marginTop: 'auto ', position: 'sticky', bottom: 0 }}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onClosed}>Close</Button>\r\n                </DialogActions>\r\n\r\n                </Dialog>\r\n\r\n            <Dialog\r\n                open={addEmployeeDialogOpen}\r\n                // onClose={handleAddEmployeeClose}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        multiple\r\n                        options={dropdownEmployees}\r\n                        getOptionLabel={(option) => option.Name}\r\n                        isOptionEqualToValue={(option, value) => option.UserId === value.UserId}\r\n                        onChange={(event, value) => {\r\n                            const uniqueValues = value.filter((val, index, self) =>\r\n                                index === self.findIndex((t) => (\r\n                                    t.UserId === val.UserId\r\n                                ))\r\n                            );\r\n                            setSelectedEmployees(uniqueValues);\r\n                        }}\r\n                        PopperComponent={CustomPopper}\r\n                        value={selectedEmployees}\r\n                        onClose={onclose}\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} placeholder=\"Employees\" />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddEmployeeClose}>Cancel</Button>\r\n                    <Button onClick={handleAddEmployees} variant='contained' color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeManagementDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\n\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TaskAssign = ({ open, onClose, projectId, taskId, reload, editData }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n \r\n    const [usersDropdown, setUsersDropdown] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    // const [schType, setSchType] = useState([]);\r\n    const [selectedSch, setSelectedSch] = useState([])\r\n    const intitalVlaue={\r\n        AN_No: '',\r\n        Project_Id: projectId,\r\n        Sch_Id: taskId,\r\n        Assigned_Emp_Id: parseData?.UserId,\r\n        Emp_Id: '',\r\n        Task_Assign_dt: new Date().toISOString().split('T')[0],\r\n        Sch_Period: '',\r\n        Sch_Time: '',\r\n        EN_Time: '',\r\n        Est_Start_Dt: '',\r\n        Est_End_Dt: '',\r\n        Ord_By: 1,\r\n        Timer_Based: false,\r\n        Sch_Type: '',\r\n        Invovled_Stat: true,\r\n        EmpGet: '- Select -',\r\n        Is_Repitative: false,\r\n        RepeatDays: { Mon: false, Tue: false, Wed: false, Thu: false, Fri: false, Sat: false, Sun: false }\r\n    }\r\n\r\n    const [assignEmpInpt, setAssignEmpInpt] = useState(intitalVlaue);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const userResponse =  await fetchLink({ address: `masters/Employeedetails/getusersproject?Project_Id=${projectId}` });\r\n                const schTypeResponse =  await fetchLink({ address: `taskManagement/project/schedule/newscheduleType` });\r\n\r\n\r\n                if (userResponse.success) setUsersDropdown(userResponse.data || []);\r\n                if (schTypeResponse.success) {\r\n                \r\n       }\r\n                \r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch data.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (open) fetchData();\r\n    }, [projectId, open, reload]);\r\n\r\n\r\n    useEffect(() => {\r\n \r\n        const fetchSelectedData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                if (editData) {\r\n                    const selectedSchType =  await fetchLink({ address: `masters/employeedetails/selectedTaskDetails?projectId=${projectId}&Sch_Id=${taskId.Sch_Id}&Task_Id=${taskId.Task_Id}` });\r\n\r\n                    const selectedSchId = selectedSchType.data[0]?.Sch_Type_Id;\r\n                    const selectedSchName = selectedSchType.data[0]?.Sch_Name;\r\n\r\n                    if (selectedSchId && selectedSchName) {\r\n                        setSelectedSch({ value: selectedSchId, label: selectedSchName });\r\n                    } else {\r\n                        setSelectedSch({ value: '', label: '' });\r\n                    }\r\n\r\n\r\n                } else {\r\n                    const selectedSchType = await fetchLink({ address: `masters/employeedetails/selectedTaskDetails?projectId=${projectId}&Sch_Id=${taskId.TaskSchId}&Task_Id=${taskId.Task_Id}` });\r\n\r\n\r\n                    const selectedSchId = selectedSchType.data[0]?.Sch_Type_Id;\r\n                    const selectedSchName = selectedSchType.data[0]?.Sch_Name;\r\n\r\n                    if (selectedSchId && selectedSchName) {\r\n                        setSelectedSch({ value: selectedSchId, label: selectedSchName });\r\n                    } else {\r\n                        setSelectedSch({ value: '', label: '' });\r\n                    }\r\n\r\n                }\r\n            } catch (error) {\r\n\r\n                toast.error(\"Failed to fetch data.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n\r\n        };\r\n\r\n        if (open) fetchSelectedData();\r\n    }, [open, editData, reload,projectId]);\r\n\r\n    useEffect(() => {\r\n        if (editData) {\r\n\r\n            setAssignEmpInpt(prev => ({\r\n                ...prev,\r\n                AN_No: editData.AN_No,\r\n                Emp_Id: editData.Emp_Id,\r\n                Sch_Time: editData.Sch_Time,\r\n                EN_Time: editData.EN_Time,\r\n                Est_Start_Dt: editData.Est_Start_Dt.split('T')[0],\r\n                Est_End_Dt: editData.Est_End_Dt.split('T')[0],\r\n                Ord_By: editData.Ord_By,\r\n                Timer_Based: editData.Timer_Based,\r\n                Invovled_Stat: editData.Invovled_Stat,\r\n                Sch_Type_Id: editData.Sch_Type,\r\n                Sch_Type: editData.Sch_Type_Name,\r\n                EmpGet: editData.EmployeeName,\r\n                Is_Repitative: editData.Is_Repitative,\r\n                RepeatDays: {\r\n                    Mon: !!editData.IS_Rep_Monday,\r\n                    Tue: !!editData.IS_Rep_Tuesday,\r\n                    Wed: !!editData.IS_Rep_Wednesday,\r\n                    Thu: !!editData.IS_Rep_Thursday,\r\n                    Fri: !!editData.Is_Rep_Friday,\r\n                    Sat: !!editData.Is_Rep_Saturday,\r\n                    Sun: !!editData.Is_Rep_Sunday,\r\n                },\r\n            }));\r\n        }\r\n    }, [editData]);\r\n\r\n\r\n\r\n    const calculateSchPeriod = () => {\r\n        const [hours1, minutes1] = assignEmpInpt.Sch_Time.split(':').map(Number);\r\n        const [hours2, minutes2] = assignEmpInpt.EN_Time.split(':').map(Number);\r\n\r\n        const date1 = new Date(0, 0, 0, hours1, minutes1);\r\n        const date2 = new Date(0, 0, 0, hours2, minutes2);\r\n\r\n        if (date2 > date1) {\r\n            let difference = Math.abs(date2 - date1);\r\n            const hours = Math.floor(difference / (1000 * 60 * 60));\r\n            const minutes = Math.floor(difference / (1000 * 60));\r\n            return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n        }\r\n        return '';\r\n    };\r\n\r\n\r\n    const mapRepeatDaysToISRepFields = () => {\r\n        return {\r\n            IS_Rep_Monday: assignEmpInpt.RepeatDays.Mon ? 1 : null,\r\n            IS_Rep_Tuesday: assignEmpInpt.RepeatDays.Tue ? 1 : null,\r\n            IS_Rep_Wednesday: assignEmpInpt.RepeatDays.Wed ? 1 : null,\r\n            IS_Rep_Thursday: assignEmpInpt.RepeatDays.Thu ? 1 : null,\r\n            Is_Rep_Friday: assignEmpInpt.RepeatDays.Fri ? 1 : null,\r\n            Is_Rep_Saturday: assignEmpInpt.RepeatDays.Sat ? 1 : null,\r\n            Is_Rep_Sunday: assignEmpInpt.RepeatDays.Sun ? 1 : null,\r\n        };\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const schPeriod = calculateSchPeriod();\r\n\r\n        if (assignEmpInpt.Est_End_Dt < assignEmpInpt.Est_Start_Dt) {\r\n            toast.error(\"End date must be greater than start date.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n\r\n            const address = editData ? 'masters/employeedetails/updateTask' : 'masters/employeedetails/assignTask';\r\n            const repeatDaysMapped = mapRepeatDaysToISRepFields();\r\n            const response = await fetchLink({\r\n                address,\r\n                method: editData ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...assignEmpInpt,\r\n                    Project_Id: projectId,\r\n                    Sch_Id: editData ? taskId.Sch_Id : taskId.TaskSchId,\r\n                    Task_Levl_Id: taskId.Task_Levl_Id,\r\n                    Task_Id: Number(taskId.Task_Id),\r\n                    Assigned_Emp_Id: assignEmpInpt.Assigned_Emp_Id,\r\n                    Emp_Id: assignEmpInpt.Emp_Id,\r\n                    Sch_Period: schPeriod,\r\n                    Sch_Time: assignEmpInpt.Sch_Time,\r\n                    EN_Time: assignEmpInpt.EN_Time,\r\n                    Est_Start_Dt: assignEmpInpt.Est_Start_Dt,\r\n                    Est_End_Dt: assignEmpInpt.Est_End_Dt,\r\n                    Ord_By: assignEmpInpt.Ord_By,\r\n                    Sch_Type: selectedSch.value,\r\n                    Timer_Based: assignEmpInpt.Timer_Based ? 1 : 0,\r\n                    Invovled_Stat: assignEmpInpt.Invovled_Stat ? 1 : 0,\r\n                    Is_Repitative: assignEmpInpt.Is_Repitative ? 1 : 0,\r\n                    RepeatDays: assignEmpInpt.Is_Repitative ? assignEmpInpt.RepeatDays : '',\r\n                    ...repeatDaysMapped,\r\n                }\r\n\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(`Task ${editData ? 'updated' : 'assigned'} successfully!`);\r\n                setAssignEmpInpt({});\r\n\r\n                onClose();\r\n        \r\n\r\n            } else {\r\n\r\n                toast.error(\"Please fill the values correctly\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Error during task assignment/update: \" + error.message);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Dialog open={open} maxWidth=\"sm\">\r\n                <DialogTitle>{editData ? 'Edit Task' : 'Employee Assign'}</DialogTitle>\r\n                <form onSubmit={handleSubmit}>\r\n                    <DialogContent className=\"table-responsive\">\r\n                           {loading && <div>Loading...</div>}\r\n                        <table className=\"table\" style={{ tableLayout: 'fixed' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        Employee\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <Select\r\n                                            value={{ value: assignEmpInpt.Emp_Id, label: assignEmpInpt.EmpGet }}\r\n                                            onChange={(e) => setAssignEmpInpt({ ...assignEmpInpt, Emp_Id: e.value, EmpGet: e.label })}\r\n                                            options={[{ value: '', label: '- Select -' }, ...usersDropdown.map(obj => ({ value: obj.UserId, label: obj.Name }))]}\r\n                                            styles={customSelectStyles}\r\n                                            required\r\n                                            isSearchable={true}\r\n                                            placeholder=\"Select User\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        Sch_Type\r\n                                    </td>\r\n                                    \r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <Select\r\n                                            value={selectedSch ? { value: selectedSch.value, label: `${selectedSch.label}` } : null}\r\n                                            styles={{ padding: '0.5em' }}\r\n                                            isDisabled\r\n                                            placeholder=\"Select Sch_Type\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n\r\n\r\n                                {/* Time and Date Inputs */}\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        Start Time\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <input\r\n                                            type=\"time\"\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt.Sch_Time}\r\n                                            required\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Sch_Time: e.target.value })}\r\n                                            style={{ padding: '0.5em' }}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        End Time\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <input\r\n                                            type=\"time\"\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt.EN_Time}\r\n                                            required\r\n                                            min={assignEmpInpt.Sch_Time}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, EN_Time: e.target.value })}\r\n                                            style={{ padding: '0.5em' }}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        Est. Start Date\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt.Est_Start_Dt}\r\n                                            required\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_Start_Dt: e.target.value })}\r\n                                            style={{ padding: '0.5em' }}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle', paddingRight: '1em' }}>\r\n                                        Est. End Date\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingLeft: '1em' }}>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt.Est_End_Dt}\r\n                                            required\r\n                                            min={assignEmpInpt.Est_Start_Dt}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_End_Dt: e.target.value })}\r\n                                            style={{ padding: '0.5em' }}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Timer Based & Involved Status */}\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15 text-start\" style={{ paddingRight: '1em' }}>\r\n                                        <div style={{ display: 'inline-flex', marginRight: '1em' }}>\r\n                                            <input\r\n                                                className=\"form-check-input shadow-none\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"timerbased\"\r\n                                                checked={Boolean(Number(assignEmpInpt?.Timer_Based))}\r\n                                                onChange={(e) =>\r\n                                                    setAssignEmpInpt({ ...assignEmpInpt, Timer_Based: e.target.checked })\r\n                                                }\r\n                                                style={{ marginRight: '0.5em' }}\r\n                                            />\r\n                                            <label className=\"form-check-label p-1 ps-2\" htmlFor=\"timerbased\">\r\n                                                Timer Based Task?\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                        {editData && (\r\n                                            <div style={{ display: 'inline-flex', marginRight: '1em' }}>\r\n                                                <input\r\n                                                    className=\"form-check-input shadow-none\"\r\n                                                    type=\"checkbox\"\r\n                                                    checked={Boolean(Number(assignEmpInpt?.Invovled_Stat))}\r\n                                                    onChange={() =>\r\n                                                        setAssignEmpInpt({ ...assignEmpInpt, Invovled_Stat: !assignEmpInpt.Invovled_Stat })\r\n                                                    }\r\n                                                    style={{ marginRight: '0.5em' }}\r\n                                                />\r\n                                                <label className=\"form-check-label p-1 ps-2\">Involved Status</label>\r\n                                            </div>\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ paddingRight: '1em' }}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', marginRight: '1em' }}>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={assignEmpInpt.Is_Repitative === 1}\r\n                                                    onChange={(e) => {\r\n                                                        setAssignEmpInpt((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            Is_Repitative: e.target.checked ? 1 : 0,\r\n                                                        }));\r\n                                                    }}\r\n                                                    style={{ marginRight: '1em' }}\r\n                                                />\r\n                                                <label style={{ marginBottom: '0' }}>Is Repetitive?</label>\r\n                                            </div>\r\n                                            {assignEmpInpt.Is_Repitative === 1 && (\r\n                                                <div style={{ display: 'inline-flex', gap: '0.5em' }}>\r\n                                                    {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day) => (\r\n                                                        <label\r\n                                                            key={day}\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                                alignItems: 'center',\r\n                                                                marginRight: '1em',\r\n                                                                width: '30px',\r\n                                                            }}\r\n                                                        >\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                checked={assignEmpInpt.RepeatDays[day]}\r\n                                                                onChange={() =>\r\n                                                                    setAssignEmpInpt({\r\n                                                                        ...assignEmpInpt,\r\n                                                                        RepeatDays: {\r\n                                                                            ...assignEmpInpt.RepeatDays,\r\n                                                                            [day]: !assignEmpInpt.RepeatDays[day],\r\n                                                                        },\r\n                                                                    })\r\n                                                                }\r\n                                                                style={{ marginRight: '0.5em' }}\r\n                                                            />\r\n                                                            {day}\r\n                                                        </label>\r\n                                                    ))}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            onClick={() => {\r\n                                onClose();\r\n                                setAssignEmpInpt(intitalVlaue);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                        <Button type=\"submit\" variant=\"contained\">\r\n                            Save Changes\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TaskAssign;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport { Edit, Delete, Launch, People, Search as SearchIcon } from '@mui/icons-material';\r\nimport { toast } from 'react-toastify';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport ProjectForm from \"../ProjectList/addEditProject\";\r\nimport EmployeeManagementDialog from \"../employeeManagement/employeeManagement\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport ListingTask from \"../Tasks/taskDetails/listingTask\";\r\n\r\nconst ActiveProjects = () => {\r\n    const [reload, setReload] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [projectAlldata, setProjectAlldata] = useState([]);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [projectId, setProjectId] = useState(0);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [projectToDelete, setProjectToDelete] = useState(null);\r\n    const [employeeDialogOpen, setEmployeeDialogOpen] = useState(false);\r\n    const [listingTaskDialogOpen, setListingTaskDialogOpen] = useState(false);\r\n    const [filterInput, setFilterInput] = useState('');\r\n\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        fetchProjectData();\r\n    }, [parseData?.Company_id, reload]);\r\n\r\n    const handleReloadProjects = () => setReload(prev => !prev);\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `taskManagement/project/newProjectAbstract?Company_id=${parseData?.Company_id}`\r\n            });\r\n            setProjects(data.success ? data.data : []);\r\n        } catch (e) {\r\n            console.error(e);\r\n            setProjects([]);\r\n        }\r\n    };\r\n\r\n    const fetchProjectData = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `taskManagement/project?Company_id=${parseData?.Company_id}`\r\n            });\r\n            setProjectAlldata(data.success ? data.data : []);\r\n        } catch (e) {\r\n            console.error(e);\r\n            setProjectAlldata([]);\r\n        }\r\n    };\r\n\r\n    const deleteFun = () => {\r\n        if (projectToDelete) {\r\n            fetchLink({\r\n                address: `taskManagement/project`,\r\n                method: 'DELETE',\r\n                bodyData: { Project_Id: projectToDelete?.Project_Id },\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setReload(!reload);\r\n                    toast.success(data.message);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }).catch(e => console.error('Fetch Error:', e));\r\n        }\r\n        setDeleteDialog(false);\r\n    };\r\n\r\n    const calcPercentage = (task, completed) => (Number(task) === 0 ? 0 : ((Number(completed) / Number(task)) * 100).toFixed(0));\r\n\r\n    const columns = [\r\n        { name: 'Project', selector: row => row.Project_Name, sortable: true, width: '250px' },\r\n        { name: 'Head', selector: row => projectAlldata.find(p => p.Project_Id === row.Project_Id)?.Project_Head_Name, sortable: true },\r\n        { name: 'Status', selector: row => projectAlldata.find(p => p.Project_Id === row.Project_Id)?.Status, sortable: true },\r\n        { name: 'End Date', selector: row => row.Est_End_Dt ? new Date(row.Est_End_Dt).toLocaleDateString('en-IN') : \"N/A\", sortable: true },\r\n        { name: 'Progress', selector: row => `${calcPercentage(row.TasksScheduled, row.CompletedTasks)}%`, sortable: true },\r\n        {\r\n            name: 'Tasks', cell: row => (\r\n                <>\r\n                    <IconButton onClick={() => handleOpenListingTaskDialog(row)}>\r\n                        <Launch />\r\n                    </IconButton>\r\n                    {row.CompletedTasks} / {row.TasksScheduled}\r\n                </>\r\n            )\r\n        },\r\n        { name: 'Assigned', selector: row => row.TasksAssignedToEmployee },\r\n        {\r\n            name: 'Employees', cell: row => (\r\n                <>\r\n                    {Number(contextObj?.Add_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleOpenEmployeeDialog(row.Project_Id)}>\r\n                            <People />\r\n                        </IconButton>\r\n                    )}\r\n                    {row.EmployeesInvolved}\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            name: 'Actions', cell: row => (\r\n                <>\r\n                    {Number(contextObj?.Edit_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleOpenEditDialog(row)}><Edit /></IconButton>\r\n                    )}\r\n                </>\r\n            )\r\n        },\r\n    ];\r\n\r\n    const filteredProjects = projects.filter(project => {\r\n        const projectHead = projectAlldata.find(p => p.Project_Id === project.Project_Id)?.Project_Head_Name || \"\";\r\n        const status = projectAlldata.find(p => p.Project_Id === project.Project_Id)?.Status || \"\";\r\n        return (\r\n            project.Project_Name.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            projectHead.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            status.toLowerCase().includes(filterInput.toLowerCase())\r\n        );\r\n    });\r\n\r\n    const handleOpenCreateDialog = () => {\r\n        setSelectedProject(null);\r\n        setIsEdit(false);\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleOpenEditDialog = project => {\r\n        setSelectedProject(project);\r\n        setIsEdit(true);\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleOpenDeleteDialog = project => {\r\n        setProjectToDelete(project);\r\n        setDeleteDialog(true);\r\n    };\r\n\r\n    const handleOpenListingTaskDialog = project => {\r\n        setSelectedProject(project);\r\n        setProjectId(project.Project_Id);\r\n        setListingTaskDialogOpen(true);\r\n    };\r\n\r\n    const handleCloseDialogs = () => {\r\n        setDialogOpen(false);\r\n        setListingTaskDialogOpen(false);\r\n        setSelectedProject(null);\r\n        setProjectToDelete(null);\r\n        setDeleteDialog(false);\r\n    };\r\n\r\n    const handleOpenEmployeeDialog = projectId => {\r\n        setProjectId(projectId);\r\n        setEmployeeDialogOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"fw-bold d-flex align-items-center justify-content-between mt-0 \">\r\n                <span style={{ marginLeft: '20px' }}>Projects</span>\r\n                <div className=\"mb-1\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <div style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n                        <SearchIcon style={{ position: 'absolute', left: 15, color: '#aaa' }} />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            onChange={e => setFilterInput(e.target.value)}\r\n                            style={{\r\n                                paddingLeft: 35,\r\n                                marginRight: 10,\r\n                                margin: 10,\r\n                                borderRadius: 4,\r\n                                border: '1px solid black'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {Number(contextObj?.Add_Rights) === 1 && (\r\n                        <button onClick={handleOpenCreateDialog} className=\"btn btn-primary fa-13 shadow\">\r\n                            Create Project\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card-body p-0 table-container\">\r\n                <DataTable\r\n                    columns={columns}\r\n                    data={filteredProjects}\r\n                    pagination\r\n                    highlightOnHover\r\n                    fixedHeader\r\n                    paginationPerPage={15}\r\n                    responsive\r\n                    persistTableHead\r\n                    customStyles={{\r\n                        headCells: {\r\n                            style: {\r\n                                fontSize: '16px',\r\n                                fontWeight: 'bold',\r\n                                padding: '10px',\r\n                                backgroundColor: '#2c3e50',\r\n                                color: '#ecf0f1',\r\n                                position: 'sticky',\r\n                                top: 0,\r\n                                zIndex: 2,\r\n                            },\r\n                        },\r\n                        cells: {\r\n                            style: {\r\n                                padding: '8px',\r\n                                fontSize: '14px',\r\n                                backgroundColor: '#f9f9f9',\r\n                                color: '#2c3e50',\r\n                            },\r\n                        },\r\n                        rows: {\r\n                            style: {\r\n                                borderBottom: '1px solid #ddd',\r\n                            },\r\n                        },\r\n                    }}\r\n                    style={{\r\n                        overflowY: 'auto',\r\n                        maxHeight: 'calc(100vh - 200px)',\r\n                    }}\r\n                />\r\n\r\n\r\n\r\n                <Dialog\r\n                    open={deleteDialog}\r\n                    onClose={handleCloseDialogs}\r\n                    aria-labelledby=\"delete-dialog-title\"\r\n                    aria-describedby=\"delete-dialog-description\">\r\n                    <DialogTitle className=\"bg-danger text-white mb-2 px-3 py-2\" style={{ fontSize: '18px' }}>\r\n                        Confirm Deletion\r\n                    </DialogTitle>\r\n                    <DialogContent className=\"p-4\" style={{ fontSize: '16px' }}>\r\n                        Are you sure you want to delete the project\r\n                        <span className=\"text-primary\">{\" \" + projectToDelete?.Project_Name + \" \"}</span>?\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <button\r\n                            onClick={() => setDeleteDialog(false)}\r\n                            className=\"btn btn-secondary fa-13 shadow\"\r\n                            style={{\r\n                                background: '#95a5a6',\r\n                                color: 'white',\r\n                                borderRadius: '25px',\r\n                                padding: '8px 15px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            onClick={deleteFun}\r\n                            className=\"btn btn-danger fa-13 shadow\"\r\n                            style={{\r\n                                background: '#e74c3c',\r\n                                color: 'white',\r\n                                borderRadius: '25px',\r\n                                padding: '8px 15px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </div>\r\n\r\n            <ListingTask\r\n                onClose={handleCloseDialogs}\r\n                dialogOpen={listingTaskDialogOpen}\r\n                setDialogOpen={setListingTaskDialogOpen}\r\n                isEdit={false}\r\n                parseData={parseData}\r\n                projectid={projectId}\r\n                onReload={handleReloadProjects}\r\n                selectedProject={selectedProject}\r\n            />\r\n\r\n            <ProjectForm\r\n                open={dialogOpen}\r\n                onClose={handleCloseDialogs}\r\n                inputValue={selectedProject}\r\n                isEdit={isEdit}\r\n                setReload={handleReloadProjects}\r\n                projectData={projectId}\r\n            />\r\n\r\n            <EmployeeManagementDialog\r\n                open={employeeDialogOpen}\r\n                onClose={() => setEmployeeDialogOpen(false)}\r\n                projectId={projectId}\r\n                onReload={handleReloadProjects}\r\n            />\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={handleCloseDialogs}\r\n                aria-labelledby=\"delete-dialog-title\"\r\n                aria-describedby=\"delete-dialog-description\">\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">Confirmation</DialogTitle>\r\n                <DialogContent className=\"p-4\">\r\n                    Do you want to delete the project\r\n                    <span className=\"text-primary\">{\" \" + projectToDelete?.Project_Name + \" \"}</span>?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button onClick={() => setDeleteDialog(false)} className=\"btn btn-secondary fa-13 shadow\">\r\n                        Cancel\r\n                    </button>\r\n                    <button onClick={deleteFun} className=\"btn btn-danger fa-13 shadow\">\r\n                        Delete\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActiveProjects;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","createSvgIcon","d","_ref","open","onClose","inputValue","isEdit","setReload","localData","localStorage","getItem","parseData","JSON","parse","projectHead","setProjectHead","useState","proStatus","setProStatus","formData","setFormData","Project_Id","Project_Name","Project_Desc","Project_Head","Est_Start_Dt","ISOString","Est_End_Dt","Project_Status","Entry_By","UserId","Company_id","useEffect","fetchLink","concat","then","data","success","catch","e","console","error","Project_Head_Id","handleChange","target","value","validateFields","requiredFields","field","toast","replace","inputFields","label","elem","type","required","options","map","obj","Name","Status_Id","Status","_Fragment","_jsxs","Dialog","DialogTitle","className","DialogContent","onSubmit","preventDefault","method","bodyData","prev","message","createFun","payload","index","onChange","option","idx","DialogActions","onClick","projectId","onReload","initialValue","Designation_Name","BranchName","employees","setEmployees","loading","setLoading","addEmployeeDialogOpen","setAddEmployeeDialogOpen","dropdownEmployees","setDropdownEmployees","selectedEmployees","setSelectedEmployees","contextObj","useContext","MyContext","fetchEmployeeDetails","fetchDropdownEmployees","fetchAssignedEmployees","async","onClosed","maxWidth","fullWidth","Box","display","justifyContent","alignItems","marginTop","marginInlineStart","Button","handleAddEmployeeOpen","sx","mr","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Array","isArray","length","user","EmployeeId","colSpan","position","bottom","Autocomplete","multiple","getOptionLabel","isOptionEqualToValue","event","uniqueValues","filter","val","self","findIndex","t","PopperComponent","props","Popper","placement","onclose","renderInput","params","TextField","placeholder","handleAddEmployeeClose","Number","Add_Rights","UserIds","emp","taskId","reload","editData","usersDropdown","setUsersDropdown","selectedSch","setSelectedSch","intitalVlaue","AN_No","Sch_Id","Assigned_Emp_Id","Emp_Id","Task_Assign_dt","Date","toISOString","split","Sch_Period","Sch_Time","EN_Time","Ord_By","Timer_Based","Sch_Type","Invovled_Stat","EmpGet","Is_Repitative","RepeatDays","Mon","Tue","Wed","Thu","Fri","Sat","Sun","assignEmpInpt","setAssignEmpInpt","userResponse","schTypeResponse","fetchData","_selectedSchType$data","_selectedSchType$data2","selectedSchType","Task_Id","selectedSchId","Sch_Type_Id","selectedSchName","Sch_Name","_selectedSchType$data3","_selectedSchType$data4","TaskSchId","fetchSelectedData","Sch_Type_Name","EmployeeName","IS_Rep_Monday","IS_Rep_Tuesday","IS_Rep_Wednesday","IS_Rep_Thursday","Is_Rep_Friday","Is_Rep_Saturday","Is_Rep_Sunday","schPeriod","calculateSchPeriod","hours1","minutes1","hours2","minutes2","date1","date2","difference","Math","abs","hours","floor","minutes","String","padStart","repeatDaysMapped","Task_Levl_Id","tableLayout","verticalAlign","paddingRight","paddingLeft","Select","styles","isSearchable","padding","isDisabled","min","marginRight","checked","Boolean","htmlFor","flexWrap","prevState","marginBottom","gap","day","ActiveProjects","projects","setProjects","projectAlldata","setProjectAlldata","dialogOpen","setDialogOpen","selectedProject","setSelectedProject","setIsEdit","setProjectId","deleteDialog","setDeleteDialog","projectToDelete","setProjectToDelete","employeeDialogOpen","setEmployeeDialogOpen","listingTaskDialogOpen","setListingTaskDialogOpen","filterInput","setFilterInput","fetchProjects","fetchProjectData","handleReloadProjects","deleteFun","columns","selector","row","sortable","_projectAlldata$find","find","p","Project_Head_Name","_projectAlldata$find2","toLocaleDateString","task","TasksScheduled","completed","CompletedTasks","toFixed","calcPercentage","cell","IconButton","handleOpenListingTaskDialog","Launch","TasksAssignedToEmployee","handleOpenEmployeeDialog","People","EmployeesInvolved","Edit_Rights","handleOpenEditDialog","Edit","filteredProjects","project","_projectAlldata$find3","_projectAlldata$find4","status","toLowerCase","includes","handleCloseDialogs","marginLeft","SearchIcon","left","margin","borderRadius","border","handleOpenCreateDialog","DataTable","pagination","highlightOnHover","fixedHeader","paginationPerPage","responsive","persistTableHead","customStyles","top","cells","borderBottom","overflowY","maxHeight","cursor","ListingTask","projectid","ProjectForm","projectData","EmployeeManagementDialog","generateUtilityClasses","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate","_excluded","arguments","undefined","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx"],"sourceRoot":""}