{"version":3,"file":"static/js/968.2183105f.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Pages/Inventry/liveStockReport.jsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton, Button } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {'top'|'middle'|'bottom'} verticalAlign\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {boolean} [props.PDFPrintOption]\r\n * @param {boolean} [props.ExcelPrintOption]\r\n * @param {''} [props.title]\r\n */\r\n\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    } \r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({...o, Sno: i + 1}))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(false);\r\n    const tableHeight = showFullHeight ? ' max-content ' : tableMaxHeight;\r\n    const printRef = useRef(null);\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center vtop'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            ) + (\r\n                                                    column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                                )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    ) + (\r\n                                            column.verticalAlign ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class : ' vctr '\r\n                                        )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2\">\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0 ps-3'>{title}</h6>}\r\n                {PDFPrintOption && (\r\n                    <Button\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        className='me-2'\r\n                        // onClick={handlePrint}\r\n                        onClick={() => generatePDF(dataArray, columns)}\r\n                        disabled={isEqualNumber(dataArray?.length, 0)}\r\n                        startIcon={<Download />}\r\n                    >Download PDF</Button>\r\n                )}\r\n                {ExcelPrintOption && (\r\n                    <Button\r\n                        variant='outlined'\r\n                        color='success'\r\n                        className='me-2'\r\n                        onClick={() => exportToExcel(dataArray, columns)}\r\n                        disabled={isEqualNumber(dataArray?.length, 0)}\r\n                        startIcon={<Download />}\r\n                    >Download Excel</Button>\r\n                )}\r\n                <div>\r\n                    <label className=\"form-check-label p-1 pe-2\" htmlFor=\"fullHeight\">Max Height</label>\r\n                    <input\r\n                        className=\"form-check-input shadow-none\"\r\n                        style={{ padding: '0.7em' }}\r\n                        type=\"checkbox\"\r\n                        id=\"fullHeight\"\r\n                        checked={showFullHeight}\r\n                        onChange={e => setShowFullHeight(e.target.checked)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableHeight }} ref={printRef}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div className=\"p-2 pb-0\">\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n};\r\n\r\n\r\nexport default FilterableTable;","import React, { useState, useEffect } from \"react\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { getPreviousDate, groupData, calcTotal, ISOString } from \"../../Components/functions\";\r\nimport FilterableTable from '../../Components/filterableTable2'\r\nimport { Card, CardContent, Autocomplete, TextField, Checkbox, Tooltip, IconButton, Button, Dialog, DialogContent, DialogActions, Tab, Box } from \"@mui/material\";\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff } from \"@mui/icons-material\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\n\r\nconst LiveStockReport = ({ loadingOn, loadingOff }) => {\r\n    const [reportData, setReportData] = useState([]);\r\n    const [groupedData, setGroupedData] = useState([]);\r\n    const [apiFilters, setAPIFilters] = useState({\r\n        Fromdata: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        view: 'Grouped'\r\n    });\r\n    const [filters, setFilters] = useState({});\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filteredData, setFilteredData] = useState(reportData);\r\n\r\n    const columns = [\r\n        { Field_Name: \"Stock_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Grade_Item_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Group_Name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"stock_item_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"godown_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        ...(apiFilters.view === 'List' ? [\r\n            { Field_Name: \"Act_Bags\", Fied_Data: \"number\", ColumnHeader: 'Bags', isVisible: 1 },\r\n            { Field_Name: \"Bal_Act_Qty\", Fied_Data: \"number\", ColumnHeader: 'Balance Quantity', isVisible: 1 }\r\n        ] : [])\r\n    ];\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    useEffect(() => setFilters({}), [apiFilters.view])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...reportData];\r\n        for (const column of columns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name]?.toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(reportData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n        fetchLink({\r\n            address: `reports/liveStockReport?Fromdata=${apiFilters.Fromdata}&Todate=${apiFilters.Todate}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReportData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        })\r\n    }, [apiFilters.Fromdata, apiFilters.Todate])\r\n\r\n    useEffect(() => {\r\n        const runLoading = async () => {\r\n            try {\r\n                const dataToUse = (Object.keys(filters).length > 0) ? filteredData : reportData;\r\n\r\n                if (loadingOn) {\r\n                    await loadingOn();\r\n                }\r\n\r\n                const grouped_Stock_Group = groupData(dataToUse, 'Stock_Group');\r\n                const aggregatedStockGroup = grouped_Stock_Group?.sort((a, b) => String(a.Stock_Group).localeCompare(b.Stock_Group ?? '')).map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    BagsTotal: calcTotal(stockGroup.groupedData, 'Act_Bags'),\r\n                    BalQtyTotal: calcTotal(stockGroup.groupedData, 'Bal_Act_Qty'),\r\n                }));\r\n\r\n                const Grade_Item_Group = aggregatedStockGroup?.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: groupData(stockGroup?.groupedData, 'Grade_Item_Group')\r\n                }));\r\n                const aggregatedGradeItemGroup = Grade_Item_Group.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        BagsTotal: calcTotal(gradeItemGroup.groupedData, 'Act_Bags'),\r\n                        BalQtyTotal: calcTotal(gradeItemGroup.groupedData, 'Bal_Act_Qty'),\r\n                    }))\r\n                }));\r\n\r\n                const GroupName = aggregatedGradeItemGroup.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: groupData(gradeItemGroup?.groupedData, 'Group_Name')\r\n                    }))\r\n                }));\r\n                const aggregatedGroupName = GroupName.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: gradeItemGroup?.groupedData?.map(grouopName => ({\r\n                            ...grouopName,\r\n                            BagsTotal: calcTotal(grouopName.groupedData, 'Act_Bags'),\r\n                            BalQtyTotal: calcTotal(grouopName.groupedData, 'Bal_Act_Qty'),\r\n                        }))\r\n                    }))\r\n                }));\r\n\r\n                // setGroupedData(aggregatedGroupName);\r\n                setTimeout(() => setGroupedData(aggregatedGroupName), 500);\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                if (loadingOff) {\r\n                    setTimeout(() => loadingOff(), 500);\r\n                }\r\n            }\r\n        }\r\n\r\n        runLoading();\r\n    }, [reportData, filters, filteredData])\r\n\r\n    const columnCells = (mainKey) => [\r\n        {\r\n            Field_Name: mainKey,\r\n            isVisible: 1,\r\n            Fied_Data: 'string',\r\n        },\r\n        {\r\n            Field_Name: 'BagsTotal',\r\n            ColumnHeader: 'Bags',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n        {\r\n            Field_Name: 'BalQtyTotal',\r\n            ColumnHeader: 'Balance Quantity',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-1 d-flex justify-content-between align-items-center flex-wrap border-bottom\">\r\n                    <h5 className=\"ps-2 pt-2\">Live Stock Report</h5>\r\n                    <span>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Fromdata}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Fromdata: e.target.value }))}\r\n                        /> - TO -\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Todate}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                        />\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton\r\n                                onClick={() => setDialog(true)}\r\n                                size=\"small\"\r\n                                className=\"d-md-none d-inline\"\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n\r\n                            <TabContext value={apiFilters.view}>\r\n                                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                    <TabList\r\n                                        indicatorColor='transparant'\r\n                                        onChange={(e, n) => setAPIFilters(pre => ({ ...pre, view: n }))}\r\n                                        variant=\"scrollable\"\r\n                                        scrollButtons=\"auto\"\r\n                                        allowScrollButtonsMobile\r\n                                    >\r\n                                        <Tab sx={apiFilters.view === 'Grouped' ? { backgroundColor: '#c6d7eb' } : {}} label=\"Grouped\" value='Grouped' />\r\n                                        <Tab sx={apiFilters.view === 'List' ? { backgroundColor: '#c6d7eb' } : {}} label=\"List\" value='List' />\r\n                                    </TabList>\r\n                                </Box>\r\n\r\n                                <TabPanel value={'Grouped'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={groupedData}\r\n                                        title=\"Stock Group\"\r\n                                        columns={columnCells('Stock_Group')}\r\n                                        isExpendable={true}\r\n                                        EnableSerialNumber\r\n                                        expandableComp={({ row }) => (\r\n                                            <FilterableTable\r\n                                                dataArray={row.groupedData}\r\n                                                title=\"Grade Item Group\"\r\n                                                columns={columnCells('Grade_Item_Group')}\r\n                                                isExpendable={true}\r\n                                                EnableSerialNumber\r\n                                                expandableComp={({ row }) => (\r\n                                                    <FilterableTable\r\n                                                        dataArray={row.groupedData}\r\n                                                        title=\"Group Name\"\r\n                                                        columns={columnCells('Group_Name')}\r\n                                                        isExpendable={true}\r\n                                                        EnableSerialNumber\r\n                                                        expandableComp={({ row }) => (\r\n                                                            <FilterableTable\r\n                                                                dataArray={row.groupedData}\r\n                                                                title=\"Stock Item Name\"\r\n                                                                columns={[\r\n                                                                    {\r\n                                                                        Field_Name: 'stock_item_name',\r\n                                                                        ColumnHeader: 'Stock Item Name',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bags',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bal_Act_Qty',\r\n                                                                        ColumnHeader: 'Balance Quantity',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'godown_name',\r\n                                                                        ColumnHeader: 'Godown',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                ]}\r\n                                                                EnableSerialNumber\r\n                                                                tableMaxHeight={2000}\r\n                                                                disablePagination={true}\r\n                                                            />\r\n                                                        )}\r\n                                                        tableMaxHeight={3000}\r\n                                                        disablePagination={true}\r\n\r\n                                                    />\r\n                                                )}\r\n                                                tableMaxHeight={4000}\r\n                                                disablePagination={true}\r\n                                            />\r\n                                        )}\r\n                                        tableMaxHeight={5000}\r\n                                        disablePagination={true}\r\n                                    />\r\n                                </TabPanel>\r\n\r\n                                <TabPanel value={'List'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={(Object.keys(filters).length > 0) ? filteredData : reportData}\r\n                                        columns={columns}\r\n                                    />\r\n                                </TabPanel>\r\n                            </TabContext>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                            <h5 className=\"d-flex justify-content-between px-2\">\r\n                                <span>Filters</span>\r\n                                <span>\r\n                                    <Tooltip title='Clear Filters'>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setFilters({})}\r\n                                        >\r\n                                            <FilterAltOff />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </h5>\r\n                            <div className=\"border rounded-3 \">\r\n                                {columns.map((column, ke) => (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                ))}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        <span>Filters</span>\r\n                        <span>\r\n                            <Tooltip title='Clear Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setFilters({})}\r\n                                >\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" >\r\n                        {columns.map((column, ke) => (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setDialog(false)} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveStockReport;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","FilterableTable","_ref","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","PDFPrintOption","ExcelPrintOption","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","printRef","useRef","columnAlign","type","class","columnVerticalAlign","sortedData","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","columnInd","_columnAlign$find2","_columnVerticalAlign$2","isEqualNumber","Boolean","align","find","verticalAlign","Object","entries","_ref3","_columnAlign$find","_columnVerticalAlign$","value","console","log","Fied_Data","colSpan","Number","useReactToPrint","content","current","Button","variant","color","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","disabled","startIcon","Download","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","htmlFor","style","padding","id","checked","onChange","target","TableContainer","component","Paper","maxHeight","ref","Table","stickyHeader","TableHead","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","undefined","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","loadingOn","loadingOff","reportData","setReportData","groupedData","setGroupedData","apiFilters","setAPIFilters","Fromdata","getPreviousDate","Todate","ISOString","view","filters","setFilters","dialog","setDialog","filteredData","setFilteredData","useEffect","applyFilters","handleFilterChange","prevFilters","filtered","min","max","item","start","end","dateValue","Date","isArray","_filters$column$Field","_item$column$Field_Na","includes","trim","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","placeholder","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","marginRight","isOptionEqualToValue","opt","renderInput","params","TextField","label","fetchLink","address","then","success","catch","finally","async","dataToUse","keys","grouped_Stock_Group","groupData","aggregatedStockGroup","_b$Stock_Group","Stock_Group","localeCompare","stockGroup","BagsTotal","calcTotal","BalQtyTotal","aggregatedGradeItemGroup","_stockGroup$groupedDa","gradeItemGroup","aggregatedGroupName","_stockGroup$groupedDa2","_stockGroup$groupedDa3","_gradeItemGroup$group","grouopName","setTimeout","runLoading","columnCells","mainKey","_Fragment","Card","Tooltip","FilterAlt","CardContent","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","_ref4","_ref5","FilterAltOff","Dialog","onClose","maxWidth","fullWidth","DialogContent","DialogActions","createSvgIcon","d","Context","React","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","name","overridesResolver","styles","root","theme","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate","getCardContentUtilityClass","CardContentRoot","paddingBottom","useDefaultProps","as","getCardUtilityClass","CardRoot","overflow","raised","elevation","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}