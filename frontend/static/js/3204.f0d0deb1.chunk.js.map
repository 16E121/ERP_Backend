{"version":3,"file":"static/js/3204.f0d0deb1.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/QueryBuilder.js","Pages/CurrentProjects/taskActivity.jsx","../node_modules/@mui/icons-material/esm/CalendarMonth.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js"],"sourcesContent":["\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'QueryBuilder');","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, IconButton } from '@mui/material';\nimport { KeyboardArrowLeft, CalendarMonth, QueryBuilder, Edit } from \"@mui/icons-material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Select from 'react-select';\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\nimport { fetchLink } from '../../Components/fetchComponent'\nimport { ISOString, isValidObject, LocalDate } from \"../../Components/functions\";\n\n// import CalenderComp from \"./calender\";\n\n\nconst TaskActivity = () => {\n    const location = useLocation();\n    const taskInfo = location.state?.taskDetails;\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const nav = useNavigate()\n\n    const assignEmpInitialValue = {\n        AN_No: '',\n        Project_Id: taskInfo?.Project_Id,\n        Sch_Id: taskInfo?.Sch_Id,\n        Task_Levl_Id: taskInfo?.Task_Levl_Id,\n        Task_Id: taskInfo?.Task_Id,\n        Assigned_Emp_Id: parseData?.UserId,\n        Emp_Id: '',\n        Task_Assign_dt: ISOString(),\n        Sch_Period: taskInfo?.Task_Sch_Duaration,\n        Sch_Time: taskInfo?.Task_Start_Time,\n        EN_Time: taskInfo?.Task_End_Time,\n        Est_Start_Dt: taskInfo?.Task_Est_Start_Date ? ISOString(taskInfo?.Task_Est_Start_Date) : ISOString(),\n        Est_End_Dt: taskInfo?.Task_Est_End_Date ? ISOString(taskInfo?.Task_Est_End_Date) : ISOString(),\n        Ord_By: 1,\n        Timer_Based: true,\n        Invovled_Stat: true,\n        EmpGet: '- Select Employee -'\n    }\n\n    const [dialog, setDialog] = useState({\n        assignEmp: false,\n    });\n    const [isEdit, setIsEdit] = useState(false);\n    const [userDropDown, setUsersDropdown] = useState([])\n    const [assignEmpInpt, setAssignEmpInpt] = useState(assignEmpInitialValue);\n    const [assignedEmployees, setAssignedEmployees] = useState([]);\n    const [reload, setReload] = useState(false);\n    const [workDetails, setWorkDetails] = useState([]);\n\n    useEffect(() => {\n        if (!isValidObject(taskInfo)) {\n            nav('/taskManagement/projectActivity');\n        }\n    }, [taskInfo])\n\n    useEffect(() => {\n        if (taskInfo?.Task_Levl_Id) {\n            fetchLink({\n                address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\n            }).then(data => {\n                if (data.success) {\n                    setUsersDropdown(data.data)\n                }\n            }).catch(e => console.error(e))\n\n            fetchLink({\n                address: `taskManagement/task/workedDetails?Task_Levl_Id=${taskInfo?.Task_Levl_Id}`\n            }).then(data => {\n                if (data.success) {\n                    setWorkDetails(data.data)\n                }\n            }).catch(e => console.error(e))\n        }\n    }, [taskInfo])\n\n    useEffect(() => {\n        if (taskInfo?.Task_Levl_Id) {\n            fetchLink({\n                address: `taskManagement/task/assignEmployee?Task_Levl_Id=${taskInfo?.Task_Levl_Id}`\n            }).then(data => {\n                if (data.success) {\n                    setAssignedEmployees(data.data)\n                }\n            }).catch(e => console.error(e))\n        }\n    }, [reload, taskInfo])\n\n    useEffect(() => {\n        if (assignEmpInpt?.Sch_Time && assignEmpInpt?.EN_Time) {\n            const [hours1, minutes1] = assignEmpInpt?.Sch_Time?.split(':')?.map(Number);\n            const [hours2, minutes2] = assignEmpInpt?.EN_Time?.split(':')?.map(Number);\n\n            const date1 = new Date(0, 0, 0, hours1, minutes1);\n            const date2 = new Date(0, 0, 0, hours2, minutes2);\n\n            if (date2 > date1) {\n                let difference = Math.abs(date2 - date1);\n\n                const hours = Math.floor(difference / (1000 * 60 * 60));\n                difference %= (1000 * 60 * 60);\n                const minutes = Math.floor(difference / (1000 * 60));\n\n                const formattedHours = String(hours).padStart(2, '0');\n                const formattedMinutes = String(minutes).padStart(2, '0');\n\n                setAssignEmpInpt(opt => ({ ...opt, Sch_Period: `${formattedHours}:${formattedMinutes}` }));\n            }\n        }\n    }, [assignEmpInpt?.Sch_Time, assignEmpInpt?.EN_Time])\n\n    const switchEmpAssign = (val) => {\n        if (val) {\n            setAssignEmpInpt(val)\n            setIsEdit(true)\n        } else {\n            setAssignEmpInpt(assignEmpInitialValue)\n            setIsEdit(false)\n        }\n        setDialog({ ...dialog, assignEmp: !dialog.assignEmp })\n    }\n\n    const postAndPutAssignEmpFun = () => {\n        if (assignEmpInpt?.Emp_Id) {\n            fetchLink({\n                address: `taskManagement/task/assignEmployee`,\n                method: isEdit ? 'PUT' : 'POST',\n                bodyData: assignEmpInpt,\n\n            }).then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    switchEmpAssign();\n                    setReload(!reload)\n                } else {\n                    toast.error(data.message)\n                }\n            }).catch(e => console.error(e))\n\n        } else {\n            toast.warn('Select Employee')\n        }\n    }\n\n    const formatTime24 = (time24) => {\n        const [hours, minutes] = time24.split(':').map(Number);\n\n        let hours12 = hours % 12;\n        hours12 = hours12 || 12;\n        const period = hours < 12 ? 'AM' : 'PM';\n        const formattedHours = hours12 < 10 ? '0' + hours12 : hours12;\n        const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n        const time12 = `${formattedHours}:${formattedMinutes} ${period}`;\n\n        return time12;\n    }\n\n    const statusColor = (id) => {\n        const numId = Number(id);\n        const color = ['bg-dark', 'bg-info', 'bg-warning', 'bg-success', 'bg-danger'];\n        return color[numId]\n    }\n\n    return (\n        <>\n            <ToastContainer />\n            <div className=\"cus-card p-2\">\n                <h5 className=\"mb-0 d-flex px-3 py-2 align-items-center\">\n                    <span className=\"flex-grow-1 fa-16\">\n                        Task: {taskInfo?.TaskNameGet}\n                    </span>\n                    <span className=\" d-flex \">\n\n                        <span className=\"fa-12\">\n                            {taskInfo?.TaskTypeGet}\n                            <br />\n                            <span className=\"fa-12\">(\n                                {LocalDate(taskInfo?.Task_Est_Start_Date)}\n                                {' - '}\n                                {LocalDate(taskInfo?.Task_Est_End_Date)}\n                                )\n                            </span>\n                        </span>\n\n                    </span>\n                </h5>\n            </div>\n\n            <div className=\"cus-card py-2 ps-3\">\n                <h5 className=\"d-flex align-items-center m-0\">\n                    <span className=\"fa-17 flex-grow-1\">Involved Employees</span>\n                    <span className=\"d-flex pe-2\">\n                        <button\n                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center me-2\"\n                            onClick={() => switchEmpAssign()}>\n                            Assign Employee\n                        </button>\n                        <button\n                            className=\"btn btn-secondary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\n                            onClick={() => nav('/taskManagement/projectActivity/projectDetails', { state: location.state?.retObj })}>\n                            <KeyboardArrowLeft className=\"fa-in me-2\" /> Back\n                        </button>\n                    </span>\n                </h5>\n\n                {assignedEmployees.length ? (\n                    <div className=\"table-responsive mt-3\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th className=\"fa-14 text-center\">Employee</th>\n                                    <th className=\"fa-14 text-center\">Assigned By</th>\n                                    <th className=\"fa-14 text-center\">Start-End Date</th>\n                                    <th className=\"fa-14 text-center\">Start-End Time</th>\n                                    <th className=\"fa-14 text-center\">Total Hours</th>\n                                    <th className=\"fa-14 text-center\">Timer Based</th>\n                                    <th className=\"fa-14 text-center\">Involved Status</th>\n                                    <th className=\"fa-14 text-center\">Order By</th>\n                                    <th className=\"fa-14 text-center\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {assignedEmployees.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"fa-13 text-center\">{o?.EmployeeName}</td>\n                                        <td className=\"fa-13 text-center\">{o?.AssignedUser}</td>\n                                        <td className=\"fa-14 text-center\">\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\n                                                <CalendarMonth className=\"fa-18 me-2\" />\n                                                {LocalDate(o?.Est_Start_Dt)}\n                                                {' - '}\n                                                {LocalDate(o?.Est_End_Dt)}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-14 text-center\">\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\n                                                <QueryBuilder className=\"fa-18 me-2\" />\n                                                {o?.Sch_Time}\n                                                {' - '}\n                                                {o?.EN_Time}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-13 text-center\">{o?.Sch_Period}</td>\n                                        <td className=\"fa-14\">\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${Number(o?.Timer_Based) ? 'bg-success' : 'bg-warning'}`}>\n                                                {Number(o?.Timer_Based) ? \"Yes\" : \"No\"}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-14 text-center\">\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${Number(o?.Invovled_Stat) ? 'bg-success' : 'bg-danger'}`}>\n                                                {Number(o?.Invovled_Stat) ? \"IN\" : \"OUT\"}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-13 text-center\">{o?.Ord_By}</td>\n                                        <td className=\"fa-13 text-center\">\n                                            <IconButton size=\"small\" onClick={() => {\n                                                switchEmpAssign({ ...o, EmpGet: o?.EmployeeName })\n                                            }}>\n                                                <Edit className=\"fa-18\" />\n                                            </IconButton>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                ) : (\n                    <h6 className=\"mt-3\">No Data</h6>\n                )}\n\n\n\n            </div>\n\n            <div className=\"cus-card py-2 ps-3\">\n                <h5 className=\"m-0 mt-2 fa-17\">Task Activity</h5>\n\n                {workDetails.length > 0 ? (\n                    <div className=\"table-responsive mt-3\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th className=\"fa-14 text-center\">Sno</th>\n                                    <th className=\"fa-14 text-center\">Employee</th>\n                                    <th className=\"fa-14 text-center\">Date</th>\n                                    <th className=\"fa-14 text-center\">Time</th>\n                                    <th className=\"fa-14 text-center\">Duration (Mins)</th>\n                                    <th className=\"fa-14 text-center\">Status</th>\n                                    <th className=\"fa-14\">Work Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {workDetails.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"fa-13 text-center\">{i + 1}</td>\n                                        <td className=\"fa-13 text-center\">{o?.EmployeeName}</td>\n                                        <td className=\"fa-13 text-center\">\n                                            {LocalDate(o?.Work_Dt)}\n                                        </td>\n                                        <td className=\"fa-14 text-center\">\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\n                                                <QueryBuilder className=\"fa-18 me-2\" />\n                                                {formatTime24(o?.Start_Time)}\n                                                {' - '}\n                                                {formatTime24(o?.End_Time)}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-13 text-center\">{o?.Tot_Minutes}</td>\n                                        <td className=\"fa-13 text-center\">\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(o?.Work_Status)}`}>\n                                                {o?.WorkStatus}\n                                            </span>\n                                        </td>\n                                        <td className=\"fa-13\">{o?.Work_Done}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                ) : (\n                    <h6 className=\"mt-3\">No Data</h6>\n                )}\n            </div>\n\n\n            <Dialog\n                open={dialog?.assignEmp}\n                onClose={() => switchEmpAssign()}>\n                <DialogTitle>{isEdit ? 'Modify Assigned Task' : 'Assign Task'}</DialogTitle>\n                <form onSubmit={e => {\n                    e.preventDefault();\n                    postAndPutAssignEmpFun()\n                }}>\n                    <DialogContent className=\"table-responsive\">\n                        <table className=\"table\">\n                            <tbody>\n\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Employee</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <Select\n                                            value={{ value: assignEmpInpt?.Emp_Id, label: assignEmpInpt?.EmpGet }}\n                                            onChange={(e) => setAssignEmpInpt({ ...assignEmpInpt, Emp_Id: e.value, EmpGet: e.label })}\n                                            options={[\n                                                { value: '', label: '- Select Employee -' },\n                                                ...userDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))\n                                            ]}\n                                            styles={customSelectStyles} required\n                                            isSearchable={true}\n                                            placeholder={\"Select User\"} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='time'\n                                            className=\"cus-inpt\"\n                                            value={assignEmpInpt?.Sch_Time} required\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Sch_Time: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='time'\n                                            className=\"cus-inpt\"\n                                            value={assignEmpInpt?.EN_Time} required\n                                            min={assignEmpInpt?.Sch_Time}\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, EN_Time: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date </td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='date'\n                                            className=\"cus-inpt\" required\n                                            value={ISOString(assignEmpInpt?.Est_Start_Dt)}\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_Start_Dt: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date </td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='date'\n                                            className=\"cus-inpt\" required\n                                            min={assignEmpInpt?.Est_Start_Dt}\n                                            value={assignEmpInpt?.Est_End_Dt && ISOString(assignEmpInpt?.Est_End_Dt)}\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_End_Dt: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Order BY </td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='number' required placeholder=\"1, 2, 3...\"\n                                            className=\"cus-inpt\"\n                                            value={assignEmpInpt?.Ord_By}\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Ord_By: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>\n                                        {isEdit && (\n                                            <div>\n                                                <input\n                                                    className=\"form-check-input shadow-none\"\n                                                    style={{ padding: '0.7em' }}\n                                                    type=\"checkbox\"\n                                                    id=\"involve\"\n                                                    checked={Boolean(Number(assignEmpInpt?.Invovled_Stat))}\n                                                    onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Invovled_Stat: e.target.checked })} />\n                                                <label className=\"form-check-label p-1 ps-2\" htmlFor=\"involve\">is Involved?</label>\n                                            </div>\n                                        )}\n                                    </td>\n                                    <td className=\"border-bottom-0 fa-15 text-end\">\n                                        <div>\n                                            <input\n                                                className=\"form-check-input shadow-none\"\n                                                style={{ padding: '0.7em' }}\n                                                type=\"checkbox\"\n                                                id=\"timerbased\"\n                                                checked={Boolean(Number(assignEmpInpt?.Timer_Based))}\n                                                onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Timer_Based: e.target.checked })} />\n                                            <label className=\"form-check-label p-1 ps-2\" htmlFor=\"timerbased\">Timer Based Task?</label>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type=\"button\" onClick={() => switchEmpAssign()}>close</Button>\n                        <Button type=\"submit\" >submit</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    )\n}\n\nexport default TaskActivity;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V10h14zM9 14H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2zm-8 4H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2z\"\n}), 'CalendarMonth');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","createSvgIcon","_jsx","d","TaskActivity","_location$state","location","useLocation","taskInfo","taskDetails","localData","localStorage","getItem","parseData","JSON","parse","nav","useNavigate","assignEmpInitialValue","AN_No","Project_Id","Sch_Id","Task_Levl_Id","Task_Id","Assigned_Emp_Id","UserId","Emp_Id","Task_Assign_dt","ISOString","Sch_Period","Task_Sch_Duaration","Sch_Time","Task_Start_Time","EN_Time","Task_End_Time","Est_Start_Dt","Task_Est_Start_Date","Est_End_Dt","Task_Est_End_Date","Ord_By","Timer_Based","Invovled_Stat","EmpGet","dialog","setDialog","useState","assignEmp","isEdit","setIsEdit","userDropDown","setUsersDropdown","assignEmpInpt","setAssignEmpInpt","assignedEmployees","setAssignedEmployees","reload","setReload","workDetails","setWorkDetails","useEffect","isValidObject","fetchLink","concat","Company_id","then","data","success","catch","e","console","error","_assignEmpInpt$Sch_Ti","_assignEmpInpt$Sch_Ti2","_assignEmpInpt$EN_Tim","_assignEmpInpt$EN_Tim2","hours1","minutes1","split","map","Number","hours2","minutes2","date1","Date","date2","difference","Math","abs","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","opt","switchEmpAssign","val","formatTime24","time24","hours12","period","_jsxs","_Fragment","children","ToastContainer","className","TaskNameGet","TaskTypeGet","LocalDate","onClick","_location$state2","retObj","KeyboardArrowLeft","length","o","i","EmployeeName","AssignedUser","CalendarMonth","QueryBuilder","IconButton","size","Edit","Work_Dt","Start_Time","End_Time","Tot_Minutes","Work_Status","WorkStatus","Work_Done","Dialog","open","onClose","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","warn","DialogContent","verticalAlign","Select","value","label","onChange","options","obj","Name","styles","required","isSearchable","placeholder","type","target","min","padding","checked","Boolean","htmlFor","DialogActions","Button"],"sourceRoot":""}