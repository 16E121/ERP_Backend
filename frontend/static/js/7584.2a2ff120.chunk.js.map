{"version":3,"file":"static/js/7584.2a2ff120.chunk.js","mappings":"mVAWA,MAkWA,EAlW0BA,IAAgC,IAA/B,UAAEC,EAAS,WAAEC,GAAYF,EAChD,MAAMG,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,CAAC,GACtCO,GAAMC,EAAAA,EAAAA,OAELC,EAASC,IAAcV,EAAAA,EAAAA,UAAS,CACnCW,UAAUC,EAAAA,EAAAA,MACVC,QAAQD,EAAAA,EAAAA,MACRE,YAAa,GACbC,YAAa,MACbC,WAAY,GACZC,aAAc,MACdC,cAAe,KAGZC,EAAQC,IAAapB,EAAAA,EAAAA,UAAS,CACjCS,SAAS,EACTY,cAAc,KAGlBC,EAAAA,EAAAA,YAAU,KACF/B,GAAWA,KACfgC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADC,OAA4C,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASE,SAAQ,YAAAc,OAAkB,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASI,OAAM,iBAAAY,OAAuB,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASK,YAAW,gBAAAW,OAAsB,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASO,WAAU,mBAAAS,OAAyB,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASS,iBACzLQ,MAAKC,IACAA,EAAKC,SACL7B,EAAqB,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAC3B,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,KAAIG,SAAQ,KAChCzC,GAAYA,GAAY,GAC9B,GAEH,CACCiB,EAAQE,SACD,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASI,OACF,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,YACF,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASO,WACF,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASS,iBAGbI,EAAAA,EAAAA,YAAU,MAENC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,+BACTE,MAAKC,IACAA,EAAKC,SACL1B,EAAayB,EAAKA,KACtB,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,MAE5BP,EAAAA,EAAAA,GAAU,CACNC,QAAQ,oCAADC,OAA6C,OAAPhC,QAAO,IAAPA,OAAO,EAAPA,EAASyC,cACvDR,MAAKC,IACAA,EAAKC,SACLxB,EAASuB,EAAKA,KAClB,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAEhC,IAEH,MAAMK,EAA0BC,IAA0C,IAAzC,KAAEC,EAAO,GAAE,gBAAEC,EAAkB,CAAC,GAAGF,EAChE7B,EAAI8B,EAAM,CAAEE,MAAOD,GAAkB,EAGnCE,EAAsB,CACxB,CACIC,WAAY,YACZC,aAAc,WACdC,UAAW,SACXC,UAAW,GAEf,CACIH,WAAY,cACZC,aAAc,OACdC,UAAW,OACXC,UAAW,EACXC,MAAO,UAEX,CACIJ,WAAY,gBACZC,aAAc,QACdC,UAAW,SACXC,UAAW,GAEf,CACIH,WAAY,mBACZC,aAAc,aACdC,UAAW,SACXC,UAAW,EACXC,MAAO,UAEX,CACIJ,WAAY,YACZC,aAAc,MACdC,UAAW,SACXC,UAAW,EACXC,MAAO,UAEX,CACIJ,WAAY,sBACZC,aAAc,gBACdC,UAAW,SACXC,UAAW,EACXC,MAAO,UAgBX,CACIJ,WAAY,SACZG,UAAW,EACXE,cAAc,EACdC,KAAMC,IAAc,IAAb,IAAEC,GAAKD,EACV,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,aAAYH,UACvBC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACPC,QAASA,KACLnD,EAAa,CACTe,aAAc4B,EACdS,cAAkB,OAAHT,QAAG,IAAHA,GAAAA,EAAKU,cAAmB,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKU,cAAgB,IAC3D,EAENC,MAAM,UAAUC,KAAK,QAAOT,UAE5BC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,UAAU,eAI9BV,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,OAAMH,UACjBC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACPC,QAASA,KACLtB,EAAwB,CACpBE,KAAM,SACNC,gBAAiB,CACb0B,YAAaf,EACbgB,UAAc,OAAHhB,QAAG,IAAHA,OAAG,EAAHA,EAAKU,gBAEtB,EAENE,KAAK,QAAOT,UAEZC,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACH,UAAU,gBAIzB,IA4CbI,EAAcA,KAChB/C,EAAU,IACHD,EACHV,SAAS,EACTY,cAAc,GAChB,EAGN,OACI6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CACZC,UAAWvE,EACXwE,QAAS9B,EACTe,MAAM,oBAENgB,cAAc,EACdC,eAAgB,IAChBC,eAvDgBC,IAAc,IAAb,IAAEzB,GAAKyB,EAEhC,OACIrB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,KAAA,SAAOU,UAAU,QAAOX,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,YACpCC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAYX,SAAEH,EAAI0B,eAChCtB,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,kBACpCC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAYX,SAAK,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAK2B,qBACjCvB,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,eACpCC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAYX,SAAEH,EAAI4B,gBAEpC3B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,kBACpCF,EAAAA,EAAAA,MAAA,MAAIa,UAAU,aAAYX,SAAA,EACrB0B,EAAAA,EAAAA,IAAc7B,EAAI8B,cAAe,IAAM,aACvCD,EAAAA,EAAAA,IAAc7B,EAAI8B,cAAe,IAAM,gBAE5C1B,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,cACpCF,EAAAA,EAAAA,MAAA,MAAIa,UAAU,aAAYX,SAAA,EACrB0B,EAAAA,EAAAA,IAAc7B,EAAI+B,QAAS,IAAM,QACjCF,EAAAA,EAAAA,IAAc7B,EAAI+B,QAAS,IAAM,UAEtC3B,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,kBACpCC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAYX,SAAEH,EAAI2B,wBAEpC1B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,sBAAqBX,SAAC,eACpCC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,aAAakB,QAAS,EAAE7B,SAAEH,EAAIiC,qBAIzD,EAsBCC,YACIjC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,UAASH,UACpBC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACPK,KAAK,QACLE,UAAU,OACVN,QAASA,IAAMrC,EAAU,IAAKD,EAAQV,SAAS,IAAQ2C,UAEvDC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,SAGlB/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACHC,QAAQ,WACRC,WAAWlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,IACf/B,QAASA,IAAMtB,EAAwB,CAAEE,KAAM,WAAYe,SAE1D,aAOhBqC,OAAOC,KAAKrF,GAAWsF,OAAS,IAC7BtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAmB,CAChBvE,aAAuB,OAAThB,QAAS,IAATA,OAAS,EAATA,EAAWgB,aACzBqC,cAAwB,OAATrD,QAAS,IAATA,OAAS,EAATA,EAAWqD,cAC1BmC,UAAU,EACVC,YAAY,EACZC,aAAcA,IAAMzF,EAAa,CAAC,GAClC0F,UAAW,oBAKnB9C,EAAAA,EAAAA,MAAC+C,EAAAA,EAAM,CACHC,KAAM/E,EAAOV,QACb0F,QAAShC,EACTiC,WAAS,EAACC,SAAS,KAAIjD,SAAA,EAEvBC,EAAAA,EAAAA,KAACiD,EAAAA,EAAW,CAAAlD,SAAC,aACbC,EAAAA,EAAAA,KAACkD,EAAAA,EAAa,CAAAnD,UACVC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,wBAAuBX,UAClCC,EAAAA,EAAAA,KAAA,SAAOU,UAAU,QAAOX,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EAEIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAEC,cAAe,UAAWrD,SAAC,cACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHC,MAAO,CAAEA,MAAc,OAAPlG,QAAO,IAAPA,OAAO,EAAPA,EAASK,YAAa8F,MAAc,OAAPnG,QAAO,IAAPA,OAAO,EAAPA,EAASM,aACtD8F,SAAW/E,GAAMpB,EAAW,IAAKD,EAASK,YAAagB,EAAE6E,MAAO5F,YAAae,EAAE8E,QAC/EE,QAAS,CACL,CAAEH,MAAO,GAAIC,MAAO,UACjB3G,EAAU8G,KAAIC,IAAG,CAAOL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKlG,YAAa8F,MAAU,OAAHI,QAAG,IAAHA,OAAG,EAAHA,EAAKC,mBAEpEC,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,wBAKzBnE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAEC,cAAe,UAAWrD,SAAC,gBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHC,MAAO,CAAEA,MAAc,OAAPlG,QAAO,IAAPA,OAAO,EAAPA,EAASO,WAAY4F,MAAc,OAAPnG,QAAO,IAAPA,OAAO,EAAPA,EAASQ,cACrD4F,SAAW/E,GAAMpB,EAAW,IAAKD,EAASO,WAAYc,EAAE6E,MAAO1F,aAAca,EAAE8E,QAC/EE,QAAS,CACL,CAAEH,MAAO,GAAIC,MAAO,UACjBzG,EAAM4G,KAAIC,IAAG,CAAOL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKM,OAAQV,MAAU,OAAHI,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAE3DL,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,4BAKzBnE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAEC,cAAe,UAAWrD,SAAC,UACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACImE,KAAK,OACLb,MAAOlG,EAAQE,SACfkG,SAAU/E,GAAKpB,EAAW,IAAKD,EAASE,SAAUmB,EAAE2F,OAAOd,QAC3D5C,UAAU,mBAKtBb,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAEC,cAAe,UAAWrD,SAAC,QACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACImE,KAAK,OACLb,MAAOlG,EAAQI,OACfgG,SAAU/E,GAAKpB,EAAW,IAAKD,EAASI,OAAQiB,EAAE2F,OAAOd,QACzD5C,UAAU,mBAKtBb,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAImD,MAAO,CAAEC,cAAe,UAAWrD,SAAC,oBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,UACIsE,KAAK,OACLb,MAAOlG,EAAQS,cACf2F,SAAU/E,GAAKpB,EAAW,IAAKD,EAASS,cAAewG,OAAO5F,EAAE2F,OAAOd,SACvE5C,UAAU,WAAUX,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,UAAQsD,MAAO,EAAEvD,SAAC,UAClBC,EAAAA,EAAAA,KAAA,UAAQsD,MAAO,EAAEvD,SAAC,2BAS9CC,EAAAA,EAAAA,KAACsE,EAAAA,EAAa,CAAAvE,UACVC,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAAC5B,QAASU,EAAYf,SAAC,iBAIvC,C,6DCrWX,SAAewE,EAAAA,EAAAA,IAA4BvE,EAAAA,EAAAA,KAAK,OAAQ,CACtDwE,EAAG,sCACD,M,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BvE,EAAAA,EAAAA,KAAK,OAAQ,CACtDwE,EAAG,0GACD,Q,4DCFJ,SAAeD,EAAAA,EAAAA,IAA4BvE,EAAAA,EAAAA,KAAK,OAAQ,CACtDwE,EAAG,uIACD,O,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BvE,EAAAA,EAAAA,KAAK,OAAQ,CACtDwE,EAAG,kJACD,Y,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BvE,EAAAA,EAAAA,KAAK,OAAQ,CACtDwE,EAAG,mNACD,a","sources":["Pages/Purchase/purchaseInvoices.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { isEqualNumber, ISOString } from \"../../Components/functions\";\r\nimport InvoiceBillTemplate from \"../Sales/SalesReportComponent/newInvoiceTemplate\";\r\nimport { Add, Edit, FilterAlt, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PurchaseOrderList = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [purchaseOrder, setPurchaseOrder] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const nav = useNavigate();\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `purchase/purchaseOrder?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPurchaseOrder(data?.data)\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff()\r\n        })\r\n\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    const navigateToPageWithState = ({ page = '', stateToTransfer = {} }) => {\r\n        nav(page, { state: stateToTransfer });\r\n    }\r\n\r\n    const purchaseOrderColumn = [\r\n        {\r\n            Field_Name: 'Po_Inv_No',\r\n            ColumnHeader: 'Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Po_Inv_Date',\r\n            ColumnHeader: 'Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Party',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     ColumnHeader: 'Status',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => {\r\n        //         const convert = convertedStatus.find(status => status.id === Number(row?.isConverted));\r\n        //         return (\r\n        //             <span className={'py-0 fw-bold px-2 rounded-4 fa-12 ' + convert?.color ?? 'bg-secondary text-white'}>\r\n        //                 {convert?.label ?? 'Undefined'}\r\n        //             </span>\r\n        //         )\r\n        //     },\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    navigateToPageWithState({ \r\n                                        page: 'create',  \r\n                                        stateToTransfer: {\r\n                                            invoiceInfo: row,\r\n                                            orderInfo: row?.Products_List\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row?.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                dataArray={purchaseOrder}\r\n                columns={purchaseOrderColumn}\r\n                title=\"Purchase Invoices\"\r\n                // EnableSerialNumber={true}\r\n                isExpendable={true}\r\n                tableMaxHeight={550}\r\n                expandableComp={ExpendableComponent}\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"ms-2\"\r\n                                onClick={() => setDialog({ ...dialog, filters: true })}\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Button\r\n                            variant='outlined'\r\n                            startIcon={<Add />}\r\n                            onClick={() => navigateToPageWithState({ page: 'create' })}\r\n                        >\r\n                            {'Add'}\r\n                        </Button>\r\n                    </>\r\n                }\r\n            />\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Purchase Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrderList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["_ref","loadingOn","loadingOff","storage","JSON","parse","localStorage","getItem","purchaseOrder","setPurchaseOrder","useState","retailers","setRetailers","users","setUsers","viewOrder","setViewOrder","nav","useNavigate","filters","setFilters","Fromdate","ISOString","Todate","Retailer_Id","RetailerGet","Created_by","CreatedByGet","Cancel_status","dialog","setDialog","orderDetails","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","finally","Company_id","navigateToPageWithState","_ref2","page","stateToTransfer","state","purchaseOrderColumn","Field_Name","ColumnHeader","Fied_Data","isVisible","align","isCustomCell","Cell","_ref3","row","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","orderProducts","Products_List","color","size","Visibility","className","invoiceInfo","orderInfo","Edit","closeDialog","FilterableTable","dataArray","columns","isExpendable","tableMaxHeight","expandableComp","_ref4","Branch_Name","Sales_Person_Name","Round_off","isEqualNumber","GST_Inclusive","IS_IGST","colSpan","Narration","ButtonArea","FilterAlt","Button","variant","startIcon","Add","Object","keys","length","InvoiceBillTemplate","download","actionOpen","clearDetails","TitleText","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","style","verticalAlign","Select","value","label","onChange","options","map","obj","Retailer_Name","styles","customSelectStyles","isSearchable","placeholder","UserId","Name","type","target","Number","DialogActions","createSvgIcon","d"],"sourceRoot":""}