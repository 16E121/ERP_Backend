{"version":3,"file":"static/js/8808.165b1cfa.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Pages/Inventry/liveStockReport.jsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {''} [props.title]\r\n */\r\n\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = ''\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {title && <h6 className='fw-bold text-muted'>{title}</h6>}\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableMaxHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div className=\"p-2 pb-0\">\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.element,\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined\r\n};\r\n\r\n\r\nexport default FilterableTable;","import React, { useState, useEffect } from \"react\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { getPreviousDate, groupData, calcTotal, ISOString, isEqualNumber } from \"../../Components/functions\";\r\nimport FilterableTable from '../../Components/filterableTable2'\r\nimport { Card, CardContent, Autocomplete, TextField, Checkbox, Tooltip, IconButton, Button, Dialog, DialogContent, DialogActions, Tab, Box } from \"@mui/material\";\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff } from \"@mui/icons-material\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\n\r\nconst LiveStockReport = ({ loadingOn, loadingOff }) => {\r\n    const [reportData, setReportData] = useState([]);\r\n    const [groupedData, setGroupedData] = useState([]);\r\n    const [apiFilters, setAPIFilters] = useState({\r\n        Fromdata: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        view: 'Grouped'\r\n    });\r\n    const [filters, setFilters] = useState({});\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filteredData, setFilteredData] = useState(reportData);\r\n\r\n    const columns = [\r\n        { Field_Name: \"Stock_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Grade_Item_Group\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"Group_Name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"stock_item_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        { Field_Name: \"godown_name\", Fied_Data: \"string\", isVisible: 1 },\r\n        ...(apiFilters.view === 'List' ? [\r\n            { Field_Name: \"Act_Bags\", Fied_Data: \"number\", ColumnHeader: 'Bags', isVisible: 1 },\r\n            { Field_Name: \"Bal_Act_Qty\", Fied_Data: \"number\", ColumnHeader: 'Balance Quantity', isVisible: 1 }\r\n        ] : [])\r\n    ];\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    useEffect(() => setFilters({}), [apiFilters.view])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...reportData];\r\n        for (const column of columns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name]?.toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(reportData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n        fetchLink({\r\n            address: `reports/liveStockReport?Fromdata=${apiFilters.Fromdata}&Todate=${apiFilters.Todate}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReportData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        })\r\n    }, [apiFilters.Fromdata, apiFilters.Todate])\r\n\r\n    useEffect(() => {\r\n        const runLoading = async () => {\r\n            try {\r\n                const dataToUse = (Object.keys(filters).length > 0) ? filteredData : reportData;\r\n\r\n                if (loadingOn) {\r\n                    await loadingOn();\r\n                }\r\n\r\n                const grouped_Stock_Group = groupData(dataToUse, 'Stock_Group');\r\n                const aggregatedStockGroup = grouped_Stock_Group?.sort((a, b) => String(a.Stock_Group).localeCompare(b.Stock_Group ?? '')).map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    BagsTotal: calcTotal(stockGroup.groupedData, 'Act_Bags'),\r\n                    BalQtyTotal: calcTotal(stockGroup.groupedData, 'Bal_Act_Qty'),\r\n                }));\r\n\r\n                const Grade_Item_Group = aggregatedStockGroup?.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: groupData(stockGroup?.groupedData, 'Grade_Item_Group')\r\n                }));\r\n                const aggregatedGradeItemGroup = Grade_Item_Group.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        BagsTotal: calcTotal(gradeItemGroup.groupedData, 'Act_Bags'),\r\n                        BalQtyTotal: calcTotal(gradeItemGroup.groupedData, 'Bal_Act_Qty'),\r\n                    }))\r\n                }));\r\n\r\n                const GroupName = aggregatedGradeItemGroup.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: groupData(gradeItemGroup?.groupedData, 'Group_Name')\r\n                    }))\r\n                }));\r\n                const aggregatedGroupName = GroupName.map(stockGroup => ({\r\n                    ...stockGroup,\r\n                    groupedData: stockGroup.groupedData?.map(gradeItemGroup => ({\r\n                        ...gradeItemGroup,\r\n                        groupedData: gradeItemGroup?.groupedData?.map(grouopName => ({\r\n                            ...grouopName,\r\n                            BagsTotal: calcTotal(grouopName.groupedData, 'Act_Bags'),\r\n                            BalQtyTotal: calcTotal(grouopName.groupedData, 'Bal_Act_Qty'),\r\n                        }))\r\n                    }))\r\n                }));\r\n\r\n                // setGroupedData(aggregatedGroupName);\r\n                setTimeout(() => setGroupedData(aggregatedGroupName), 500);\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                if (loadingOff) {\r\n                    setTimeout(() => loadingOff(), 500);\r\n                }\r\n            }\r\n        }\r\n\r\n        runLoading();\r\n    }, [reportData, filters, filteredData])\r\n\r\n    const columnCells = (mainKey) => [\r\n        {\r\n            Field_Name: mainKey,\r\n            isVisible: 1,\r\n            Fied_Data: 'string',\r\n        },\r\n        {\r\n            Field_Name: 'BagsTotal',\r\n            ColumnHeader: 'Bags',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n        {\r\n            Field_Name: 'BalQtyTotal',\r\n            ColumnHeader: 'Balance Quantity',\r\n            isVisible: 1,\r\n            Fied_Data: 'number',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-1 d-flex justify-content-between align-items-center flex-wrap border-bottom\">\r\n                    <h5 className=\"ps-2 pt-2\">Live Stock Report</h5>\r\n                    <span>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Fromdata}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Fromdata: e.target.value }))}\r\n                        /> - TO -\r\n                        <input\r\n                            type=\"date\"\r\n                            value={apiFilters.Todate}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                            onChange={e => setAPIFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                        />\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton\r\n                                onClick={() => setDialog(true)}\r\n                                size=\"small\"\r\n                                className=\"d-md-none d-inline\"\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n\r\n                            <TabContext value={apiFilters.view}>\r\n                                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                    <TabList\r\n                                        indicatorColor='transparant'\r\n                                        onChange={(e, n) => setAPIFilters(pre => ({ ...pre, view: n }))}\r\n                                        variant=\"scrollable\"\r\n                                        scrollButtons=\"auto\"\r\n                                        allowScrollButtonsMobile\r\n                                    >\r\n                                        <Tab sx={apiFilters.view === 'Grouped' ? { backgroundColor: '#c6d7eb' } : {}} label=\"Grouped\" value='Grouped' />\r\n                                        <Tab sx={apiFilters.view === 'List' ? { backgroundColor: '#c6d7eb' } : {}} label=\"List\" value='List' />\r\n                                    </TabList>\r\n                                </Box>\r\n\r\n                                <TabPanel value={'Grouped'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={groupedData}\r\n                                        title=\"Stock Group\"\r\n                                        columns={columnCells('Stock_Group')}\r\n                                        isExpendable={true}\r\n                                        EnableSerialNumber\r\n                                        expandableComp={({ row }) => (\r\n                                            <FilterableTable\r\n                                                dataArray={row.groupedData}\r\n                                                title=\"Grade Item Group\"\r\n                                                columns={columnCells('Grade_Item_Group')}\r\n                                                isExpendable={true}\r\n                                                EnableSerialNumber\r\n                                                expandableComp={({ row }) => (\r\n                                                    <FilterableTable\r\n                                                        dataArray={row.groupedData}\r\n                                                        title=\"Group Name\"\r\n                                                        columns={columnCells('Group_Name')}\r\n                                                        isExpendable={true}\r\n                                                        EnableSerialNumber\r\n                                                        expandableComp={({ row }) => (\r\n                                                            <FilterableTable\r\n                                                                dataArray={row.groupedData}\r\n                                                                title=\"Stock Item Name\"\r\n                                                                columns={[\r\n                                                                    {\r\n                                                                        Field_Name: 'stock_item_name',\r\n                                                                        ColumnHeader: 'Stock Item Name',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bags',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'Bal_Act_Qty',\r\n                                                                        ColumnHeader: 'Balance Quantity',\r\n                                                                        Fied_Data: 'number',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                    {\r\n                                                                        Field_Name: 'godown_name',\r\n                                                                        ColumnHeader: 'Godown',\r\n                                                                        Fied_Data: 'string',\r\n                                                                        isVisible: 1,\r\n                                                                    },\r\n                                                                ]}\r\n                                                                EnableSerialNumber\r\n                                                                tableMaxHeight={2000}\r\n                                                                disablePagination={true}\r\n                                                            />\r\n                                                        )}\r\n                                                        tableMaxHeight={3000}\r\n                                                        disablePagination={true}\r\n\r\n                                                    />\r\n                                                )}\r\n                                                tableMaxHeight={4000}\r\n                                                disablePagination={true}\r\n                                            />\r\n                                        )}\r\n                                        tableMaxHeight={5000}\r\n                                        disablePagination={true}\r\n                                    />\r\n                                </TabPanel>\r\n\r\n                                <TabPanel value={'List'} sx={{ px: 0, py: 2 }} >\r\n                                    <FilterableTable\r\n                                        dataArray={(Object.keys(filters).length > 0) ? filteredData : reportData}\r\n                                        columns={columns}\r\n                                    />\r\n                                </TabPanel>\r\n                            </TabContext>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                            <h5 className=\"d-flex justify-content-between px-2\">\r\n                                <span>Filters</span>\r\n                                <span>\r\n                                    <Tooltip title='Clear Filters'>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setFilters({})}\r\n                                        >\r\n                                            <FilterAltOff />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </h5>\r\n                            <div className=\"border rounded-3 \">\r\n                                {columns.map((column, ke) => (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                ))}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        <span>Filters</span>\r\n                        <span>\r\n                            <Tooltip title='Clear Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setFilters({})}\r\n                                >\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" >\r\n                        {columns.map((column, ke) => (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setDialog(false)} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveStockReport;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["FilterableTable","_ref","dataArray","columns","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","columnAlign","type","class","sortedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","row","index","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","map","column","columnInd","_columnAlign$find2","isEqualNumber","Defult_Display","isVisible","Boolean","isCustomCell","Cell","align","find","String","toLowerCase","Field_Name","Object","entries","_ref3","_columnAlign$find","key","value","console","log","Fied_Data","colSpan","Number","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","ColumnHeader","replace","concat","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","undefined","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","loadingOn","loadingOff","reportData","setReportData","groupedData","setGroupedData","apiFilters","setAPIFilters","Fromdata","getPreviousDate","Todate","ISOString","view","filters","setFilters","dialog","setDialog","filteredData","setFilteredData","useEffect","applyFilters","handleFilterChange","prevFilters","filtered","min","max","filter","item","start","end","dateValue","Date","isArray","_filters$column$Field","_item$column$Field_Na","includes","trim","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","placeholder","onChange","e","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","fetchLink","address","then","success","catch","error","finally","async","dataToUse","keys","grouped_Stock_Group","groupData","aggregatedStockGroup","_b$Stock_Group","Stock_Group","localeCompare","stockGroup","BagsTotal","calcTotal","BalQtyTotal","aggregatedGradeItemGroup","_stockGroup$groupedDa","gradeItemGroup","aggregatedGroupName","_stockGroup$groupedDa2","_stockGroup$groupedDa3","_gradeItemGroup$group","grouopName","setTimeout","runLoading","columnCells","mainKey","_Fragment","Card","Tooltip","FilterAlt","CardContent","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","variant","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","_ref4","_ref5","FilterAltOff","Dialog","onClose","maxWidth","fullWidth","DialogContent","DialogActions","Button","color","createSvgIcon","d","Context","React","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","name","overridesResolver","styles","root","theme","padding","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate","getCardContentUtilityClass","CardContentRoot","paddingBottom","useDefaultProps","as","getCardUtilityClass","CardRoot","overflow","raised","elevation"],"sourceRoot":""}