{"version":3,"file":"static/js/5232.ec4c7ec4.chunk.js","mappings":"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","sources":["Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx"],"sourcesContent":["import { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\nimport { fetchLink } from './fetchComponent';\n\nconst formatString = (val, dataType) => {\n    switch (dataType) {\n        case 'number':\n            return NumberFormat(val)\n        case 'date':\n            return LocalDate(val);\n        case 'string':\n            return val;\n        default:\n            return ''\n    }\n}\n\nconst getFun = (dataType) => {\n    switch (dataType) {\n        case 'number':\n            return {\n                filterVariant: 'range',\n                filterFn: 'between',\n            }\n        case 'date':\n            return {\n                filterVariant: 'text',\n            };\n        case 'string':\n            // const distinctValues = [];\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\n            //     : null\n            // )\n            return {\n                filterVariant: 'text',\n            }\n\n        default:\n            return {}\n    }\n}\n\nconst csvConfig = mkConfig({\n    fieldSeparator: ',',\n    decimalSeparator: '.',\n    useKeysAsHeaders: true,\n});\n\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\n\nconst DynamicMuiTable = ({ reportId, company, queryFilters }) => {\n    const [dispColmn, setDispColmn] = useState([]);\n    const [dataArray, setDataArray] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [filters, setFilters] = useState({});\n    const [filteredData, setFilteredData] = useState(dataArray);\n    const filterCount = Object.keys(filters).length;\n    const showData = (filterCount > 0) ? filteredData : dataArray;\n    const [aggregationValues, setAggregationValues] = useState({});\n    const [dialogs, setDialogs] = useState({\n        filters: false,\n        aggregations: false\n    })\n\n    useEffect(() => {\n        fetchLink({\n            address: `reports/template?ReportId=${reportId}`\n        }).then(data => {\n            if (data?.success) {\n                if (data.data[0]) {\n                    const o = data.data[0];\n                    const strucre = {\n                        Report_Type_Id: o?.Report_Type_Id,\n                        reportName: o?.Report_Name,\n                        tables: o?.tablesList?.map(table => ({\n                            Table_Id: table?.Table_Id,\n                            Table_Name: table?.Table_Name,\n                            AliasName: table?.AliasName,\n                            Table_Accronym: table?.Table_Accronym,\n                            isChecked: true,\n                            columns: table?.columnsList?.map(column => ({\n                                Column_Data_Type: column?.Column_Data_Type,\n                                Column_Name: column?.Column_Name,\n                                IS_Default: column?.IS_Default,\n                                IS_Join_Key: column?.IS_Join_Key,\n                                Order_By: column?.Order_By,\n                                Table_Id: column?.Table_Id,\n                                isVisible: true,\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\n                            }))\n                        }))\n                    }\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\n                        return colArr.concat(table.columns);\n                    }, []);\n                    setColumns(allColumns);\n                }\n            }\n        }).catch(e => console.log(e))\n            \n    }, [reportId])\n\n    useEffect(() => {\n        if (reportId) {\n            fetchLink({\n                address: `reports/template/executeQuery`,\n                method: 'POST',\n                headers: {\n                    'Db': company,\n                },\n                bodyData: {\n                    filterReq: queryFilters,\n                    ReportID: reportId\n                }\n            }).then(data => {\n                if (data?.success) {\n                    setDataArray(data?.data);\n                }\n            }).catch(e => console.log(e))\n        }\n    }, [company, reportId])\n\n    useEffect(() => {\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\n\n        const muiColumns = displayColumns.filter(column =>\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\n        ).map(column => ({\n            header: column?.Column_Name?.replace(/_/g, ' '),\n            accessorKey: column?.accessColumnName,\n            sortable: true,\n            size: 150,\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\n            AggregatedCell: ({ cell }) => (\n                <div className='blue-text text-center float-end w-100'>\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\n                </div>\n            ),\n            Cell: ({ cell }) => (\n                <p className={`m-0 text-center fa-14 w-100`}>\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\n                </p>\n            ),\n            ...getFun(column?.Column_Data_Type),\n        }))\n\n        setDispColmn(muiColumns)\n    }, [columns, aggregationValues])\n\n    useEffect(() => {\n        applyFilters();\n    }, [filters]);\n\n    const handleExportRows = (rows) => {\n        const rowData = rows.map((row) => row.original);\n        const csv = generateCsv(csvConfig)(rowData);\n        download(csvConfig)(csv);\n    };\n\n    const handleExportData = () => {\n        const csv = generateCsv(csvConfig)(dataArray);\n        download(csvConfig)(csv);\n    };\n\n    const table = useMaterialReactTable({\n        columns: dispColmn,\n        data: showData || [],\n        enableColumnResizing: true,\n        enableGrouping: true,\n        enableStickyHeader: true,\n        enableStickyFooter: true,\n        enableColumnOrdering: true,\n        enableRowNumbers: false,\n        enableRowSelection: true,\n        initialState: {\n            density: 'compact',\n            pagination: { pageIndex: 0, pageSize: 100 },\n        },\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\n        muiTableProps: {\n            sx: {\n                caption: {\n                    captionSide: 'top',\n                },\n            },\n        },\n        muiTableHeadCellProps: {\n            sx: {\n                fontWeight: 'normal',\n            },\n            className: ' border text-center'\n        },\n        muiTableBodyCellProps: {\n            className: ' border-end text-center'\n        },\n        renderTopToolbarCustomActions: ({ table }) => (\n            <Box\n                sx={{\n                    display: 'flex',\n                    gap: '16px',\n                    padding: '8px',\n                    flexWrap: 'wrap',\n                }}\n            >\n                <Button\n                    onClick={handleExportData}\n                    startIcon={<FileDownload />}\n                >\n                    All Data\n                </Button>\n                <Button\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\n                    onClick={() =>\n                        handleExportRows(table.getPrePaginationRowModel().rows)\n                    }\n                    startIcon={<FileDownload />}\n                >\n                    All Rows\n                </Button>\n                <Button\n                    disabled={\n                        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()\n                    }\n                    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}\n                    startIcon={<FileDownload />}\n                >\n                    Selected Rows\n                </Button>\n                <Button\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\n                    startIcon={<SettingsOutlined />}\n                >\n                    Aggregation\n                </Button>\n                <Button\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\n                    className=\"d-md-none d-inline\"\n                    startIcon={<FilterAlt />}\n                >\n                    Filters\n                </Button>\n            </Box>\n        ),\n    })\n\n    const memoizedTableConfig = useMemo(() => {\n        return table;\n    }, [table, aggregationValues, showData]);\n\n    const handleFilterChange = (column, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [column]: value,\n        }));\n    };\n\n    const applyFilters = () => {\n        let filtered = [...dataArray];\n        for (const column of columns) {\n            if (filters[column.accessColumnName]) {\n                if (filters[column.accessColumnName].type === 'range') {\n                    const { min, max } = filters[column.accessColumnName];\n                    filtered = filtered.filter(item => {\n                        const value = item[column.accessColumnName];\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\n                    });\n                } else if (filters[column.accessColumnName].type === 'date') {\n                    const { start, end } = filters[column.accessColumnName].value;\n                    filtered = filtered.filter(item => {\n                        const dateValue = new Date(item[column.accessColumnName]);\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\n                    });\n                } else if (Array.isArray(filters[column.accessColumnName])) {\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\n                }\n            }\n        }\n        setFilteredData(filtered);\n    };\n\n    const renderFilter = (column) => {\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\n        if (Column_Data_Type === 'number') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Min\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.min ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                    <input\n                        placeholder=\"Max\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.max ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'date') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Start Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.value?.start ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\n                    />\n                    <input\n                        placeholder=\"End Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[accessColumnName]?.value?.end ?? ''}\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'string') {\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\n            return (\n                <Autocomplete\n                    multiple\n                    id={`${accessColumnName}-filter`}\n                    options={distinctValues}\n                    disableCloseOnSelect\n                    getOptionLabel={option => option}\n                    value={filters[accessColumnName] || []}\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    isOptionEqualToValue={(opt, val) => opt === val}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label={Column_Name?.replace(/_/g, ' ')}\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\n                        />\n                    )}\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <div className=\"row \">\n\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\n                    <div className=\"p-2\">\n                        <MaterialReactTable table={memoizedTableConfig} />\n                    </div>\n                </div>\n\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\n                    <h5 className=\"d-flex justify-content-between px-2\">\n                        Filters\n                        <Tooltip title='Clear Filters'>\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setFilters({})}\n                            >\n                                <FilterAltOff />\n                            </IconButton>\n                        </Tooltip>\n                    </h5>\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\n                                {renderFilter(column)}\n                            </div>\n                        ))}\n                        <br />\n                    </div>\n                </div>\n\n            </div>\n\n            <Dialog\n                open={dialogs.filters}\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\n                fullWidth maxWidth='sm'\n            >\n                <DialogTitle>\n                    <h5 className=\"d-flex justify-content-between px-2\">\n                        Filters\n                        <Tooltip title='Clear Filters'>\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setFilters({})}\n                            >\n                                <FilterAltOff />\n                            </IconButton>\n                        </Tooltip>\n                    </h5>\n                </DialogTitle>\n                <DialogContent>\n\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\n                                {renderFilter(column)}\n                            </div>\n                        ))}\n                        <br />\n                    </div>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={dialogs.aggregations}\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\n                fullWidth maxWidth='lg'\n            >\n                <DialogTitle>Aggregations</DialogTitle>\n                <DialogContent>\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\n                        {[...columns].filter(column => (\n                            isEqualNumber(column?.IS_Default, 0)\n                            && isEqualNumber(column?.IS_Join_Key, 0)\n                            && (column.Column_Data_Type === 'number'\n                                || column.Column_Data_Type === 'string')\n                        )).map((o, i) => (\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\n                                <select\n                                    className='cus-inpt'\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\n                                >\n                                    {\n                                        [\n                                            { label: 'Select Aggregation', value: '' },\n                                            { label: 'count', value: 'count' },\n                                            { label: 'extent', value: 'extent' },\n                                            { label: 'max', value: 'max' },\n                                            { label: 'min', value: 'min' },\n                                            { label: 'mean', value: 'mean' },\n                                            { label: 'median', value: 'median' },\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\n                                            { label: 'sum', value: 'sum' },\n                                            { label: 'unique', value: 'unique' },\n                                        ].map((o, i) => (\n                                            <option value={o.value} key={i}>{o.label}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                        ))}\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\n\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Button, Card, CardContent, Collapse, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper\n} from '@mui/material';\nimport { ArrowBackIosNewOutlined, Edit, ExpandLess, ExpandMore, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\nimport { MyContext } from '../../Components/context/contextProvider';\nimport { useNavigate } from 'react-router-dom'\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\nimport { toast } from 'react-toastify';\nimport { fetchLink } from '../../Components/fetchComponent';\n\n\n\nconst TabPanel = (props) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n};\n\nconst ReportTemplates = () => {\n    const storage = JSON.parse(localStorage.getItem('user'))\n    const [templates, setTemplates] = useState([]);\n    const variableState = {\n        search: '',\n        openFilterDialog: false,\n        filterTablesAndColumns: {},\n        deleteConfirmationDialog: false,\n        preFilterDialog: false,\n    }\n    const [localVariable, setLocalVariable] = useState(variableState);\n    const { contextObj } = useContext(MyContext);\n    const [filters, setFilters] = useState({})\n    const nav = useNavigate();\n    const [reload, setReload] = useState(false)\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n\n    useEffect(() => {\n        fetchLink({\n            address: `reports/template`,\n        }).then(data => {\n            if (data?.success) {\n                setTemplates(data?.data);\n            }\n        }).catch(e => console.log(e))\n    }, [reload])\n\n    const handleFilterChange = (column, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [column]: value,\n        }));\n    };\n\n    const renderFilter = (column) => {\n        const { Column_Name, Column_Data_Type } = column;\n        if (Column_Data_Type === 'number') {\n            return (\n                <div className='d-flex justify-content-between'>\n                    <input\n                        placeholder=\"Min\"\n                        type=\"number\"\n                        className=\"cus-inpt me-1\"\n                        value={filters[Column_Name]?.min ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'range',\n                            ...filters[Column_Name],\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\n                        })}\n                    />\n                    <input\n                        placeholder=\"Max\"\n                        type=\"number\"\n                        className=\"cus-inpt ms-1\"\n                        value={filters[Column_Name]?.max ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'range',\n                            ...filters[Column_Name],\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\n                        })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'date') {\n            return (\n                <div className='d-flex justify-content-between flex-wrap'>\n                    <input\n                        placeholder=\"Start Date\"\n                        type=\"date\"\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\n                        value={filters[Column_Name]?.value?.start ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'date',\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\n                        })}\n                    />\n                    <input\n                        placeholder=\"End Date\"\n                        type=\"date\"\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\n                        value={filters[Column_Name]?.value?.end ?? ''}\n                        onChange={(e) => handleFilterChange(Column_Name, {\n                            type: 'date',\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\n                        })}\n                    />\n                </div>\n            );\n        } else if (Column_Data_Type === 'string') {\n            return (\n                <input\n                    type=\"text\"\n                    placeholder='Search...'\n                    className='cus-inpt'\n                    value={filters[Column_Name]?.value ?? ''}\n                    onChange={e => handleFilterChange(Column_Name, {\n                        type: 'textCompare',\n                        value: String(e.target.value).toLowerCase() || ''\n                    })}\n                />\n            )\n        }\n    };\n\n    const ExpandableRow = ({ o, i }) => {\n        const [open, setOpen] = useState(false);\n        const [anchorEl, setAnchorEl] = useState(null);\n\n        const dataToForward = {\n            Report_Type_Id: o?.Report_Type_Id,\n            reportName: o?.Report_Name,\n            tables: o?.tablesList?.map(table => ({\n                Table_Id: table?.Table_Id,\n                Table_Name: table?.Table_Name,\n                AliasName: table?.AliasName,\n                Table_Accronym: table?.Table_Accronym,\n                isChecked: true,\n                columns: table?.columnsList?.map(column => ({\n                    Column_Data_Type: column?.Column_Data_Type,\n                    Column_Name: column?.Column_Name,\n                    IS_Default: column?.IS_Default,\n                    IS_Join_Key: column?.IS_Join_Key,\n                    Order_By: column?.Order_By,\n                    Table_Id: column?.Table_Id,\n                    isVisible: true\n                }))\n            }))\n        }\n\n        const popOverOpen = Boolean(anchorEl);\n        const id = popOverOpen ? o?.Report_Name : undefined;\n\n        const handleClick = (event) => {\n            setAnchorEl(event.currentTarget);\n        };\n\n        const handleClose = () => {\n            setAnchorEl(null);\n        };\n\n        return (\n            <>\n                <TableRow hover={true}>\n                    <TableCell className=\" fa-13 text-center vctr\">{i}</TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">{o?.Report_Name}</TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">{o?.tablesList?.length}</TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">\n                        {o?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0)}\n                    </TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">{o?.CreatedByGet}</TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">{o?.CreatedAt ? UTCDateWithTime(o?.CreatedAt) : ' - '}</TableCell >\n                    <TableCell className=\" fa-13 text-center vctr\">\n\n                        <IconButton aria-describedby={id} onClick={handleClick}>\n                            <List />\n                        </IconButton>\n\n                        <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\n                            {open ? <ExpandLess className='text-primary' /> : <ExpandMore />}\n                        </IconButton>\n\n                        <Popover\n                            id={id}\n                            open={popOverOpen}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                            }}\n                        >\n                            <MenuList>\n\n                                <MenuItem\n                                    onClick={!storage?.Company_id\n                                        ? () => toast.warn('Select Company!')\n                                        : () => {\n                                            setLocalVariable(pre => ({\n                                                ...pre,\n                                                filterTablesAndColumns: dataToForward,\n                                                openFilterDialog: true,\n                                            }));\n                                            setSelectedTab(0);\n                                            setFilters({})\n                                        }\n                                    }\n                                // disabled={!storage?.Company_id}\n                                >\n                                    <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\n                                    <ListItemText>OPEN</ListItemText>\n                                </MenuItem>\n\n                                <MenuItem\n                                    onClick={\n                                        !storage?.Company_id\n                                            ? () => toast.warn('Select Company!')\n                                            : () => {\n                                                setLocalVariable(pre => ({\n                                                    ...pre,\n                                                    filterTablesAndColumns: dataToForward,\n                                                    preFilterDialog: true,\n                                                }));\n                                                setFilters({});\n                                                setSelectedTab(0);\n                                            }\n                                    }\n                                >\n                                    <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\n                                    <ListItemText>FILTERS</ListItemText>\n                                </MenuItem>\n\n                                <MenuItem\n                                    onClick={() => nav('create', { state: { ReportState: dataToForward } })}\n                                >\n                                    <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\n                                    <ListItemText>EDIT</ListItemText>\n                                </MenuItem>\n\n                                <MenuItem\n                                    onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\n                                >\n                                    <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\n                                    <ListItemText>DELETE</ListItemText>\n                                </MenuItem>\n\n                            </MenuList>\n                        </Popover>\n\n                    </TableCell >\n                </TableRow >\n\n                <TableRow >\n                    <TableCell colSpan={7} className=\"p-0 border-0\">\n                        <Collapse in={open} timeout=\"auto\" className='py-3' unmountOnExit>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\n                                                <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\n                                            ))}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {o?.tablesList?.map((table, tableInd) => (\n                                            <React.Fragment key={tableInd}>\n                                                {table?.columnsList?.map((column, columnInd) => (\n                                                    <tr key={columnInd}>\n                                                        {columnInd === 0 && (\n                                                            <>\n                                                                <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\n                                                                <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\n                                                                    {table?.AliasName}\n                                                                </td>\n                                                            </>\n                                                        )}\n                                                        <td\n                                                            className={`\n                                                                border fa-13 vctr\n                                                                ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\n                                                                ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\n                                                                `}\n                                                        >\n                                                            {column?.Column_Name}\n                                                        </td>\n                                                        <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\n                                                        <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </Collapse>\n                    </TableCell >\n                </TableRow >\n            </>\n        );\n    }\n\n    const closeDialog = () => {\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\n    }\n\n    const closeDeleteConfirmationDialog = () => {\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\n    }\n\n    const closeFilterDialog = () => {\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\n        setFilters({})\n    }\n\n    const deleteTemplate = () => {\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\n        fetchLink({\n            address: `reports/template`,\n            method: 'DELETE',\n            bodyData: {\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\n            }\n        }).then(data => {\n            if (data?.success) {\n                toast.success(data.message)\n                setReload(pre => !pre)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.log(e))\n        .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\n    }\n\n    return (\n        <>\n\n            <Card>\n\n                <div className=\"p-3 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\n                    )}\n                </div>\n\n                <CardContent>\n                    {templates?.length > 0 && (\n                        <TableContainer component={Paper} sx={{ maxHeight: '72dvh' }}>\n\n                            <div className=\"d-flex justify-content-end mb-3\">\n                                <input\n                                    type=\"search\"\n                                    className='cus-inpt w-auto'\n                                    placeholder='Search Report Name'\n                                    value={localVariable?.search ?? ''}\n                                    onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\n                                />\n                            </div>\n\n                            <Table stickyHeader size=\"small\">\n\n                                <TableHead>\n                                    <TableRow>\n                                        {['SNo', 'Report Name', 'Tables', 'Columns', 'Created-By', 'Created-At', 'Action'].map((o, i) => (\n                                            <TableCell className=\"text-center py-2\" key={i} style={{ backgroundColor: '#EDF0F7' }}>{o}</TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {!localVariable?.search ? (\n                                        templates?.map((o, i) => (\n                                            <ExpandableRow o={o} i={i + 1} key={i} />\n                                        ))\n                                    ) : (\n                                        [...templates].filter(fil =>\n                                            String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\n                                        ).map((o, i) => <ExpandableRow o={o} i={i + 1} key={i} />)\n                                    )}\n                                </TableBody>\n\n                            </Table>\n                        </TableContainer>\n                    )}\n                </CardContent>\n            </Card>\n\n            <Dialog\n                open={localVariable?.openFilterDialog}\n                onClose={closeDialog}\n                fullScreen\n            >\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\n                    <span>\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\n                    </span>\n                    <span>\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\n                            <Close />\n                        </IconButton>\n                    </span>\n                </DialogTitle>\n                <DialogContent>\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\n                        <DynamicMuiTable reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id} company={storage?.Company_id} queryFilters={filters} />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeDialog}\n                        startIcon={<ArrowBackIosNewOutlined />}\n                    >\n                        Back\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={localVariable?.deleteConfirmationDialog}\n                onClose={closeDeleteConfirmationDialog}\n                fullWidth maxWidth='sm'\n            >\n                <DialogTitle>Confirmation</DialogTitle>\n                <DialogContent>\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeDeleteConfirmationDialog}\n                    >\n                        cancel\n                    </Button>\n                    <Button\n                        onClick={deleteTemplate}\n                        startIcon={<Delete />}\n                        variant='outlined'\n                        color='error'\n                    >\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={localVariable?.preFilterDialog}\n                onClose={closeFilterDialog}\n                fullWidth maxWidth='md'\n            >\n                <DialogTitle className='d-flex justify-content-between'>\n                    <span>\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\n                    </span>\n                    <span>\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\n                            <Close />\n                        </IconButton>\n                    </span>\n                </DialogTitle>\n                <DialogContent>\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\n                            <Tab label={table?.AliasName} key={i} />\n                        ))}\n                    </Tabs>\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\n                        <TabPanel value={selectedTab} index={i} key={i}>\n                            <div className=\"row\">\n                                {table?.columns?.map((column, ii) => (\n                                    !Boolean(Number(column?.IS_Default)) &&\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\n                                    (\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\n                                            {renderFilter(column)}\n                                        </div>\n                                    )\n                                ))}\n                            </div>\n                        </TabPanel>\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={closeFilterDialog}\n                    >\n                        cancel\n                    </Button>\n                    <Button\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\n                        startIcon={<Launch />}\n                        variant='contained'\n                    >\n                        Open report\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ReportTemplates"],"names":["formatString","val","dataType","NumberFormat","LocalDate","getFun","filterVariant","filterFn","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","icon","_jsx","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","_ref","reportId","company","queryFilters","dispColmn","setDispColmn","useState","dataArray","setDataArray","columns","setColumns","filters","setFilters","filteredData","setFilteredData","showData","Object","keys","length","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","useEffect","fetchLink","address","concat","then","data","success","_o$tablesList","_strucre$tables","o","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","map","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","column","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","isVisible","accessColumnName","allColumns","reduce","colArr","catch","e","console","log","method","headers","bodyData","filterReq","ReportID","muiColumns","sort","a","b","filter","Boolean","Number","_column$Column_Name","header","replace","accessorKey","sortable","size","aggregationFn","AggregatedCell","_ref2","cell","className","children","getValue","Cell","_ref3","applyFilters","handleExportRows","rows","rowData","row","original","csv","generateCsv","download","handleExportData","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","enableRowSelection","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","color","muiTableContainerProps","sx","maxHeight","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","_ref4","_jsxs","Box","display","gap","padding","flexWrap","Button","onClick","startIcon","FileDownload","disabled","getPrePaginationRowModel","getIsSomeRowsSelected","getIsAllRowsSelected","getSelectedRowModel","pre","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","value","prevFilters","filtered","type","min","max","item","undefined","start","end","dateValue","Date","Array","isArray","_filters$column$acces","includes","toLowerCase","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","target","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","Set","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","_ref5","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","_Fragment","MaterialReactTable","Tooltip","title","IconButton","FilterAltOff","overflow","ke","_column$Column_Name2","isEqualNumber","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","i","_o$Column_Name","_aggregationValues$o$","TabPanel","index","other","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","String","ExpandableRow","_o$tablesList2","_o$tablesList3","_o$tablesList4","setOpen","anchorEl","setAnchorEl","dataToForward","popOverOpen","TableRow","hover","TableCell","sum","_item$columnsList","CreatedByGet","CreatedAt","UTCDateWithTime","currentTarget","List","ExpandLess","ExpandMore","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Company_id","toast","warn","ListItemIcon","Visibility","ListItemText","state","ReportState","Edit","Delete","colSpan","Collapse","in","timeout","unmountOnExit","backgroundColor","tableInd","_table$columnsList2","React","columnInd","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Card","Add_Rights","variant","CardContent","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableBody","fil","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","error","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch"],"sourceRoot":""}