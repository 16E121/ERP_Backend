{"version":3,"file":"static/js/4668.e16719ef.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","Pages/Purchase/billFormat.jsx","Pages/Purchase/purchaseReportForCustomer.jsx","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/LaunchOutlined.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n */\r\n\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: ''\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableMaxHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            {(isExpendable === true && expandableComp) && (\r\n                                <TableCell\r\n                                    className='fa-13 fw-bold border-end border-top text-center'\r\n                                    style={{ backgroundColor: '#EDF0F7' }}\r\n                                >#</TableCell>\r\n                            )}\r\n\r\n                            {EnableSerialNumber === true && (\r\n                                <TableCell\r\n                                    className='fa-13 fw-bold border-end border-top text-center'\r\n                                    style={{ backgroundColor: '#EDF0F7' }}\r\n                                >SNo</TableCell>\r\n                            )}\r\n\r\n                            {columns.map((column, ke) => {\r\n                                return (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                                    (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            )}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={\r\n                                                sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                                    ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                                    : false\r\n                                            }\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={sortCriteria.some(criteria => criteria.columnId === column.Field_Name)}\r\n                                                direction={\r\n                                                    sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                                        ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                                        : 'asc'\r\n                                                }\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader ? column.ColumnHeader : column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${column.ColumnHeader ? 'fa-13 fw-bold border-end border-top' : ' p-0 '}` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            )}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader ? column.ColumnHeader : column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                )\r\n                            })}\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? dataArray : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div className=\"p-2 pb-0\">\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.element,\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false\r\n};\r\n\r\n\r\nexport default FilterableTable;","\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","import { numberToWords } from \"../../Components/functions\";\nimport { companyDetails } from \"../../Components/tablecolumn\";\n\n\nconst InvoiceBill = ({ companyInfo, invoieInfo, expencesInfo }) => {\n\n    const getTotal = (arr, colmn) => {\n        let count = 0;\n        arr.forEach(obj => {\n            count += Number(obj[colmn]);\n        })\n        return count\n    }\n\n    return (\n        <>\n\n            <div className=\"d-flex justify-content-between align-items-center \">\n\n                <div className=\"d-flex\">\n                    <img src={companyDetails[companyInfo?.Company_Id]?.logo} className=\"invoiceLogo\" alt=\"company_logo\" />\n\n                    <div className=\"\">\n                        <p className=\"mb-0 \">{companyInfo?.Company_Name}</p>\n                        <p className=\"mb-0 text-muted\">{companyInfo?.Company_address_1}</p>\n                        <p className=\"mb-0 text-muted fa-14\">{companyInfo?.Company_address_2}</p>\n                        {companyInfo?.Company_address_3 && <p className=\"mb-0 text-muted fa-14\">{companyInfo?.Company_address_3}</p>}\n                    </div>\n                </div>\n\n                <div className=\"table-responsive\">\n                    <table className=\"table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"p-1 border-0 fa-13\">GSTIN</td>\n                                <td className=\"p-1 border-0 fa-13 text-end\">{companyInfo?.Company_GSTIN}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"p-1 border-0 fa-13\">PHONE</td>\n                                <td className=\"p-1 border-0 fa-13 text-end\">{companyInfo?.Company_Mobile}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"p-1 border-0 fa-13\">FSSAI</td>\n                                <td className=\"p-1 border-0 fa-13 text-end\">{companyInfo?.fssai_no}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <p className=\"mb-0 fa-13 d-flex\">\n                        <span className=\"flex-grow-1 text-muted\"> </span>\n                        <span > </span>\n                    </p>\n                    <p className=\"mb-0 fa-13 d-flex\">\n                        <span className=\"flex-grow-1 text-muted\"></span>\n                        <span></span>\n                    </p>\n                    <p className=\"mb-0 fa-13 d-flex\">\n                        <span className=\"flex-grow-1 text-muted\"></span>\n                        <span></span>\n                    </p>\n                </div>\n\n            </div>\n\n            {/* to address */}\n            <table className=\"table mb-0 border\">\n                <tbody>\n                    <tr>\n                        <td className=\"border\">\n                            <p className=\"fa-13 mb-0\">To</p>\n                            <p className=\"fa-13 mb-0 ps-3 fw-bold\">{companyInfo?.Customer_name}</p>\n                            <p className=\"fa-13 mb-0 ps-3\">{companyInfo?.Customer_Mobile}</p>\n                            <p className=\"fa-13 mb-0 ps-3\">GSTIN: {companyInfo?.Customer_GSTIN}</p>\n                        </td>\n                        <td className=\"border\">\n                            <p className=\"mb-0 d-flex fa-13\">\n                                Date:\n                                <span className=\"flex-grow-1 ps-2 text-primary\">\n                                    {companyInfo?.invoice_date\n                                        ? new Date(companyInfo?.invoice_date).toLocaleDateString('en-IN', { day: '2-digit', month: '2-digit', year: '2-digit' })\n                                        : ''\n                                    }\n                                </span>\n                                <span>{companyInfo?.Bill_Type}</span>\n                            </p>\n                            <p className=\"fa-13 mb-0\">Bill No: {companyInfo?.invoice_no}</p>\n                            <p className=\"fa-13 mb-0 d-flex\">\n                                <span className=\"flex-grow-1\">Broker: {companyInfo?.Broker_Name}</span>\n                                <span>Transpoter: {companyInfo?.Transporter}</span>\n                            </p>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            {/* invoice items */}\n            <div className=\"table-responsive\">\n                <table className=\"table mb-0\">\n                    <thead>\n                        <tr>\n                            <th className=\"fa-13 border\">Sno</th>\n                            <th className=\"fa-13 border\">Items</th>\n                            <th className=\"fa-13 border\">HSN</th>\n                            <th className=\"fa-13 border\">GST</th>\n                            <th className=\"fa-13 border\">Qty</th>\n                            <th className=\"fa-13 border\">Rate</th>\n                            <th className=\"fa-13 border\">Bags</th>\n                            <th className=\"fa-13 border\">Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {invoieInfo?.map((o, i) => (\n                            <tr key={i}>\n                                <td className=\"fa-13 border\">{i + 1}</td>\n                                <td className=\"fa-13 border\">{o?.stock_item_name}</td>\n                                <td className=\"fa-13 border\">{o?.hsn_code}</td>\n                                <td className=\"fa-13 border\">{Number(o?.igst) ? o?.igst : Number(o?.cgst) + Number(o.sgst)}</td>\n                                <td className=\"fa-13 border\">{Number(o?.bill_qty).toLocaleString('en-IN')}</td>\n                                <td className=\"fa-13 border\">{(o?.amount / o?.bill_qty).toLocaleString('en-IN')}</td>\n                                <td className=\"fa-13 border\">{Number(o?.bags ? o?.bags : o?.bill_alt_qty).toLocaleString('en-IN')}</td>\n                                <td className=\"fa-13 border\">{Number(o?.amount).toLocaleString('en-IN')}</td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <td className=\"fa-13 border\" colSpan={4}>\n                                <span className=\"fw-bold\">BANK: </span>\n                                {companyInfo?.bank_name}\n                            </td>\n                            <td className=\"fa-13 border\">{getTotal(invoieInfo, 'bill_qty').toLocaleString('en-IN')}</td>\n                            <td className=\"fa-13 border\"></td>\n                            <td className=\"fa-13 border\">{getTotal(invoieInfo, 'bill_alt_qty').toLocaleString('en-IN')}</td>\n                            <td className=\"fa-13 border\">{getTotal(invoieInfo, 'amount').toLocaleString('en-IN')}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"fa-13 border fw-bold\" colSpan={6}>{numberToWords(companyInfo?.total_invoice_value)} Only</td>\n                            <td className=\"fa-13 border\" colSpan={2}>\n                                {expencesInfo.map((o, i) => (\n                                    <p className=\"d-flex mb-0\" key={i}>\n                                        <span className=\"flex-grow-1\">{o?.ledger_name}</span>\n                                        <span>{Number(o?.amount_value_DR || o?.amount_value_CR).toLocaleString('en-IN')}</span>\n                                    </p>\n                                ))}\n                                <p className=\"d-flex mb-0\">\n                                    <span className=\"flex-grow-1\">Net:</span>\n                                    <span className=\"fa-18\">{Number(companyInfo?.total_invoice_value).toLocaleString('en-IN')}</span>\n                                </p>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            {/* tax info */}\n            <div className=\"table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th className=\"border fa-13 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</th>\n                            <th className=\"border fa-13 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</th>\n                            <th className=\"border fa-13 text-center\" colSpan={2}>Central Tax</th>\n                            <th className=\"border fa-13 text-center\" colSpan={2}>State Tax</th>\n                            <th className=\"border fa-13 text-center\">Total</th>\n                        </tr>\n                        <tr>\n                            <th className=\"border fa-13 text-center\">Rate</th>\n                            <th className=\"border fa-13 text-center\">Amount</th>\n                            <th className=\"border fa-13 text-center\">Rate</th>\n                            <th className=\"border fa-13 text-center\">Amount</th>\n                            <th className=\"border fa-13 text-center\">Tax Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {invoieInfo.map((o, i) => (\n                            <tr key={i}>\n                                <td className=\"border fa-13 text-end\">{o?.hsn_code}</td>\n                                <td className=\"border fa-13 text-end\">{Number(o?.amount).toLocaleString('en-IN')}</td>\n                                <td className=\"border fa-13 text-end\">{o?.cgst}</td>\n                                <td className=\"border fa-13 text-end\">{(o?.cgst ? (o?.amount / 100) * o?.cgst : 0).toLocaleString('en-IN', { maximumFractionDigits: 2 })}</td>\n                                <td className=\"border fa-13 text-end\">{o?.sgst}</td>\n                                <td className=\"border fa-13 text-end\">{(o?.sgst ? (o?.amount / 100) * o?.sgst : 0).toLocaleString('en-IN', { maximumFractionDigits: 2 })}</td>\n                                <td className=\"border fa-13 text-end\">\n                                    {(Number((o?.cgst ? (o?.amount / 100) * o?.cgst : 0) + (o?.sgst ? (o?.amount / 100) * o?.sgst : 0))).toLocaleString('en-IN', { maximumFractionDigits: 2 })}\n                                </td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <td className=\"border fa-13 text-end\">Total</td>\n                            <td className=\"border fa-13 text-end\">{getTotal(invoieInfo, 'amount').toLocaleString('en-IN')}</td>\n                            <td className=\"border fa-13 text-end\"></td>\n                            <td className=\"border fa-13 text-end\">\n                                {(() => {\n                                    let total = 0;\n                                    invoieInfo.forEach(o => {\n                                        total += o?.cgst ? (o?.amount / 100) * o?.cgst : 0\n                                    });\n                                    return total.toLocaleString('en-IN', { maximumFractionDigits: 2 });\n                                })()}\n                            </td>\n                            <td className=\"border fa-13 text-end\"></td>\n                            <td className=\"border fa-13 text-end\">\n                                {(() => {\n                                    let total = 0;\n                                    invoieInfo.forEach(o => {\n                                        total += o?.sgst ? (o?.amount / 100) * o?.sgst : 0\n                                    });\n                                    return total.toLocaleString('en-IN', { maximumFractionDigits: 2 });\n                                })()}\n                            </td>\n                            <td className=\"border fa-13 text-end\">\n                                {(() => {\n                                    let totalCGST = 0;\n                                    let totalSGST = 0;\n                                    invoieInfo.forEach(o => {\n                                        totalCGST += o?.cgst ? (o?.amount / 100) * o?.cgst : 0;\n                                        totalSGST += o?.sgst ? (o?.amount / 100) * o?.sgst : 0;\n                                    });\n                                    const totalCombined = totalCGST + totalSGST;\n                                    return totalCombined.toLocaleString('en-IN', { maximumFractionDigits: 2 });\n                                })()}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n\nexport default InvoiceBill;","import { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Button } from \"@mui/material\";\nimport { useReactToPrint } from 'react-to-print';\nimport { useEffect, useRef, useState } from \"react\";\nimport { Close, LaunchOutlined, Visibility } from '@mui/icons-material';\nimport InvoiceBill from \"./billFormat\";\nimport { NumberFormat } from \"../../Components/functions\";\nimport { fetchLink } from \"../../Components/fetchComponent\";\nimport FilterableTable from \"../../Components/filterableTable2\";\n\nconst PurchaseReportForCustomer = () => {\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\n    const [sales, setSales] = useState([]);\n    const [salesInfo, setSalesInfo] = useState([]);\n    const [total, setTotal] = useState(0)\n    const [dialog, setDialog] = useState({\n        salesInfoDialog: false,\n        billDialog: false\n    });\n    const [companyInfo, setCompanyInfo] = useState({});\n    const [invoieInfo, setInvoiceInfo] = useState([]);\n    const [expencesInfo, setExpencesInfo] = useState([]);\n    const printRef = useRef()\n\n    useEffect(() => {\n        fetchLink({\n            address: `userModule/customer/customerSalesReport?UserId=${storage?.UserId}`,\n        }).then(data => {\n            if (data.success) {\n                setSales(data.data)\n                let temp = 0;\n                data.data.forEach(obj => {\n                    temp += Number(obj?.Total_Amount)\n                    console.log(obj?.Total_Amount)\n                })\n                setTotal(temp)\n            }\n        }).catch(e => console.error(e));\n\n    }, [])\n\n    const getSalesDetials = (obj) => {\n        setSalesInfo([]);\n        fetchLink({\n            address: `userModule/customer/salesInfo?Cust_Id=${obj?.Cust_Id}&Acc_Id=${obj?.tally_id}&Company_Id=${obj?.Company_Id}`\n        }).then(data => {\n            if (data.success) {\n                setSalesInfo(data.data);\n                setDialog(pre => ({ ...pre, salesInfoDialog: true }))\n            }\n        }).catch(e => console.log(e))\n    }\n\n    const fetchInvoiceDetails = (CompanyId, Invoice_No) => {\n        setCompanyInfo({});\n        setInvoiceInfo([]);\n        setExpencesInfo([]);\n        if (CompanyId && Invoice_No) {\n            fetchLink({\n                address: `userModule/customer/invoiceDetails?Company_Id=${CompanyId}&UserId=${storage?.UserId}&Invoice_No=${Invoice_No}`\n            }).then(data => {\n                if (data.success) {\n                    if (data?.data[0]?.length) {\n                        const company = data.data[0]\n                        setCompanyInfo(company[0])\n                    }\n                    if (data?.data[1]?.length) {\n                        setInvoiceInfo(data?.data[1]);\n                    }\n                    if (data?.data[2].length) {\n                        setExpencesInfo(data?.data[2])\n                    }\n                    setDialog(pre => ({ ...pre, billDialog: true }));\n                }\n            }).catch(e => console.log(e))\n        }\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => printRef.current,\n    });\n\n    return (\n        <>\n            <div className=\"card\">\n                <div className=\"card-header py-3 bg-white\" >\n                    <p className=\"mb-0 fw-bold\" >\n                        <span>Balance of {storage?.Name}</span>\n                        <span className={total > 0 ? 'text-primary' : 'text-danger'}> &nbsp;( {NumberFormat(total)} {(total < 0 ? ' CR' : ' DR')} )</span>\n                    </p>\n                </div>\n                <div className=\"card-body p-0 table-responsive\" style={{ maxHeight: '80vh' }}>\n                    <table className=\"table\" >\n                        <thead>\n                            <tr>\n                                {['S.No', '-', 'Company', 'Ledger', 'Balance', 'Dr/Cr'].map((o, i) => (\n                                    <th className=\"tble-hed-stick fa-13\" key={i}>{o}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody >\n                            {sales.map((o, i) => (\n                                <tr key={i}>\n                                    <td style={{ fontSize: '13px' }}>{i + 1}</td>\n                                    <td style={{ fontSize: '13px' }}>\n                                        <button\n                                            className=\"icon-btn\"\n                                            onClick={() => { getSalesDetials(o) }}>\n                                            <LaunchOutlined sx={{ fontSize: 'inherit' }} />\n                                        </button>\n                                    </td>\n                                    <td style={{ fontSize: '13px' }}>{o?.Company_Name}</td>\n                                    <td style={{ fontSize: '13px' }}>{o?.ledger_name}</td>\n                                    <td style={{ fontSize: '13px' }}>{NumberFormat(o?.Total_Amount)}</td>\n                                    <td style={{ fontSize: '13px' }}>{o?.Total_Count}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <Dialog\n                fullScreen\n                open={dialog.salesInfoDialog}\n                onClose={() => setDialog(pre => ({ ...pre, salesInfoDialog: false }))}>\n                <DialogTitle className=\"d-flex\">\n                    Sales List Of\n                    <span className=\"text-primary flex-grow-1\"> {salesInfo[0]?.Customer_name}</span>\n                    <IconButton size=\"small\" color='error' onClick={() => setDialog(pre => ({ ...pre, salesInfoDialog: false }))}>\n                        <Close />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent> \n                    <FilterableTable\n                        dataArray={salesInfo}\n                        columns={[\n                            {\n                                Field_Name: 'invoice_date',\n                                isVisible: 1,\n                                Fied_Data: 'date',\n                            },\n                            {\n                                Field_Name: 'invoice_no',\n                                isVisible: 1,\n                                Fied_Data: 'string',\n                            },\n                            {\n                                Field_Name: 'total_invoice_value',\n                                isVisible: 1,\n                                Fied_Data: 'number',\n                            },\n                            {\n                                Field_Name: 'View_Bill',\n                                isVisible: 1,\n                                isCustomCell: true,\n                                Cell: ({ row }) => (\n                                    <IconButton onClick={() => fetchInvoiceDetails(row?.Company_Id, row?.invoice_no)} size=\"small\">\n                                        <Visibility />\n                                    </IconButton>\n                                )\n                            },\n                        ]}\n                        EnableSerialNumber={true}\n                        tableMaxHeight={720}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button color='error' variant='outlined' onClick={() => setDialog(pre => ({ ...pre, salesInfoDialog: false }))}>close</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={dialog.billDialog}\n                onClose={() => setDialog(pre => ({ ...pre, billDialog: false }))}\n                fullWidth maxWidth='lg'\n            >\n                <DialogTitle className=\"border-bottom text-primary d-flex align-items-center fa-18\">\n                    <span className=\"flex-grow-1\">Invoice Details</span>\n                    <Button\n                        className=\"fw-bold\"\n                        onClick={handlePrint}>\n                        PDF\n                    </Button>\n                    <IconButton size=\"small\" className=\"bg-light\" onClick={() => setDialog(pre => ({ ...pre, billDialog: false }))}>\n                        <Close />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent className=\"p-0\" ref={printRef}>\n                    <InvoiceBill invoieInfo={invoieInfo} companyInfo={companyInfo} expencesInfo={expencesInfo} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n\nexport default PurchaseReportForCustomer;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'LaunchOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["FilterableTable","_ref","dataArray","columns","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","columnAlign","type","class","sortedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","row","index","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","map","column","columnInd","_columnAlign$find2","isEqualNumber","Defult_Display","isVisible","Boolean","isCustomCell","Cell","align","find","String","toLowerCase","Field_Name","Object","entries","_ref3","_columnAlign$find","key","value","console","log","Fied_Data","colSpan","Number","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","concat","ColumnHeader","replace","sortDirection","some","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","width","rows","headCells","color","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","_companyDetails$compa","companyInfo","invoieInfo","expencesInfo","getTotal","arr","colmn","forEach","obj","_Fragment","src","Company_Id","alt","Company_Name","Company_address_1","Company_address_2","Company_address_3","Company_GSTIN","Company_Mobile","fssai_no","Customer_name","Customer_Mobile","Customer_GSTIN","invoice_date","Date","toLocaleDateString","day","month","year","Bill_Type","invoice_no","Broker_Name","Transporter","o","i","stock_item_name","hsn_code","igst","cgst","sgst","bill_qty","toLocaleString","amount","bags","bill_alt_qty","bank_name","numberToWords","total_invoice_value","ledger_name","amount_value_DR","amount_value_CR","rowSpan","verticalAlign","maximumFractionDigits","total","totalCGST","totalSGST","PurchaseReportForCustomer","_salesInfo$","storage","JSON","parse","localStorage","getItem","sales","setSales","salesInfo","setSalesInfo","setTotal","dialog","setDialog","salesInfoDialog","billDialog","setCompanyInfo","setInvoiceInfo","setExpencesInfo","printRef","useRef","useEffect","fetchLink","UserId","then","success","temp","Total_Amount","catch","e","error","handlePrint","useReactToPrint","content","current","Name","Cust_Id","tally_id","LaunchOutlined","Total_Count","Dialog","fullScreen","onClose","DialogTitle","Close","DialogContent","fetchInvoiceDetails","CompanyId","Invoice_No","_data$data$","_data$data$2","company","Visibility","DialogActions","Button","fullWidth","maxWidth","ref","InvoiceBill","createSvgIcon","d"],"sourceRoot":""}