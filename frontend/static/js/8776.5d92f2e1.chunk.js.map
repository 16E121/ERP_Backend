{"version":3,"file":"static/js/8776.5d92f2e1.chunk.js","mappings":"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","sources":["Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx","Pages/Sales/SalesReportComponent/SalesDeliveryConvert.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({ editValues, loadingOn, loadingOff, reload, switchScreen, editOn }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: 0,\r\n        Payment_Ref_No: '',\r\n        Delivery_Person_Name:'',\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const [deliveryPerson, setDeliveryPerson] = useState(null);\r\n    const [deliveryPersonList, setDeliveryPersonList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails(pre => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                console.error(error)\r\n                toast.warn('Unable to fetch location. Allow location access.');\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(), \r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Delivery_Person_Id: editValues?.Delivery_Person_Id,\r\n                Delivery_Person_Name:editValues?.Delivery_Person_Name,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n              \r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n             \r\n            } else {\r\n                setProducts([]);\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDeliveryPersonList(data.data);  \r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: (isEdit && !editOn) ? 'PUT' : 'POST',\r\n\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0)),\r\n                    Delivery_Person_Id: deliveryPerson ? deliveryPerson.UserId : Number(orderDetails?.Delivery_Person_Id),\r\n                    Payment_Status: (orderDetails?.Payment_Status) ? Number(orderDetails?.Payment_Status) : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: (orderDetails?.Delivery_Status) ? Number(orderDetails?.Delivery_Status) : 1,\r\n                    Payment_Mode: (orderDetails?.Payment_Mode) ? Number(orderDetails?.Payment_Mode) : 1\r\n                }\r\n\r\n            }).then(data => {\r\n\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                    reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error('Select Retailer')\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((o, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty);\r\n        const Amount = Multiplication(billQty, itemRate);\r\n\r\n        if (isInclusive || isNotTaxableBill) {\r\n            return o += Amount;\r\n        }\r\n\r\n        if (isExclusiveBill) {\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n            const tax = taxCalc(0, itemRate, gstPercentage)\r\n            return o += (Amount + (tax * billQty));\r\n        }\r\n    }, 0);\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    const handleDeliveryPersonChange = (selectedOption) => {\r\n\r\n        setDeliveryPerson(selectedOption ? { UserId: selectedOption.value, Name: selectedOption.label } : null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">Create Delivery Order</h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.Do_Date ? ISOString(orderDetails?.Do_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Do_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Delivery_Status: e.target.value })}\r\n                                                value={orderDetails.Delivery_Status ? orderDetails.Delivery_Status : 1}\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Mode: e.target.value })}\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n\r\n\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Status: Number(e.target.value) })}\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery Person Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={\r\n                                                    deliveryPerson\r\n                                                        ? { value: deliveryPerson.UserId, label: deliveryPerson.Name }\r\n                                                        : { value: orderDetails?.Delivery_Person_Id, label: orderDetails?.Delivery_Person_Name }\r\n                                                }\r\n                                                onChange={handleDeliveryPersonChange}\r\n                                                options={[\r\n                                                    { value: '', label: 'Select', isDisabled: true },\r\n                                                    ...deliveryPersonList.map((obj) => ({\r\n                                                        value: obj.UserId,\r\n                                                        label: obj.Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\r\n                                                    deliveryPerson\r\n                                                        ? deliveryPerson.Name\r\n                                                        : 'Sales Person Name'\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Ref_No: e.target.value })}\r\n                                                value={orderDetails?.Payment_Ref_No}  // Default to empty string if no value available\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(\r\n                                            Total_Invoice_value - (\r\n                                                totalValueBeforeTax.TotalValue + totalValueBeforeTax.TotalTax\r\n                                            )\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewDeliveryOrder;","\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions, Switch } from \"@mui/material\";\r\n// import '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { getPreviousDate, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Edit, FilterAlt,Delete } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\n// import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nconst DeliveryDetailsList = ({ loadingOn, loadingOff, onToggle,reload }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    \r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n   const [itemTodelete,setItemToDelete]=useState({})\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] = useState(false)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Delivery_Person_Id: '',\r\n        Delivery_Person_Name: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n       \r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Delivery_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n    const openDeleteDialog = (itemData) => {\r\n      \r\n        setItemToDelete({\r\n            So_No: itemData.So_No,\r\n            Do_Id: itemData.Do_Id\r\n        });\r\n        setDeleteConfirm(true);\r\n    };\r\n    \r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'Do_Id',\r\n            ColumnHeader: 'Delivery ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_No',\r\n            ColumnHeader: 'Sale Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'SalesDate',\r\n            ColumnHeader: 'Sale Order Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Do_Date',\r\n            ColumnHeader: 'Delivery Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'DeliveryStatusName',\r\n            ColumnHeader: 'Delivery Status ',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'DeliveryStatusName',\r\n        //     // ColumnHeader: 'DeliveryStatusName',\r\n        //     isVisible: 1,\r\n        //     Field_Data:'String',\r\n        //     align: 'center',\r\n        //     // isCustomCell: true,\r\n         \r\n        // },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                      \r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Delete'>\r\n                            <IconButton\r\n                               onClick={()=>openDeleteDialog(row)}\r\n                            \r\n                                size=\"small\"\r\n                            >\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                            <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n   \r\n      \r\n        setDeleteConfirm(false)  \r\n      }\r\n\r\n        const confirmData = async () => {\r\n       \r\n            if (!itemTodelete) return;\r\n            fetchLink({\r\n                address: 'delivery/deliveryOrder',\r\n                method: 'DELETE',\r\n                bodyData: ({ Order_Id: itemTodelete.So_No, Do_Id: itemTodelete.Do_Id })\r\n\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                   reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n            setDeleteConfirm(false) \r\n        \r\n        };\r\n        \r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Delivery Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Delivery Order'\r\n                                : ''  }\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n\r\n                        {screen && (\r\n                          <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={'Delivery Details'}\r\n                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                \r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={deleteConfirm}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                 <div>Are You Want to Move the order Into the Sale Order Again</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                   \r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Delivery_Person_Id, label: filters?.Delivery_Person_Name }}\r\n                                            onChange={(e) => setFilters({ ...filters, Delivery_Person_Id: e.value, Delivery_Person_Name: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryDetailsList;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions, Switch } from \"@mui/material\";\r\nimport '../../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { getPreviousDate, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\n// import NewDeliveryOrder from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Add, Edit, FilterAlt, Visibility } from \"@mui/icons-material\";\r\nimport { convertedStatus } from \"../convertedStatus\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport NewDeliveryOrder from \"../SalesReportComponent/NewDeliveryOrder\";\r\nimport InvoiceBillTemplate from \"./newInvoiceTemplate\";\r\n\r\nimport TwoWheelerIcon from '@mui/icons-material/TwoWheeler';\r\nimport DeliveryDetailsList from \"./DeliveryDetailsList\";\r\nconst SalesDeliveryConvert = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [reload, setReload] = useState(false)\r\n    const [routes, setRoutes] = useState([])\r\n    const [area, setArea] = useState([])\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] = useState(false)\r\n\r\n    const [checked, setChecked] = useState(true)\r\n\r\n\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Sales_Person_Id: '',\r\n        SalsePersonGet: 'ALL',\r\n        Cancel_status: 0,\r\n        Route_Id: '',\r\n        RoutesGet: 'ALL',\r\n        Area_Id: '',\r\n        AreaGet: 'ALL'\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `sales/saleDelivery?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}&Route_Id=${filters?.Route_Id}&Area_Id=${filters?.Area_Id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Sales_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        filters?.Route_Id,\r\n        filters?.Area_Id,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/routes/dropdown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRoutes(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/areas/dropdown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setArea(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n    }, [])\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'So_Id',\r\n            ColumnHeader: 'Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_Date',\r\n            ColumnHeader: 'Sale Order Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            ColumnHeader: 'Status',\r\n            isVisible: 1,\r\n            align: 'center',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const convert = convertedStatus.find(status => status.id === Number(row?.isConverted));\r\n                return (\r\n                    <span className={'py-0 fw-bold px-2 rounded-4 fa-12 ' + convert?.color ?? 'bg-secondary text-white'}>\r\n                        {convert?.label ?? 'Undefined'}\r\n                    </span>\r\n                )\r\n            },\r\n        },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n\r\n                        <Tooltip title='Sales Delivery'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row});\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <TwoWheelerIcon className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n    }\r\n    const handleToggle = () => {\r\n\r\n        setScreen((prev) => !prev);\r\n        setIsDeliveryDetailsVisible((prev) => !prev);\r\n    };\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">\r\n                        {screen\r\n                            ? 'Sale Orders'\r\n                            : isValidObject(orderInfo)\r\n                        }\r\n             \r\n                    </h6>\r\n\r\n                    <div>\r\n                        {screen && (\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n\r\n                        {screen && (\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={() => {\r\n                                    setScreen(false);\r\n                                    setIsDeliveryDetailsVisible(true);\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'controlled' }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <CardContent className=\"p-0\">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : isDeliveryDetailsVisible ? (\r\n                        <DeliveryDetailsList\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() =>{ setReload(prev => !prev);setScreen(pre =>!pre)}}\r\n                            switchScreen={() => setScreen(true)}\r\n                            onToggle={handleToggle}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setReload(prev => !prev);  setScreen(prev => !prev)}}\r\n                            switchScreen={() => setScreen(true)}\r\n                            editOn={true}\r\n                        />\r\n                        // reload={() => {\r\n                        //     setReload(pre => !pre);\r\n                        //     setScreen(pre => !pre)\r\n                        // }}\r\n                        // switchScreen={switchScreen}\r\n                    )}\r\n                </CardContent>\r\n\r\n\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Salse Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Sales_Person_Id, label: filters?.SalsePersonGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Sales_Person_Id: e.value, SalsePersonGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Routes</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Route_Id, label: filters?.RoutesGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Route_Id: e.value, RoutesGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...routes.map(obj => ({ value: obj?.Route_Id, label: obj?.Route_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Route Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Area</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Area_Id, label: filters?.AreaGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Area_Id: e.value, AreaGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...area.map(obj => ({ value: obj?.Area_Id, label: obj?.Area_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Area Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesDeliveryConvert;\r\n\r\n\r\n\r\n\r\n"],"names":["taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","editValues","loadingOn","loadingOff","reload","switchScreen","editOn","storage","JSON","parse","localStorage","getItem","retailers","setRetailers","useState","products","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","initialValue","Company_Id","Company_id","Do_Date","ISOString","Retailer_Id","Retailer_Name","Delivery_Status","Delivery_Person_Id","Payment_Ref_No","Delivery_Person_Name","Payment_Mode","Payment_Status","Branch_Id","BranchId","Narration","Created_by","UserId","Product_Array","So_No","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isExclusiveBill","isInclusive","isNotTaxableBill","deliveryPerson","setDeliveryPerson","deliveryPersonList","setDeliveryPersonList","useEffect","_editValues$Products_","isValidObject","pre","_editValues$Do_Date","Do_Id","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Number","Sgst_P","Igst_P","Gst_P","Addition","Latitude","Longitude","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","error","console","toast","warn","fetchLocation","fetchLink","address","concat","then","data","success","catch","e","uniqueBrand","getUniqueData","closeAddProduct","Total_Invoice_value","reduce","o","item","itemRate","billQty","parseInt","Multiplication","product","gstPercentage","totalValueBeforeTax","acc","TotalValue","itemTax","basePrice","Subraction","TotalTax","_jsxs","_Fragment","children","_jsx","className","colSpan","Company_Name","Company_Address","Telephone_Number","type","value","onChange","target","Select","label","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","Name","selectedOption","Button","onClick","sx","ml","variant","startIcon","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref2","_row$Product","row","ColumnHeader","isVisible","_ref3","_row$Product2","HSN_Code","_ref4","_row$Units","align","Field_Name","Fied_Data","_ref5","_ref6","_row$Product3","_row$Product4","_row$Product5","_row$Amount","tax","NumberFormat","_ref7","_ref8","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref9","_ref10","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref11","IconButton","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","size","Edit","filter","color","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","method","bodyData","isGraterNumber","message","finally","Save","disabled","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","DialogContent","some","grp","push","RequiredStar","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","ind","required","Division","min","selectedIndex","text","i","DialogActions","ClearAll","onToggle","saleOrders","setSaleOrders","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","filters","setFilters","Fromdate","getPreviousDate","Todate","RetailerGet","CreatedByGet","Cancel_status","dialog","setDialog","saleOrderColumn","Tooltip","title","openDeleteDialog","itemData","closeDialog","Card","FilterAlt","Switch","checked","inputProps","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","Round_off","Sales_Person_Name","NewDeliveryOrder","Object","keys","DeliveryInvoiceTemplate","download","actionOpen","clearDetails","TitleText","Order_Id","style","verticalAlign","setReload","routes","setRoutes","area","setArea","setChecked","Sales_Person_Id","SalsePersonGet","Route_Id","RoutesGet","Area_Id","AreaGet","_convert$label","convert","convertedStatus","status","id","isConverted","Visibility","TwoWheelerIcon","DeliveryDetailsList","prev","handleToggle","InvoiceBillTemplate","Route_Name","Area_Name"],"sourceRoot":""}