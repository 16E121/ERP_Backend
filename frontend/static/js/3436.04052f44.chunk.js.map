{"version":3,"file":"static/js/3436.04052f44.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Reports/groupedReport.jsx"],"sourcesContent":["\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listPlugin from '@fullcalendar/list';\nimport Select from 'react-select';\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\nimport { fetchLink } from '../../Components/fetchComponent'\n\nconst ReportTaskTypeBasedCalendar = () => {\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const initialValueFilter = {\n        Emp_Id: '',\n        Project_Id: 0,\n        Task_Id: 0,\n        from: new Date().toISOString().split('T')[0],\n        to: new Date().toISOString().split('T')[0],\n        EmpGet: 'All Employee',\n        ProjectGet: 'All Project',\n        TaskGet: 'All Task',\n        TaskTypeGet: '',\n        TaskType: '',\n    }\n    const [groupedWorkDetais, setGroupedWorkDetais] = useState([])\n    const [selectedTask, setSelectedTask] = useState({});\n    const [dialog, setDialog] = useState(false);\n    const [filters, setFileters] = useState(initialValueFilter);\n    const [projects, setProjects] = useState([]);\n    const [usersDropDown, setUsersDropdown] = useState([]);\n    const [tasks, setTasks] = useState([]);\n    const [TaskTypeData, setTaskTypeData] = useState([]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `taskManagement/task/work/groupd?Emp_Id=${filters.Emp_Id}&Project_Id=${filters.Project_Id}&from=${filters.from}&to=${filters.to}&Task_Id=${filters.Task_Id}`\n        }).then(data => {\n            if (data.success) {\n                setGroupedWorkDetais(data.data)\n            }\n        }).catch(e => console.error(e))\n    }, [filters.Emp_Id, filters.Project_Id, filters.Task_Id, filters.from, filters.to])\n\n    useEffect(() => {\n        fetchLink({\n            address: `taskManagement/project/dropDown?Company_id=${parseData?.Company_id}`\n        }).then(data => {\n            if (data.success) {\n                setProjects(data.data)\n            }\n        }).catch(e => console.error(e))\n        fetchLink({\n            address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\n        }).then(data => {\n            if (data.success) {\n                setUsersDropdown(data.data)\n            }\n        }).catch(e => console.error(e))\n        fetchLink({\n            address: `taskManagement/task/assignEmployee/task/dropDown`\n        }).then(data => {\n            if (data.success) {\n                setTasks(data.data)\n            }\n        }).catch(e => console.error(e))\n        fetchLink({\n            address: `masters/taskType`\n        }).then((data) => {\n            if (data.success && data.data.length > 0) {\n                setTaskTypeData(data.data);\n                setFileters(pre => ({ ...pre, TaskType: data?.data[0]?.Task_Type_Id, TaskTypeGet: data?.data[0]?.Task_Type }))\n            }\n        }).catch(e => console.error(e))            \n    }, [parseData?.BranchId])\n\n    const formatTime24 = (time24) => {\n        const [hours, minutes] = time24.split(':').map(Number);\n\n        let hours12 = hours % 12;\n        hours12 = hours12 || 12;\n        const period = hours < 12 ? 'AM' : 'PM';\n        const formattedHours = hours12 < 10 ? '0' + hours12 : hours12;\n        const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n        const time12 = `${formattedHours}:${formattedMinutes} ${period}`;\n\n        return time12;\n    }\n\n    const TaskTypeArray = useMemo(() => {\n        if (groupedWorkDetais.length > 0) {\n            for (let i = 0; i < groupedWorkDetais.length; i++) {\n                if (Number(groupedWorkDetais[i]?.Task_Type_Id) === Number(filters?.TaskType)) {\n                    return groupedWorkDetais[i]?.TASK_GROUP\n                }\n            }\n        } else {\n            return []\n        }\n    }, [filters.TaskType, groupedWorkDetais])\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\n                    <Select\n                        value={{ value: filters?.Emp_Id, label: filters?.EmpGet }}\n                        onChange={(e) => setFileters({ ...filters, Emp_Id: e.value, EmpGet: e.label })}\n                        options={[{ value: '', label: 'All Employee' }, ...usersDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))]}\n                        styles={customSelectStyles}\n                        isSearchable={true}\n                        placeholder={\"Employee Name\"} />\n                </div>\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\n                    <Select\n                        value={{ value: filters?.Project_Id, label: filters?.ProjectGet }}\n                        onChange={(e) => setFileters({ ...filters, Project_Id: e.value, ProjectGet: e.label })}\n                        options={[...projects.map(obj => ({ value: obj.Project_Id, label: Number(obj.Project_Id) === 0 ? 'All Project' : obj.Project_Name }))]}\n                        styles={customSelectStyles}\n                        isSearchable={true}\n                        placeholder={\"Project Title\"} />\n                </div>\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\n                    <Select\n                        value={{ value: filters?.Task_Id, label: filters?.TaskGet }}\n                        onChange={(e) => setFileters({ ...filters, Task_Id: e.value, TaskGet: e.label })}\n                        options={[{ value: 0, label: 'All Task' }, ...tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }))]}\n                        styles={customSelectStyles}\n                        isSearchable={true}\n                        placeholder={\"Select Task\"} />\n                </div>\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\n                    <Select\n                        value={{ value: filters?.TaskType, label: filters?.TaskTypeGet }}\n                        onChange={(e) => setFileters({ ...filters, TaskType: e.value, TaskTypeGet: e.label })}\n                        options={[...TaskTypeData.map(obj => ({ value: obj.Task_Type_Id, label: obj.Task_Type }))]}\n                        styles={customSelectStyles}\n                        isSearchable={true}\n                        placeholder={\"Select Task Type\"} />\n                </div>\n            </div>\n\n            <div className=\"px-3 py-2 calendar\" >\n                <h4 className=\"mb-3 text-center text-primary\">Task Group - {filters?.TaskTypeGet}</h4>\n\n                <FullCalendar\n                    plugins={[timeGridPlugin, listPlugin, dayGridPlugin, interactionPlugin]}\n                    initialView=\"dayGridMonth\"\n                    initialDate={new Date()}\n                    events={\n                        TaskTypeArray.map(o => ({\n                            title: o?.Task_Name,\n                            start: new Date(o?.Work_Dt).toISOString().split('T')[0] + 'T' + o?.Start_Time,\n                            end: new Date(o?.Work_Dt).toISOString().split('T')[0] + 'T' + o?.End_Time,\n                            objectData: o\n                        }))\n                    }\n                    headerToolbar={{\n                        left: 'prev next',\n                        center: 'title',\n                        right: 'timeGridDay, timeGridWeek, dayGridMonth, listMonth',\n                    }}\n                    slotDuration={'00:20:00'}\n                    slotMinTime={'08:00:00'}\n                    slotMaxTime={'22:00:00'}\n                    showNonCurrentDates={false}\n                    editable={false}\n                    selectMirror\n                    eventClick={eve => {\n                        const eveObj = eve.event.extendedProps.objectData;\n                        setSelectedTask(eveObj);\n                        setDialog(true)\n                    }}\n                    datesSet={date => {\n                        setFileters(pre => ({ ...pre, from: date.startStr.split('T')[0], to: date.endStr.split('T')[0] }))\n                    }}\n                    height={1200}\n                />\n\n\n\n            </div>\n\n            <Dialog\n                open={dialog} maxWidth=\"sm\" fullWidth\n                onClose={() => { setDialog(false); setSelectedTask({}) }}>\n                <DialogTitle className=\"fa-18\">\n                    Work Details\n                </DialogTitle>\n                <DialogContent className=\"pb-0\">\n\n                    <div className=\"table-responsive pb-0\">\n                        <table className=\"table mb-0\">\n                            <tbody>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">EmpName</td>\n                                    <td className=\"border-1 fa-14\">{selectedTask?.EmployeeName}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Task</td>\n                                    <td className=\"border-1 fa-14\">{selectedTask?.Task_Name}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Date</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.Work_Dt && new Date(selectedTask?.Work_Dt).toLocaleDateString('en-IN', {\n                                            day: '2-digit', month: '2-digit', year: 'numeric'\n                                        })}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Start Time</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.Start_Time && formatTime24(selectedTask?.Start_Time)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">End Time</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.End_Time && formatTime24(selectedTask?.End_Time)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Duration</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.Tot_Minutes} ( Minutes )\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Description</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.Work_Done}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Status</td>\n                                    <td className=\"border-1 fa-14\">\n                                        {selectedTask?.WorkStatus}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-1 fa-14\">Project</td>\n                                    <td className=\"border-1 fa-14\">{selectedTask?.Project_Name}</td>\n                                </tr>\n                                {selectedTask?.Work_Param?.length > 0 && (\n                                    <tr>\n                                        <td colSpan={2} className=\"border-1 fa-14 text-center text-uppercase\">Parameter Values</td>\n                                    </tr>\n                                )}\n                                {selectedTask?.Work_Param?.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"border-1 fa-14\">{o?.Paramet_Name}</td>\n                                        <td className=\"border-1 fa-14\">\n                                            {\n                                                (isNaN(o?.Current_Value) || (o?.Paramet_Data_Type) !== 'number')\n                                                    ? o?.Current_Value\n                                                    : Number(o?.Current_Value).toLocaleString('en-IN')\n                                            }\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => { setDialog(false); setSelectedTask({}) }}>close</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nexport default ReportTaskTypeBasedCalendar;\n"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","ReportTaskTypeBasedCalendar","_selectedTask$Work_Pa","_selectedTask$Work_Pa2","localData","localStorage","getItem","parseData","JSON","parse","initialValueFilter","Emp_Id","Project_Id","Task_Id","from","Date","toISOString","split","to","EmpGet","ProjectGet","TaskGet","TaskTypeGet","TaskType","groupedWorkDetais","setGroupedWorkDetais","useState","selectedTask","setSelectedTask","dialog","setDialog","filters","setFileters","projects","setProjects","usersDropDown","setUsersDropdown","tasks","setTasks","TaskTypeData","setTaskTypeData","useEffect","fetchLink","concat","then","data","success","catch","e","console","error","Company_id","length","pre","_data$data$","_data$data$2","Task_Type_Id","Task_Type","BranchId","formatTime24","time24","hours","minutes","map","Number","hours12","period","formattedMinutes","TaskTypeArray","useMemo","i","_groupedWorkDetais$i","_groupedWorkDetais$i2","TASK_GROUP","_jsxs","_Fragment","children","className","_jsx","Select","value","label","onChange","options","obj","UserId","Name","styles","isSearchable","placeholder","Project_Name","Task_Name","FullCalendar","plugins","timeGridPlugin","listPlugin","dayGridPlugin","interactionPlugin","initialView","initialDate","events","o","title","start","Work_Dt","Start_Time","end","End_Time","objectData","headerToolbar","left","center","right","slotDuration","slotMinTime","slotMaxTime","showNonCurrentDates","editable","selectMirror","eventClick","eve","eveObj","event","extendedProps","datesSet","date","startStr","endStr","Dialog","open","maxWidth","fullWidth","onClose","DialogTitle","DialogContent","EmployeeName","toLocaleDateString","day","month","year","Tot_Minutes","Work_Done","WorkStatus","Work_Param","colSpan","Paramet_Name","isNaN","Current_Value","Paramet_Data_Type","toLocaleString","DialogActions","Button","onClick"],"sourceRoot":""}