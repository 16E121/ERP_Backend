{"version":3,"file":"static/js/3352.a28ab766.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","Pages/Reports/employeeAbstract.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel, IconButton } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} Field_Name\r\n * @property {'string'|'number'|'date'|'time'} Fied_Data\r\n * @property {string} ColumnHeader\r\n * @property {0|1} isVisible\r\n * @property {'left'|'right'|'center'} align\r\n * @property {boolean} [isCustomCell]\r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props\r\n * @param {Array<Object>} props.dataArray\r\n * @param {Array<Column>} props.columns\r\n * @param {Function} [props.onClickFun]\r\n * @param {boolean} [props.isExpendable]\r\n * @param {React.ReactElement} [props.expandableComp]\r\n * @param {number} [props.tableMaxHeight]\r\n * @param {number} [props.initialPageCount]\r\n * @param {boolean} [props.EnableSerialNumber]\r\n * @param {'small'|'medium'|'large'} [props.CellSize]\r\n * @param {boolean} [props.disablePagination]\r\n * @param {''} [props.title]\r\n */\r\n\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = ''\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'time':\r\n                return LocalTime(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='fa-13 border-end text-center'>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>{open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}</IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='fa-13 border-end text-center'>{(rowsPerPage * page) + index + 1}</TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => (\r\n                        isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                    ) && (\r\n                            (Boolean(column?.isCustomCell) === false || !column.Cell) ? (\r\n                                Object.entries(row).map(([key, value]) => (\r\n                                    (\r\n                                        (column.Field_Name === key)\r\n                                        &&\r\n                                        (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                    ) && (\r\n                                        <TableCell\r\n                                            key={columnInd}\r\n                                            className={`fa-13 border-end ` + (\r\n                                                column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                            )}\r\n                                            onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                        >\r\n                                            {formatString(value, column?.Fied_Data)}\r\n                                        </TableCell>\r\n                                    )\r\n                                ))\r\n                            ) : (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`fa-13 border-end ` + (\r\n                                        column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : ''\r\n                                    )}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name })}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n                    )}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {title && <h6 className='fw-bold text-muted'>{title}</h6>}\r\n            <TableContainer component={Paper} sx={{ maxHeight: tableMaxHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell className='fa-13 fw-bold border-end border-top text-center' style={{ backgroundColor: '#EDF0F7' }}>\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fa-13 fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`${(column.ColumnHeader || column?.Field_Name) ? ' fa-13 fw-bold border-end border-top p-2 appFont ' : ' p-0 '} ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div className=\"p-2 pb-0\">\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.element,\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined\r\n};\r\n\r\n\r\nexport default FilterableTable;","\nimport SMT_LOGO from './smt.png';\n\nexport const customTableStyles = {\n    table: {\n        style: {\n            width: 'auto',\n            backgroundColor: 'transparent',\n            // borderRadius: '5px',\n        }\n    },\n    rows: {\n        style: {\n            backgroundColor: 'transparent',\n        },\n    },\n    headCells: {\n        style: {\n            backgroundColor: '#6b9080f8',\n            color: 'white',\n            fontSize: '14px',\n            // borderRadius: '5px',\n        },\n    },\n};\n\nexport const customSelectStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        height: '45px',\n        background: 'rgba(255, 255, 255, 0.322)'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 9999,\n    }),\n};\n\nexport const customSelectStyles2 = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'transparent',\n        border: 'none',\n        color: 'rgba(255, 255, 255, 0.322)',\n        // minWidth: '160px'\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        color: 'black',\n        zIndex: 9999,\n    }),\n};\n\nexport const MainMenu = [\n    {\n        id: 1,\n        headname: 'Menu ID',\n        variant: 'head',\n        align: 'left',\n        width: 100\n    },\n    {\n        id: 2,\n        headname: 'MenuName',\n    },\n    {\n        id: 3,\n        headname: 'Read Rights'\n    },\n    {\n        id: 4,\n        headname: 'Add Rights'\n    },\n    {\n        id: 5,\n        headname: 'Edit Rights'\n    },\n    {\n        id: 6,\n        headname: 'Delete Rights'\n    },\n    {\n        id: 7,\n        headname: 'Print Rights'\n    },\n    {\n        id: 8,\n        headname: 'Action'\n    }\n];\n\nexport const companyDetails = [\n    {\n        dataBase: 1,\n        name: 'SHANKAR TRADERS',\n        business: 'Wholesale Merchant in Dhall',\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33AADFS6973R1ZD',\n        phone: '984-313-1353, 984-335-5166',\n        fssai: '12418012000818',\n        bankAccount: '0021 5032 0885 122',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 2,\n        name: 'SMT AGRO PRODUCTS',\n        business: '',\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\n        logo: SMT_LOGO,\n        gstin: '33ACMFS3420Q1ZQ',\n        phone: '0452-4371625',\n        fssai: '12418012000818',\n        bankAccount: '0025 3031 0875 947',\n        ifsc: 'TMBL0000002'\n    },\n    {\n        dataBase: 3,\n        name: 'BHAVANI TRADERS',\n        business: '',\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\n        logo: SMT_LOGO,\n        gstin: '33AAEFB6728J1ZG',\n        phone: '958-559-7641, 958-559-7614',\n        fssai: '12418012000670',\n        bankAccount: '0021 5005 0800 309',\n        ifsc: 'TMBL0000002'\n    },\n]","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import React, { useEffect, useState, useContext } from \"react\";\nimport { Card, CardContent, Paper, IconButton, Chip, Avatar } from '@mui/material';\nimport { MyContext } from \"../../Components/context/contextProvider\";\nimport Select from 'react-select';\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\nimport { AccountCircle, TaskAlt } from '@mui/icons-material';\nimport { fetchLink } from \"../../Components/fetchComponent\";\nimport FilterableTable from \"../../Components/filterableTable2\";\nimport { checkIsNumber } from \"../../Components/functions\";\n\nconst EmployeeAbstract = () => {\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const [empData, setEmpData] = useState({});\n    const { contextObj } = useContext(MyContext);\n    const [userDropDown, setUserDropDown] = useState([]);\n    const [filter, setFilter] = useState({\n        UserId: parseData.UserId,\n        Name: parseData.Name,\n    });\n\n    useEffect(() => {\n        setEmpData({})\n        fetchLink({\n            address: `dashboard/employeeAbstract?UserId=${filter?.UserId}`\n        }).then(data => {\n            if (data.success) {\n                setEmpData(data.data[0])\n            }\n        }).catch(e => console.error(e));\n    }, [filter?.UserId])\n\n    useEffect(() => {\n        fetchLink({\n            address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\n        }).then(data => {\n            if (data.success) {\n                setUserDropDown(data.data)\n            }\n        }).catch(e => console.error(e))\n    }, [])\n\n    return (\n        <>\n            <Card component={Paper}>\n\n                <div className=\"p-3 m-0 border-bottom row align-items-center\" >\n                    <div style={{ fontSize: '24px' }} className=\"flex-grow-1 col-lg-8 col-md-7 col-sm-4 col-12\">USER INFO</div>\n                    <div className=\"col-lg-4 col-md-5 col-sm-8 col-12\">\n                        {Number(contextObj?.Print_Rights) === 1 && (\n                            <Select\n                                value={{ value: filter?.UserId, label: filter?.Name }}\n                                onChange={(e) => setFilter({ ...filter, UserId: e.value, Name: e.label })}\n                                options={[\n                                    { value: parseData?.UserId, label: parseData?.Name },\n                                    ...userDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))\n                                ]}\n                                styles={customSelectStyles}\n                                isDisabled={Number(contextObj?.Print_Rights) === 0}\n                                isSearchable={true}\n                                placeholder={\"User Name\"}\n                            />\n                        )}\n                    </div>\n                </div>\n\n                <CardContent className=\"py-2\">\n\n                    <div className=\"row\">\n\n                        <div className=\"col-md-6 p-2\">\n                            <div className=\"d-flex align-items-center rounded-4 p-2 border\">\n\n                                <div className=\"pe-3\">\n                                    <IconButton className=\"border p-1\">\n                                        <AccountCircle sx={{ fontSize: '50px' }} className=\"text-muted\" />\n                                    </IconButton>\n                                </div>\n\n                                <div className=\" flex-grow-1\">\n                                    <h6 className=\"mb-0 text-primary\">{empData?.Name}</h6>\n                                    <p className=\"mb-0 fa-14\">{empData?.UserType}</p>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6 p-2\">\n\n                            <div className=\"d-flex align-items-center rounded-4 p-2 border\">\n\n                                <div className=\"pe-3\">\n                                    <IconButton className=\"border p-1\">\n                                        <TaskAlt sx={{ fontSize: '50px' }} className=\"text-muted\" />\n                                    </IconButton>\n                                </div>\n\n                                <div className=\" flex-grow-1\">\n                                    <p className=\"mb-0 fa-14 d-flex pe-2\">\n                                        <span className=\"flex-grow-1\">Projects</span>\n                                        {empData?.Projects?.length}\n                                    </p>\n                                    <p className=\"mb-0 fa-14 d-flex pe-2\">\n                                        <span className=\"flex-grow-1\">Tasks</span>\n                                        {empData?.AssignedTasks?.length}\n                                    </p>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <hr className=\"text-muted\" />\n\n                    <h6 className=\"mt-2 mb-3 ps-3\">Projects ( {empData?.Projects?.length} )</h6>\n\n                    <div className=\"px-3\">\n                        {empData?.Projects?.length > 0 && empData?.Projects?.map((o, i) => (\n                            <Chip\n                                key={i}\n                                color=\"primary\"\n                                avatar={\n                                    <Avatar className=\"text-uppercase\">\n                                        {o?.Project_Name[0]}\n                                    </Avatar>\n                                }\n                                className=\"mx-1\"\n                                label={o?.Project_Name}\n                            />\n                        ))}\n                    </div>\n\n                    <br />\n\n                    <h6 className=\"mt-2 mb-3 ps-3\">Tasks ( {empData?.AssignedTasks?.length} )</h6>\n\n                    <FilterableTable\n                        columns={[\n                            {\n                                Field_Name: \"Task_Name\",\n                                Fied_Data: \"string\",\n                                isVisible: 1,\n                                OrderBy: 1,\n                            },\n                            {\n                                Field_Name: \"Task_Desc\",\n                                Fied_Data: \"string\",\n                                isVisible: 1,\n                                OrderBy: 2,\n                            },\n                            {\n                                Field_Name: \"Est_Start_Dt\",\n                                Fied_Data: \"date\",\n                                isVisible: 1,\n                                OrderBy: 3,\n                            },\n                            {\n                                Field_Name: \"Est_End_Dt\",\n                                Fied_Data: \"date\",\n                                isVisible: 1,\n                                OrderBy: 4,\n                            },\n                            {\n                                Field_Name: \"Sch_Time\",\n                                Fied_Data: \"string\",\n                                isVisible: 1,\n                                OrderBy: 1,\n                            },\n                            {\n                                Field_Name: \"EN_Time\",\n                                Fied_Data: \"string\",\n                                isVisible: 1,\n                                OrderBy: 1,\n                            },\n                            {\n                                Field_Name: \"Sch_Period\",\n                                Fied_Data: \"string\",\n                                isVisible: 1,\n                                OrderBy: 1,\n                            },\n                        ]}\n                        dataArray={Array.isArray(empData.AssignedTasks) ? empData.AssignedTasks : []}\n                        isExpendable={true}\n                        EnableSerialNumber={true}\n                        expandableComp={({ row }) => {\n                            return (\n                                <FilterableTable\n                                    initialPageCount={15}\n                                    dataArray={Array.isArray(row.Work_Details) ? row.Work_Details : []}\n                                    EnableSerialNumber={true}\n                                    columns={[\n                                        {\n                                            Field_Name: 'Work_Dt',\n                                            isVisible: 1,\n                                            Fied_Data: 'date',\n                                        },\n                                        {\n                                            Field_Name: 'Start_Time',\n                                            isVisible: 1,\n                                            Fied_Data: 'string',\n                                        },\n                                        {\n                                            Field_Name: 'End_Time',\n                                            isVisible: 1,\n                                            Fied_Data: 'string',\n                                        },\n                                        {\n                                            Field_Name: 'Tot_Minutes',\n                                            isVisible: 1,\n                                            Fied_Data: 'number',\n                                        },\n                                        {\n                                            Field_Name: 'Work_Done',\n                                            isVisible: 1,\n                                            Fied_Data: 'string',\n                                        },\n                                        {\n                                            Field_Name: 'Parameters',\n                                            isVisible: 1,\n                                            Fied_Data: 'string',\n                                            isCustomCell: true,\n                                            Cell: ({ row }) => (\n                                                <div className=\" d-flex align-items-center flex-wrap p-2 pb-0\">\n                                                    {Array.isArray(row.Parameter_Details) && row.Parameter_Details.map((oo, oi) => (\n                                                        <div className=\"d-flex align-items-center me-2\">\n                                                            <p key={oi} className=\"me-2\">\n                                                                {oo?.Paramet_Name}: \n                                                            </p>\n                                                            <p className=\" fw-bold px-3 py-1 border rounded-3 \">\n                                                                {((!checkIsNumber(oo?.Current_Value) || oo?.Paramet_Data_Type !== 'number')\n                                                                    ? oo?.Current_Value\n                                                                    : Number(oo?.Current_Value).toLocaleString('en-IN'))\n                                                                }\n                                                            </p> \n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            )\n                                        },\n                                    ]}\n                                />\n                            )\n                        }}\n                        tableMaxHeight={740}\n                    />\n                    {/* \n                    {empData?.AssignedTasks?.length > 0 && (\n                        <div className=\"table-responsive\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"fa-13 border\">SNo</th>\n                                        <th className=\"fa-13 border\">TaskName</th>\n                                        <th className=\"fa-13 border\">From - To</th>\n                                        <th className=\"fa-13 border\">Time</th>\n                                        <th className=\"fa-13 border\">Duration</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {empData?.AssignedTasks?.map((o, i) => (\n                                        <ExtendableRow key={i} sno={++i} o={o} className=\"h-b\" />\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )} */}\n                </CardContent>\n            </Card>\n        </>\n    )\n}\n\nexport default EmployeeAbstract;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}"],"names":["FilterableTable","_ref","dataArray","columns","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","title","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","columnAlign","type","class","sortedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref2","row","index","open","setOpen","fontSize","_jsxs","Fragment","children","TableRow","_jsx","TableCell","className","IconButton","size","onClick","pre","KeyboardArrowUp","sx","KeyboardArrowDown","map","column","columnInd","_columnAlign$find2","isEqualNumber","Defult_Display","isVisible","Boolean","isCustomCell","Cell","align","find","String","toLowerCase","Field_Name","Object","entries","_ref3","_columnAlign$find","key","value","console","log","Fied_Data","colSpan","Number","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","style","backgroundColor","ke","isColumnVisible","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find3","_column$Field_Name","_columnAlign$find4","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","ColumnHeader","replace","concat","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","undefined","customTableStyles","table","width","rows","headCells","color","customSelectStyles","control","provided","state","height","background","menu","zIndex","MainMenu","id","headname","variant","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","createSvgIcon","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","overridesResolver","props","styles","ownerState","root","colorDefault","theme","position","display","alignItems","justifyContent","flexShrink","fontFamily","typography","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","vars","shape","_extends","palette","default","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","alt","childrenProp","slots","slotProps","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","EmployeeAbstract","_empData$Projects","_empData$AssignedTask","_empData$Projects2","_empData$Projects3","_empData$Projects4","_empData$AssignedTask2","localData","localStorage","getItem","parseData","JSON","parse","empData","setEmpData","contextObj","useContext","MyContext","userDropDown","setUserDropDown","filter","setFilter","UserId","Name","useEffect","fetchLink","then","success","catch","e","error","Company_id","_Fragment","Card","Print_Rights","Select","label","onChange","options","obj","isDisabled","isSearchable","placeholder","CardContent","AccountCircle","UserType","TaskAlt","Projects","AssignedTasks","o","i","Chip","avatar","Project_Name","OrderBy","isArray","Work_Details","Parameter_Details","oo","oi","Paramet_Name","checkIsNumber","Current_Value","Paramet_Data_Type","toLocaleString","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","getCardUtilityClass","CardRoot","raised","elevation","_excluded2","_excluded3","parameters","initialElementType","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","externalSlotProps","slotComponent","internalRef","mergedProps","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","appendOwnerState","keys","forEach","propName"],"sourceRoot":""}